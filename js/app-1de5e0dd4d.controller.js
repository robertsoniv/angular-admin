!function(){"use strict";angular.module("orderCloud",["ngSanitize","ngAnimate","ngMessages","ngTouch","ui.tree","ui.router","ui.select","ui.bootstrap","ui.select","orderCloud.sdk","LocalForageModule","toastr","angular-busy","jcs-autoValidate","treeControl","hl.sticky","angularPayments"])}(),function(){"use strict";!function(){angular.module("orderCloud").run(["$templateCache",function($templateCache){$templateCache.put("account/templates/account.html",'<article class="row">\r\n	<div class="col-sm-10 col-md-8 col-lg-6">\r\n		<header class="l-page-header">\r\n			<h3 class="l-page-header__title">\r\n				<i class="fa fa-user-circle-o"></i> My Account\r\n			</h3>\r\n		</header>\r\n		<form class="progressive" name="account.profileForm" autocomplete="off" novalidate ng-submit="account.updateProfile()" oc-readonly-roles="MeAdmin" pretty-submit>\r\n			<fieldset class="form-group row">\r\n				<div class="col-xs-6">\r\n					<label for="FirstName">First name</label>\r\n					<input id="FirstName" name="FirstName" type="text" class="form-control" ng-model="account.profile.FirstName" required>\r\n				</div>\r\n				<div class="col-xs-6">\r\n					<label for="LastName">Last name</label>\r\n					<input id="LastName" name="LastName" type="text" class="form-control" ng-model="account.profile.LastName" required>\r\n				</div>\r\n			</fieldset>\r\n			<fieldset class="form-group">\r\n				<label for="Email">Email address</label>\r\n				<input id="Email" name="Email" type="email" class="form-control" ng-model="account.profile.Email" required>\r\n			</fieldset>\r\n			<fieldset class="form-group">\r\n				<label for="Phone">Phone number</label>\r\n				<input id="Phone" name="Phone" type="tel" placeholder="(Optional)" class="form-control" ng-model="account.profile.Phone">\r\n			</fieldset>\r\n			<button type="submit" class="btn btn-default" oc-if-roles="MeAdmin">Update profile</button>\r\n			<button type="button" class="btn btn-default" oc-if-roles="MeAdmin" ng-click="account.changePassword()"><i class="fa fa-lock"></i> Change Password</button>\r\n		</form>\r\n		<hr>\r\n		<form name="account.settingsForm" ng-submit="account.updateUsername()" autocomplete="off" novalidate oc-readonly-roles="MeAdmin" pretty-submit>\r\n			<fieldset class="form-group">\r\n				<label for="Username">Username</label>\r\n				<input id="Username" name="Username" ng-change="account.usernameChange()" type="text" class="form-control" ng-model="account.profile.Username" required>\r\n				<p class="help-block">Your user ID is <code>{{account.profile.ID}}</code> and can be changed\r\n					<a ui-sref="adminUsers" oc-if-roles="AdminUserReader || AdminUserAdmin">in admin users</a>\r\n					<span ng-if="!application.userIsAuthorized([\'AdminUserReader\', \'AdminUserAdmin\'], true)">by the site administrator.</span>\r\n				</p>\r\n			</fieldset>\r\n			<button type="submit" class="btn btn-default"  oc-if-roles="MeAdmin">Update username</button>\r\n		</form>\r\n		<hr>\r\n		<button type="button" class="btn btn-danger btn-block" ng-click="application.logout()"><i class="fa fa-power-off"></i> Logout</button>\r\n	</div>\r\n</article>'),$templateCache.put("account/templates/changePassword.modal.html",'<form name="ChangePasswordForm" ng-submit="changePasswordModal.submit()" novalidate autocomplete="off">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="changePasswordModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><i class="fa fa-lock"></i> Change Password</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <div class="form-group">\r\n                <label>Current Password</label>\r\n                <input type="password" ng-model="changePasswordModal.currentUser.CurrentPassword" class="form-control" required />\r\n            </div>\r\n            <div class="form-group">\r\n                <label>New Password</label>\r\n                <input type="password" ng-model="changePasswordModal.currentUser.NewPassword" pattern="^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$" pattern-err-type="customPassword" class="form-control" confirmpassword="{{changePasswordModal.currentUser.ConfirmPassword}}" required />\r\n            </div>\r\n            <div class="form-group">\r\n                <label>Confirm Password</label>\r\n                <input type="password" ng-model="changePasswordModal.currentUser.ConfirmPassword" pattern="^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$" pattern-err-type="customPassword" class="form-control" confirmpassword="{{changePasswordModal.currentUser.NewPassword}}" required />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block"\r\n                ng-disabled="ChangePasswordForm.$invalid || changePasswordModal.currentUser.NewPassword != changePasswordModal.currentUser.ConfirmPassword">\r\n            Update Password\r\n        </button>\r\n    </div>\r\n</form>\r\n'),$templateCache.put("account/templates/confirmPassword.modal.html",'<form name="confirmPasswordModal.form" ng-submit="confirmPasswordModal.submit()">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="confirmPasswordModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">Confirm Your Password</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="ConfirmPassword">Please enter your password to continue</label>\r\n            <input id="ConfirmPassword" name="ConfirmPassword" type="password" ng-model="confirmPasswordModal.password" class="form-control" autofocus required />\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button class="btn btn-primary btn-block" type="submit" ng-disabled="confirmPasswordModal.form.$invalid">Update Profile</button>\r\n    </div>\r\n</form>\r\n'),$templateCache.put("adminAddresses/templates/adminAddressCreate.modal.html",'<form name="adminAddressCreateModal.form" class="form-horizontal" ng-submit="adminAddressCreateModal.submit()" cg-busy="adminAddressCreateModal.loading" autocomplete="off" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="adminAddressCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Admin Address</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressID">Address ID</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressID" name="ID" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" ng-model="adminAddressCreateModal.adminAddress.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressName">Address Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressName" name="AddressName" ng-model="adminAddressCreateModal.adminAddress.AddressName" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressCompanyName">Company Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressCompanyName" name="CompanyName" placeholder="(Optional)" ng-model="adminAddressCreateModal.adminAddress.CompanyName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressFirstName">First Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressFirstName" name="FirstName" placeholder="(Optional)" ng-model="adminAddressCreateModal.adminAddress.FirstName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressLastName">Last Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressLastName" name="LastName" placeholder="(Optional)" ng-model="adminAddressCreateModal.adminAddress.LastName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressStreet1">Street 1</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressStreet1" name="Street1" ng-model="adminAddressCreateModal.adminAddress.Street1" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressStreet2">Street 2</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressStreet2" name="Street2" placeholder="(Optional)" ng-model="adminAddressCreateModal.adminAddress.Street2" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressCity">City</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressCity" name="City" ng-model="adminAddressCreateModal.adminAddress.City" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" ng-if="(adminAddressCreateModal.states | filter:{country:adminAddressCreateModal.adminAddress.Country}).length">\r\n            <label class="col-sm-3 control-label" for="addressState">State</label>\r\n            <div class="col-sm-9">\r\n                <select id="addressState" name="State" class="form-control" ng-options="state.value as state.label for state in adminAddressCreateModal.states | filter:{country:adminAddressCreateModal.adminAddress.Country}" ng-model="adminAddressCreateModal.adminAddress.State" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" ng-if="!(adminAddressCreateModal.states | filter:{country:adminAddressCreateModal.adminAddress.Country}).length">\r\n            <label class="col-sm-3 control-label" for="addressState">State</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressState" name="State" ng-model="adminAddressCreateModal.adminAddress.State" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressZip">Zip</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressZip" name="Zip" ng-model="adminAddressCreateModal.adminAddress.Zip" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressID">Country</label>\r\n            <div class="col-sm-9">\r\n                <select id="addressCountry" name="Country" class="form-control" ng-options="country.value as country.label for country in adminAddressCreateModal.countries" ng-model="adminAddressCreateModal.adminAddress.Country" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressPhone">Phone</label>\r\n            <div class="col-sm-9">\r\n                <input type="tel" class="form-control" id="addressPhone" name="Phone" ng-model="adminAddressCreateModal.adminAddress.Phone" />\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="adminAddressCreateModal.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("adminAddresses/templates/adminAddressEdit.modal.html",'<form name="adminAddressEditModal.form" class="form-horizontal" ng-submit="adminAddressEditModal.submit()" cg-busy="adminAddressEditModal.loading" autocomplete="off" novalidate oc-readonly-roles=AddressAdmin>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="adminAddressEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> {{adminAddressEditModal.adminAddressName}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressID">Address ID</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressID" name="ID" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" ng-model="adminAddressEditModal.adminAddress.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressName">Address Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressName" name="AddressName" ng-model="adminAddressEditModal.adminAddress.AddressName" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressCompanyName">Company Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressCompanyName" name="CompanyName" placeholder="(Optional)" ng-model="adminAddressEditModal.adminAddress.CompanyName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressFirstName">First Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressFirstName" name="FirstName" placeholder="(Optional)" ng-model="adminAddressEditModal.adminAddress.FirstName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressLastName">Last Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressLastName" name="LastName" placeholder="(Optional)" ng-model="adminAddressEditModal.adminAddress.LastName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressStreet1">Street 1</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressStreet1" name="Street1" ng-model="adminAddressEditModal.adminAddress.Street1" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressStreet2">Street 2</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressStreet2" name="Street2" placeholder="(Optional)" ng-model="adminAddressEditModal.adminAddress.Street2" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressCity">City</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressCity" name="City" ng-model="adminAddressEditModal.adminAddress.City" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" ng-if="(adminAddressEditModal.states | filter:{country:adminAddressEditModal.adminAddress.Country}).length">\r\n            <label class="col-sm-3 control-label" for="addressState">State</label>\r\n            <div class="col-sm-9">\r\n                <select id="addressState" name="State" class="form-control" ng-options="state.value as state.label for state in adminAddressEditModal.states | filter:{country:adminAddressEditModal.adminAddress.Country}" ng-model="adminAddressEditModal.adminAddress.State" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" ng-if="!(adminAddressEditModal.states | filter:{country:adminAddressEditModal.adminAddress.Country}).length">\r\n            <label class="col-sm-3 control-label" for="addressState">State</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressState" name="State" ng-model="adminAddressEditModal.adminAddress.State" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressZip">Zip</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressZip" name="Zip" ng-model="adminAddressEditModal.adminAddress.Zip" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressID">Country</label>\r\n            <div class="col-sm-9">\r\n                <select id="addressCountry" name="Country" class="form-control" ng-options="country.value as country.label for country in adminAddressEditModal.countries" ng-model="adminAddressEditModal.adminAddress.Country" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressPhone">Phone</label>\r\n            <div class="col-sm-9">\r\n                <input type="tel" class="form-control" id="addressPhone" name="Phone" ng-model="adminAddressEditModal.adminAddress.Phone" />\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block">Save</button>\r\n    </div>\r\n</form>\r\n'),$templateCache.put("adminAddresses/templates/adminAddresses.html",'<article ui-view>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            Admin Addresses\r\n        </h3>\r\n        <!--====== CREATE ======-->\r\n        <div class="l-page-header__btns" oc-if-roles="AddressAdmin">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="adminAddresses.createAddress()"><i class="fa fa-plus-circle"></i>\r\n                New Admin Address\r\n            </button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH/FILTERS ======-->\r\n    <div ng-if="adminAddresses.list.Items.length || (!adminAddresses.list.Items.length && adminAddresses.searchResults)">\r\n        <form name="adminAddresses.searchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon"><i class="fa fa-search"></i></span>\r\n                    <input type="search" ng-change="adminAddresses.search()" ng-model-options="{debounce:1000}" placeholder="Search admin addresses..." ng-model="adminAddresses.parameters.search" class="form-control">\r\n                <span ng-if="adminAddresses.searchResults" class="input-group-btn">\r\n                    <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="adminAddresses.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear Search</span></button>\r\n                </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="adminAddresses.searchLoading">\r\n        <div class="no-matches" ng-if="!adminAddresses.list.Items.length">\r\n            <b ng-if="adminAddresses.searchResults">No matches found.</b>\r\n            <b ng-if="!adminAddresses.searchResults">This seller organization does not have any admin addresses.</b>\r\n        </div>\r\n        <div ng-if="adminAddresses.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6">\r\n                    <button ng-if="adminAddresses.selectedCount" class="btn btn-danger btn-xs" ng-click="adminAddresses.deleteSelected()">\r\n                        <i class="fa fa-trash"></i> Delete {{adminAddresses.selectedCount == 1 ? "Address" : (adminAddresses.selectedCount + " Addresses")}}\r\n                    </button>\r\n                </div>\r\n                <div class="col-xs-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? adminAddresses.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        adminAddresses.list.Meta.ItemRange[1] + \' of \' + adminAddresses.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-adminaddress-table">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col oc-if-roles="AddressAdmin">\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th ng-click="adminAddresses.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="adminAddresses.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminAddresses.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="adminAddresses.updateSort(\'AddressName\')">\r\n                            Name\r\n                            <i class="fa fa-caret-down" ng-show="adminAddresses.parameters.sortBy == \'AddressName\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminAddresses.parameters.sortBy == \'!AddressName\'"></i>\r\n                        </th>\r\n                        <th ng-click="adminAddresses.updateSort(\'Street1\')">\r\n                            Address\r\n                            <i class="fa fa-caret-down" ng-show="adminAddresses.parameters.sortBy == \'Street1\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminAddresses.parameters.sortBy == \'!Street1\'"></i>\r\n                        </th>\r\n                        <th oc-if-roles="AddressAdmin"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="adminAddress in adminAddresses.list.Items">\r\n                        <td>{{adminAddress.ID}}</td>\r\n                        <td>\r\n                            <a href="" ng-click="adminAddresses.editAddress(this)">{{adminAddress.AddressName}}</a>\r\n                        </td>\r\n                        <td>{{adminAddress | address}} <br ng-if="application.$ocMedia(\'max-width:767px\')"> {{adminAddress.City + \', \' + adminAddress.State + \' \' +\r\n                            adminAddress.Zip}}\r\n                        </td>\r\n                        <td oc-if-roles="AddressAdmin">\r\n                            <button type="button" class="btn btn-danger btn-xs" ng-click="adminAddresses.deleteAddress(this)">\r\n                                <i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="adminAddresses.list.Meta.TotalPages > 1"\r\n                total-items="adminAddresses.list.Meta.TotalCount"\r\n                items-per-page="adminAddresses.list.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="adminAddresses.list.Meta.TotalPages > 5"\r\n                ng-model="adminAddresses.list.Meta.Page"\r\n                ng-change="adminAddresses.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="adminAddresses.list.Meta.Page < adminAddresses.list.Meta.TotalPages"\r\n                    ng-click="adminAddresses.loadMore()">Load More\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</article>\r\n'),$templateCache.put("adminUserGroups/templates/adminUserGroup.html",'<ol class="breadcrumb">\r\n    <li><a href="" ui-sref="adminUserGroups">Admin User Groups</a></li>\r\n    <li class="active">{{adminUserGroup.group.Name}}</li>\r\n</ol>\r\n<div class="row">\r\n    <div class="col-sm-4 col-lg-3">\r\n        <nav class="navmenu navmenu-default navmenu-inline" role="navigation">\r\n            <a href="" class="navmenu-brand">\r\n                <i class="fa fa-bars pull-right visible-xs" ng-click="adminUserGroup.showNav = !adminUserGroup.showNav"></i>\r\n                {{adminUserGroup.group.Name}}\r\n            </a>\r\n            <ul class="nav navmenu-nav" uib-collapse="!adminUserGroup.showNav && (application.$ocMedia(\'max-width:767px\'))">\r\n                <li ng-class="{\'active\':application.$state.is(\'adminUserGroup\')}">\r\n                    <a href="" ui-sref="adminUserGroup"><i class="fa fa-cog"></i> Settings</a>\r\n                </li>\r\n                <li ui-sref-active="active">\r\n                    <a href="" ui-sref=".security"><i class="fa fa-lock"></i> Security</a>\r\n                </li>\r\n                <li ui-sref-active="active">\r\n                    <a href="" ui-sref=".users"><i class="fa fa-user"></i> Users</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n    <article class="col-sm-8 col-lg-9" ui-view cg-busy="application.stateLoading(\'adminUserGroup\')">\r\n        <header class="l-page-header">\r\n            <h3 class="l-page-header__title">Admin User Group Settings</h3>\r\n        </header>\r\n        <div class="row">\r\n            <div class="col-sm-9 col-lg-8">\r\n                <form name="adminUserGroup.editForm" class="form-horizontal" ng-submit="adminUserGroup.update()" oc-readonly-roles="AdminUserGroupAdmin">\r\n                    <fieldset class="form-group">\r\n                        <label for="userGroupID" class="col-sm-4 control-label">User Group ID</label>\r\n                        <div class="col-sm-8">\r\n                            <input type="text" id="userGroupID" class="form-control" name="ID" ng-model="adminUserGroup.model.ID" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name">\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <label for="userGroupName" class="col-sm-4 control-label">Name</label>\r\n                        <div class="col-sm-8">\r\n                            <input type="text" id="userGroupName" class="form-control" name="Name" ng-model="adminUserGroup.model.Name" required>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <label for="userGroupDescription" class="col-sm-4 control-label">Description</label>\r\n                        <div class="col-sm-8">\r\n                            <textarea rows="4" id="userGroupDescription" class="form-control" name="Description" ng-model="adminUserGroup.model.Description" placeholder="(Optional)"></textarea>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <div class="col-sm-offset-4 col-sm-8">\r\n                            <button type="submit" class="btn btn-primary btn-block">Update User Group</button>\r\n                        </div>\r\n                    </fieldset>\r\n                    <hr>\r\n                    <button type="button" class="btn btn-danger btn-block" ng-click="adminUserGroup.delete()"><i class="fa fa-trash-o"></i> Delete User Group</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </article>\r\n</div>'),$templateCache.put("adminUserGroups/templates/adminUserGroupCreate.modal.html",'<form name="adminUserGroupCreateModal.form" class="form-horizontal" ng-submit="adminUserGroupCreateModal.submit()" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="adminUserGroupCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Admin User Group</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="UserGroupID" class="control-label col-sm-3">User Group ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="UserGroupID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="adminUserGroupCreateModal.userGroup.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="UserGroupName" class="control-label col-sm-3">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="UserGroupName" name="Name" type="text" class="form-control" ng-model="adminUserGroupCreateModal.userGroup.Name" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="UserGroupDescription" class="control-label col-sm-3">Description</label>\r\n            <div class="col-sm-9">\r\n                <textarea rows="4" id="UserGroupDescription" placeholder="Describe this group..." name="Description" type="text" class="form-control" ng-model="adminUserGroupCreateModal.userGroup.Description"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" cg-busy="adminUserGroupCreateModal.loading" ng-disabled="adminUserGroupCreateModal.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("adminUserGroups/templates/adminUserGroups.html",'<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">Admin User Groups</h3>\r\n        <div class="l-page-header__btns" oc-if-roles="AdminUserGroupAdmin">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="adminUserGroups.createGroup()"><i class="fa fa-plus-circle"></i> New Admin User Group</button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH/FILTERS ======-->\r\n    <div ng-if="adminUserGroups.list.Items.length || (!adminUserGroups.list.Items.length && adminUserGroups.searchResults)">\r\n        <form name="adminUserGroups.searchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-search"></i>\r\n                    </span>\r\n                    <input type="search" ng-change="adminUserGroups.search()" ng-model-options="{debounce:1000}" placeholder="Search admin user groups..." ng-model="adminUserGroups.parameters.search" class="form-control">\r\n                    <span ng-if="adminUserGroups.searchResults" class="input-group-btn">\r\n                        <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="adminUserGroups.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear Search</span></button>\r\n                    </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="adminUserGroups.searchLoading">\r\n        <div class="no-matches" ng-if="!adminUserGroups.list.Items.length">\r\n            <b ng-if="adminUserGroups.searchResults">No matches found.</b>\r\n            <b ng-if="!adminUserGroups.searchResults">This seller organization does not have any admin user groups.</b>\r\n        </div>\r\n        <div ng-if="adminUserGroups.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6 col-xs-offset-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? adminUserGroups.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        adminUserGroups.list.Meta.ItemRange[1] + \' of \' + adminUserGroups.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-usergroup-table">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col oc-if-roles="AdminUserGroupAdmin">\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th ng-click="adminUserGroups.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="adminUserGroups.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminUserGroups.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="adminUserGroups.updateSort(\'Name\')">\r\n                            Name\r\n                            <i class="fa fa-caret-down" ng-show="adminUserGroups.parameters.sortBy == \'Name\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminUserGroups.parameters.sortBy == \'!Name\'"></i>\r\n                        </th>\r\n                        <th>Description</th>\r\n                        <th oc-if-roles="AdminUserGroupAdmin"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="adminUserGroup in adminUserGroups.list.Items">\r\n                        <td>\r\n                            {{adminUserGroup.ID}}\r\n                        </td>\r\n                        <td><a href="" ui-sref="adminUserGroup({adminusergroupid:adminUserGroup.ID})">{{adminUserGroup.Name}}</a></td>\r\n                        <td>{{adminUserGroup.Description}}</td>\r\n                        <td oc-if-roles="AdminUserGroupAdmin">\r\n                            <button class="btn btn-danger btn-xs" ng-click="adminUserGroups.deleteGroup(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="adminUserGroups.list.Meta.TotalPages > 1"\r\n                total-items="adminUserGroups.list.Meta.TotalCount"\r\n                items-per-page="adminUserGroups.list.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="adminUserGroups.list.Meta.TotalPages > 5"\r\n                ng-model="adminUserGroups.list.Meta.Page"\r\n                ng-change="adminUserGroups.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="adminUserGroups.list.Meta.Page < adminUserGroups.list.Meta.TotalPages"\r\n                    ng-click="adminUserGroups.loadMore()">Load More</button>\r\n        </div>\r\n    </div>\r\n</article>'),
$templateCache.put("adminUsers/templates/adminUserCreate.modal.html",'<form name="adminUserCreateModal.form" class="form-horizontal" ng-submit="adminUserCreateModal.submit()" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="adminUserCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Admin User</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="ID" class="control-label col-sm-3">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="ID" name="ID" type="text" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="adminUserCreateModal.user.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Username" class="control-label col-sm-3">Username</label>\r\n            <div class="col-sm-9">\r\n                <input id="Username" name="Username" type="text" class="form-control" ng-model="adminUserCreateModal.user.Username" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Password" class="control-label col-sm-3">Password</label>\r\n            <div class="col-sm-9">\r\n                <input id="Password" name="Password" type="password" pattern=\'^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$\' pattern-err-type="customPassword" class="form-control" ng-model="adminUserCreateModal.user.Password" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="FirstName" class="control-label col-sm-3">First Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="FirstName" name="FirstName" type="text" class="form-control" ng-model="adminUserCreateModal.user.FirstName" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="LastName" class="control-label col-sm-3">Last Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="LastName" name="LastName" type="text" class="form-control" ng-model="adminUserCreateModal.user.LastName" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Phone" class="control-label col-sm-3">Phone Number</label>\r\n            <div class="col-sm-9">\r\n                <input id="Phone" name="Phone" placeholder="(Optional)" type="tel" class="form-control" ng-model="adminUserCreateModal.user.Phone" />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Email" class="control-label col-sm-3">Email Address</label>\r\n            <div class="col-sm-9">\r\n                <input id="Email" name="Email" type="email" class="form-control" ng-model="adminUserCreateModal.user.Email" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="checkbox">\r\n                    <label for="Active">\r\n                        <input id="Active" name="Active" type="checkbox" ng-model="adminUserCreateModal.user.Active"/>\r\n                        Active\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-block btn-primary" ng-disabled="adminUserCreateModal.form.form" cg-busy="adminUserCreateModal.loading">Submit</button>\r\n    </div>\r\n</form>'),$templateCache.put("adminUsers/templates/adminUserEdit.modal.html",'<form name="adminUserEditModal.form" class="form-horizontal" ng-submit="adminUserEditModal.submit()" novalidate ng-disabled="adminUserEditModal.loading" oc-readonly-roles="AdminUserAdmin">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="adminUserEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span>{{adminUserEditModal.fullName || adminUserEditModal.username}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="ID" class="control-label col-sm-3">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="ID" name="ID" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="adminUserEditModal.user.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Name" class="control-label col-sm-3">Username</label>\r\n            <div class="col-sm-9">\r\n                <input id="Name" name="Name" type="text" class="form-control" ng-model="adminUserEditModal.user.Username" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="FirstName" class="control-label col-sm-3">First Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="FirstName" name="FirstName" type="text" class="form-control" ng-model="adminUserEditModal.user.FirstName" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="LastName" class="control-label col-sm-3">Last Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="LastName" name="LastName" type="text" class="form-control" ng-model="adminUserEditModal.user.LastName" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Phone" class="control-label col-sm-3">Phone Number</label>\r\n            <div class="col-sm-9">\r\n                <input id="Phone" name="Phone" type="tel" class="form-control" ng-model="adminUserEditModal.user.Phone" />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Email" class="control-label col-sm-3">Email Address</label>\r\n            <div class="col-sm-9">\r\n                <input id="Email" name="Email" type="email" class="form-control" ng-model="adminUserEditModal.user.Email" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="checkbox">\r\n                    <label for="Active">\r\n                        <input id="Active" name="Active" type="checkbox" ng-model="adminUserEditModal.user.Active"/>\r\n                        Active\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer" >\r\n        <button type="submit" class="btn btn-block btn-primary" cg-busy="adminUserEditModal.loading">Update</button>\r\n    </div>\r\n</form>'),$templateCache.put("adminUsers/templates/adminUserGroupUsers.html",'<header class="l-page-header">\r\n    <h3 class="l-page-header__title">\r\n        Users\r\n    </h3>\r\n    <!--====== CREATE ======-->\r\n    <div class="l-page-header__btns" oc-if-roles="AdminUserAdmin">\r\n        <button type="button" class="btn btn-primary btn-block" ng-click="adminUserGroupUsers.createUser()"><i class="fa fa-plus-circle"></i>\r\n            New Admin User\r\n        </button>\r\n    </div>\r\n</header>\r\n\r\n<!--====== SEARCH/FILTERS ======-->\r\n<div ng-if="adminUserGroupUsers.list.Items.length || (!adminUserGroupUsers.list.Items.length && adminUserGroupUsers.searchResults)">\r\n    <form name="adminUserGroupUsers.searchForm" pretty-submit>\r\n        <fieldset class="form-group">\r\n            <div class="input-group">\r\n                <span class="input-group-addon">\r\n                    <i class="fa fa-search"></i>\r\n                </span>\r\n                <input type="search" ng-change="adminUserGroupUsers.search()" ng-model-options="{debounce:1000}" placeholder="Search users..." ng-model="adminUserGroupUsers.parameters.search" class="form-control">\r\n                <span ng-if="adminUserGroupUsers.searchResults" class="input-group-btn">\r\n                    <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="adminUserGroupUsers.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear</span></button>\r\n                </span>\r\n            </div>\r\n        </fieldset>\r\n    </form>\r\n</div>\r\n\r\n<div cg-busy="adminUserGroupUsers.searchLoading">\r\n    <div class="no-matches" ng-if="!adminUserGroupUsers.list.Items.length">\r\n        <b ng-if="adminUserGroupUsers.searchResults">No matches found.</b>\r\n        <b ng-if="!adminUserGroupUsers.searchResults">This seller organization does not have any admin users.</b>\r\n    </div>\r\n    <div ng-if="adminUserGroupUsers.list.Items.length">\r\n        <div class="row">\r\n            <div class="col-xs-6">\r\n                <div class="btn-group" ng-if="adminUserGroupUsers.changedAssignments.length">\r\n                    <button class="btn btn-primary btn-xs" ng-click="adminUserGroupUsers.updateAssignments()">\r\n                        Update Assignments\r\n                    </button>\r\n                    <button class="btn btn-default btn-xs" ng-click="adminUserGroupUsers.resetAssignments()">\r\n                        <i class="fa fa-times"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class="col-xs-6">\r\n                <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? adminUserGroupUsers.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                    adminUserGroupUsers.list.Meta.ItemRange[1] + \' of \' + adminUserGroupUsers.list.Meta.TotalCount + \' results\'}}</p>\r\n            </div>\r\n        </div>\r\n        <div class="panel panel-default table-responsive">\r\n            <table class="table table-striped table-bordered l-user-table__usergroup" oc-readonly-roles="AdminUserGroupAdmin">\r\n                <colgroup>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                </colgroup>\r\n                <thead>\r\n                <tr>\r\n                    <th class="text-center" ng-click="application.userIsAuthorized([\'AdminUserGroupAdmin\']) ? adminUserGroupUsers.selectAllItems() : angular.noop()">\r\n                        Assign\r\n                        <!--<input type="checkbox" ng-model="adminUserGroupUsers.allItemsSelected" ng-change="adminUserGroupUsers.selectAllItems()" />-->\r\n                    </th>\r\n                    <!--<th ng-click="adminUserGroupUsers.updateSort(\'ID\')">\r\n                        ID\r\n                        <i class="fa fa-caret-down" ng-show="adminUserGroupUsers.parameters.sortBy == \'ID\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="adminUserGroupUsers.parameters.sortBy == \'!ID\'"></i>\r\n                    </th>-->\r\n                    <th ng-click="adminUserGroupUsers.updateSort(\'Username\')">\r\n                        Username\r\n                        <i class="fa fa-caret-down" ng-show="adminUserGroupUsers.parameters.sortBy == \'Username\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="adminUserGroupUsers.parameters.sortBy == \'!Username\'"></i>\r\n                    </th>\r\n                    <!--<th ng-click="adminUserGroupUsers.updateSort(\'FirstName\')">\r\n                        First Name\r\n                        <i class="fa fa-caret-down" ng-show="adminUserGroupUsers.parameters.sortBy == \'FirstName\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="adminUserGroupUsers.parameters.sortBy == \'!FirstName\'"></i>\r\n                    </th>\r\n                    <th ng-click="adminUserGroupUsers.updateSort(\'LastName\')">\r\n                        Last Name\r\n                        <i class="fa fa-caret-down" ng-show="adminUserGroupUsers.parameters.sortBy == \'LastName\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="adminUserGroupUsers.parameters.sortBy == \'!LastName\'"></i>\r\n                    </th>-->\r\n                    <th ng-click="adminUserGroupUsers.updateSort(\'Email\')">\r\n                        Email\r\n                        <i class="fa fa-caret-down" ng-show="adminUserGroupUsers.parameters.sortBy == \'Email\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="adminUserGroupUsers.parameters.sortBy == \'!Email\'"></i>\r\n                    </th>\r\n                    <th oc-if-roles="AdminUserGroupAdmin"></th>\r\n                    <!--<th>\r\n                        Active\r\n                    </th>-->\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr ng-repeat="user in adminUserGroupUsers.list.Items">\r\n                    <td class="text-center">\r\n                        <input type="checkbox" ng-model="user.Assigned" ng-change="adminUserGroupUsers.selectItem(this)"/>\r\n                    </td>\r\n                    <!--<td>\r\n                        <a href="">{{user.ID}}</a>\r\n                    </td>-->\r\n                    <td><a href="" ng-click="adminUserGroupUsers.editUser(this)">{{user.Username}}</a></td>\r\n                    <!--<td>{{user.FirstName}}</td>\r\n                    <td>{{user.LastName}}</td>-->\r\n                    <td>{{user.Email}}</td>\r\n                    <td oc-if-roles="AdminUserGroupAdmin">\r\n                        <button class="btn btn-danger btn-xs" type="button" ng-click="adminUserGroupUsers.deleteUser(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                    </td>\r\n                    <!--<td class="text-center"><i class="fa fa-circle" ng-class="{active:user.Active}"></i></td>-->\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <ul uib-pagination\r\n            class="pagination-sm pull-right hidden-xs"\r\n            ng-if="users.list.Meta.TotalPages > 1"\r\n            total-items="users.list.Meta.TotalCount"\r\n            items-per-page="users.list.Meta.PageSize"\r\n            max-size="5"\r\n            boundary-links="users.list.Meta.TotalPages > 5"\r\n            ng-model="users.list.Meta.Page"\r\n            ng-change="users.pageChanged()">\r\n        </ul>\r\n        <button type="button"\r\n                class="btn btn-default btn-block btn-lg visible-xs"\r\n                ng-show="users.list.Meta.Page < users.list.Meta.TotalPages"\r\n                ng-click="users.loadMore()">Load More</button>\r\n    </div>\r\n</div>'),$templateCache.put("adminUsers/templates/adminUsers.html",'<article ui-view>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            Admin Users\r\n        </h3>\r\n        <!--====== CREATE ======-->\r\n        <div class="l-page-header__btns" oc-if-roles="AdminUserAdmin">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="adminUsers.createUser()"><i class="fa fa-plus-circle"></i>\r\n                New Admin User\r\n            </button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH/FILTERS ======-->\r\n    <div ng-if="adminUsers.list.Items.length || (!adminUsers.list.Items.length && adminUsers.searchResults)">\r\n        <form name="AdminUsersSearchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-search"></i>\r\n                    </span>\r\n                    <input type="search" ng-change="adminUsers.search()" ng-model-options="{debounce:1000}" placeholder="Search admin users..." ng-model="adminUsers.parameters.search" class="form-control">\r\n                    <span ng-if="adminUsers.searchResults" class="input-group-btn">\r\n                        <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="adminUsers.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear Search</span></button>\r\n                    </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--Sort may not be needed now that tables are using .table-responsive-->\r\n<!--    <div class="form-group" ng-if="application.$ocMedia(\'max-width:767px\')">\r\n        <label>Sort By</label>\r\n        <div ng-class="{\'input-group\':adminUsers.sortSelection}">\r\n            <select placeholder="Sort" class="form-control" ng-model="adminUsers.sortSelection" ng-change="adminUsers.updateSort()">\r\n                <option value="">None</option>\r\n                <option value="ID">ID</option>\r\n                <option value="FirstName">First Name</option>\r\n                <option value="LastName">Last Name</option>\r\n                <option value="Username">Username</option>\r\n                <option value="Email">Email</option>\r\n            </select>\r\n            <div ng-if="adminUsers.sortSelection" class="input-group-btn">\r\n                <button class="btn btn-default" ng-click="adminUsers.reverseSort()">\r\n                    <i class="fa fa-sort"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>-->\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="adminUsers.searchLoading">\r\n        <div class="no-matches" ng-if="!adminUsers.list.Items.length">\r\n            <b ng-if="adminUsers.searchResults">No matches found.</b>\r\n            <b ng-if="!adminUsers.searchResults">This seller organization does not have any admin users.</b>\r\n        </div>\r\n        <div ng-if="adminUsers.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6">\r\n                    <button ng-if="adminUsers.selectedCount" class="btn btn-danger btn-xs" ng-click="adminUsers.deleteSelected()" oc-if-roles="AdminUserAdmin">\r\n                        <i class="fa fa-trash"></i> Delete {{adminUsers.selectedCount == 1 ? "User" : (adminUsers.selectedCount + " Users")}}\r\n                    </button>\r\n                </div>\r\n                <div class="col-xs-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? adminUsers.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        adminUsers.list.Meta.ItemRange[1] + \' of \' + adminUsers.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-user-table">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col oc-if-roles="AdminUserAdmin">\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th ng-click="adminUsers.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="adminUsers.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminUsers.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="adminUsers.updateSort(\'Username\')">\r\n                            Username\r\n                            <i class="fa fa-caret-down" ng-show="adminUsers.parameters.sortBy == \'Username\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminUsers.parameters.sortBy == \'!Username\'"></i>\r\n                        </th>\r\n                        <th ng-click="adminUsers.updateSort(\'FirstName\')">\r\n                            First Name\r\n                            <i class="fa fa-caret-down" ng-show="adminUsers.parameters.sortBy == \'FirstName\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminUsers.parameters.sortBy == \'!FirstName\'"></i>\r\n                        </th>\r\n                        <th ng-click="adminUsers.updateSort(\'LastName\')">\r\n                            Last Name\r\n                            <i class="fa fa-caret-down" ng-show="adminUsers.parameters.sortBy == \'LastName\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminUsers.parameters.sortBy == \'!LastName\'"></i>\r\n                        </th>\r\n                        <th ng-click="adminUsers.updateSort(\'Email\')">\r\n                            Email\r\n                            <i class="fa fa-caret-down" ng-show="adminUsers.parameters.sortBy == \'Email\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="adminUsers.parameters.sortBy == \'!Email\'"></i>\r\n                        </th>\r\n                        <th>\r\n                            Active\r\n                        </th>\r\n                        <th oc-if-roles="AdminUserAdmin"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="user in adminUsers.list.Items">\r\n                        <td>{{user.ID}}</td>\r\n                        <td><a href="" ng-click="adminUsers.editUser(this)">{{user.Username}}</a></td>\r\n                        <td>{{user.FirstName}}</td>\r\n                        <td>{{user.LastName}}</td>\r\n                        <td>{{user.Email}}</td>\r\n                        <td class="text-center">\r\n                            <i class="fa fa-circle" aria-hidden="true" ng-class="{\'active\':user.Active}"></i>\r\n                        </td>\r\n                        <td oc-if-roles="AdminUserAdmin">\r\n                            <button type="button" ng-click="adminUsers.deleteUser(this)" class="btn btn-danger btn-xs">\r\n                                <i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="adminUsers.list.Meta.TotalPages > 1"\r\n                total-items="adminUsers.list.Meta.TotalCount"\r\n                items-per-page="adminUsers.list.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="adminUsers.list.Meta.TotalPages > 5"\r\n                ng-model="adminUsers.list.Meta.Page"\r\n                ng-change="adminUsers.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="adminUsers.list.Meta.Page < adminUsers.list.Meta.TotalPages"\r\n                    ng-click="adminUsers.loadMore()">Load More\r\n            </button>\r\n        </div>\r\n    </div>\r\n</article>\r\n'),$templateCache.put("base/templates/base.tpl.html",'<nav id="GlobalNav" class="navmenu navmenu-inverse navmenu-fixed-left offcanvas-sm offcanvas-xs" role="navigation">\r\n    <a class="navmenu-brand hidden-xs hidden-sm" href="" ui-sref="home">{{application.name}}</a>\r\n    <ul class="nav navmenu-nav">\r\n        <li ng-class="{active: application.$state.is(\'buyers\') || application.$state.includes(\'buyer\')}" oc-if-roles="BuyerRoles">\r\n            <a ui-sref="buyers"><i class="fa fa-tags"></i> Buyer Organizations</a>\r\n        </li>\r\n        <li ng-class="{active: application.$state.is(\'products\') || application.$state.includes(\'productDetail\')}" oc-if-roles="ProductRoles">\r\n            <a ui-sref="products"><i class="fa fa-cube"></i> Product Management</a>\r\n        </li>\r\n        <li ng-class="{active: application.$state.is(\'orders\') || application.$state.includes(\'orderDetail\')}" oc-if-roles="OrderRoles">\r\n            <a ui-sref="orders"><i class="fa fa-inbox"></i> Order Management</a>\r\n        </li>\r\n        <li ui-sref-active="active" oc-if-roles="AdminUserRoles"><a ui-sref="adminUsers"><i class="fa fa-user"></i> Admin Users</a></li>\r\n        <li ng-class="{active: application.$state.is(\'adminUserGroups\') || application.$state.includes(\'adminUserGroup\')}" oc-if-roles="AdminUserGroupRoles">\r\n            <a ui-sref="adminUserGroups"><i class="fa fa-users"></i> Admin User Groups</a>\r\n        </li>\r\n        <li ui-sref-active="active" oc-if-roles="AddressRoles"><a ui-sref="adminAddresses"><i class="fa fa-map-marker"></i> Admin Addresses</a></li>\r\n        <li ui-sref-active="active"><a ui-sref="security"><i class="fa fa-lock"></i> Security</a></li>\r\n        <li ui-sref-active="active"><a ui-sref="account"><i class="fa fa-user-circle-o"></i> Account</a></li>\r\n    </ul>\r\n</nav>\r\n<nav class="navbar navbar-default navbar-unstacked navbar-fixed-top navmenu-on-canvas-lg navmenu-on-canvas-md" ng-if="application.$ocMedia(\'max-width:991px\')">\r\n    <div class="container container-smooth">\r\n        <div class="navbar-header">\r\n            <a class="navbar-brand" ng-click="base.toggleGlobalNav()">\r\n                <i class="fa fa-bars"></i>\r\n            </a>\r\n            <a class="navbar-brand" ui-sref="home">\r\n                {{application.name}}\r\n            </a>\r\n        </div>\r\n    </div>\r\n</nav>\r\n<main ui-view class="container container-smooth" cg-busy="application.stateLoading(\'base\')"></main>'),$templateCache.put("catalogManagement/templates/catalogManagement.html",'<div class="row">\r\n    <div class="col-sm-5" ui-view="category-tree"></div>\r\n    <div class="col-sm-7" ui-view="assignments"></div>\r\n</div>'),$templateCache.put("home/templates/home.tpl.html",'<article>\r\n    <header class="jumbotron text-center">\r\n        <h1 ng-bind="application.name"></h1>\r\n        <p>Welcome to the OrderCloud Admin App!</p>\r\n        <p><a class="btn btn-primary btn-large">Learn more »</a></p>\r\n    </header>\r\n</article>'),$templateCache.put("common/templates/card.product.tpl.html",'<div class="thumbnail c-product-card" ui-sref="productDetail({productid: product.ID})">\r\n    <img class="img-responsive c-product-card__img" ng-src="{{product.xp.image.URL || \'http://placehold.it/300x300\'}}">\r\n    <div class="caption c-product-card__body">\r\n        <div class="c-product-card__info clearfix">\r\n            <span class="pull-left c-product-card__id" ng-if="product.Name">{{product.ID}}</span>\r\n            <span class="pull-right c-product-card__price"><b class="text-primary">{{product.StandardPriceSchedule.PriceBreaks[0].Price | currency}}</b> <small class="text-muted">x {{product.StandardPriceSchedule.PriceBreaks[0].Quantity}}</small></span>\r\n        </div>\r\n        <h3 class="c-product-card__name">{{product.Name || product.ID}}</h3>\r\n        <div class="c-product-card__descrip" ng-if="product.Description">\r\n            <p>{{product.Description}}</p>\r\n        </div>\r\n        <div class="text-right c-product-card__icons" prevent-click>\r\n            <ordercloud-product-quick-view product="product" current-order="base.currentOrder"></ordercloud-product-quick-view>\r\n            <ordercloud-favorite-product product="product" current-user="base.currentUser"></ordercloud-favorite-product>\r\n        </div>\r\n    </div>\r\n</div>'),$templateCache.put("common/templates/confirm.modal.html",'<div class="modal-body">\r\n	<div ng-class="{\'text-center\':confirmModal.type == \'delete\'}" ng-bind-html="confirmModal.message"></div>\r\n	<div class="text-center" ng-if="confirmModal.type == \'delete\'">\r\n		<br>\r\n		<span class="text-danger">This action cannot be undone.</span>\r\n	</div>\r\n</div>\r\n<div class="modal-footer">\r\n	<div class="text-center">\r\n		<button type="button" class="btn btn-default" ng-click="confirmModal.cancel()">{{confirmModal.cancelText || \'Cancel\'}}</button>\r\n		<button type="button" class="btn btn-primary" ng-class="{\'btn-danger\': confirmModal.type == \'delete\'}" ng-click="confirmModal.confirm()">{{confirmModal.confirmText || \'Okay\'}}</button>\r\n	</div>\r\n</div>'),$templateCache.put("common/templates/fileUpload.html",'<div ng-class="{\'has-error\': invalidExtension}">\r\n    <figure class="row">\r\n        <div class="col-xs-8 col-sm-5">\r\n            <img class="img-responsive" ng-src="{{model.xp.image.URL || \'http://placehold.it/300x300\'}}" alt="Product Image">\r\n        </div>\r\n    </figure>\r\n    <div>\r\n        <br>\r\n        <button type="button" class="btn btn-default" ng-click="upload()">{{model.xp.image.URL  ? \'Replace Image\' : \'Upload\'}}</button>\r\n        <button type="button" class="btn btn-danger" ng-click="remove()" ng-if="model.xp.image.URL "><i class="fa fa-trash"></i></button>\r\n    </div>\r\n    <input class="ng-hide" name="upload" type="file" id="orderCloudUpload" />\r\n    <span class="help-block error-msg" ng-show="invalidExtension">Invalid File Type</span>\r\n</div>'),$templateCache.put("common/templates/quantityInput.tpl.html",'<div id="QuantityInput">\r\n    <div class="form-group" ng-if="content == \'product\'">\r\n        <label for="itemQuantity" ng-if="label">{{label}}</label>\r\n        <input id="itemQuantity"\r\n               name="itemQuantity"\r\n               type="number"\r\n               ng-required="true"\r\n               ng-if="!item.StandardPriceSchedule.RestrictedQuantity"\r\n               class="form-control text-center"\r\n               ng-min="{{item.StandardPriceSchedule.MinQuantity}}"\r\n               ng-max="{{item.StandardPriceSchedule.MaxQuantity}}"\r\n               ng-model="item.Quantity"\r\n               placeholder="Quantity">\r\n        <select id="itemQuantity"\r\n                name="itemQuantity"\r\n                ng-required="true"\r\n                ng-if="item.StandardPriceSchedule.RestrictedQuantity"\r\n                class="form-control text-center"\r\n                ng-model="item.Quantity"\r\n                ng-options="priceBreak.Quantity as priceBreak.Quantity for priceBreak in item.StandardPriceSchedule.PriceBreaks"></select>\r\n        <small class="help-block" ng-if="item.QuantityMultiplier > 1">\r\n            {{\'Quantity multiplier x \' + item.QuantityMultiplier + (item.Quantity ? (\' (\' + (item.Quantity * item.QuantityMultiplier) + \')\') : \'\')}}\r\n        </small>\r\n    </div>\r\n    <div class="form-group" ng-if="content == \'lineitem\'">\r\n        <label for="itemQuantity" ng-if="label">{{label}}</label>\r\n        <input id="itemQuantity"\r\n               name="itemQuantity"\r\n               type="number"\r\n               ng-required="true"\r\n               ng-if="!item.Product.StandardPriceSchedule.RestrictedQuantity"\r\n               class="form-control text-center"\r\n               ng-min="{{item.Product.StandardPriceSchedule.MinQuantity}}"\r\n               ng-max="{{item.Product.StandardPriceSchedule.MaxQuantity}}"\r\n               ng-model="item.Quantity"\r\n               ng-model-options="{ debounce: 1000 }"\r\n               ng-change="updateQuantity()"\r\n               placeholder="Quantity">\r\n        <select id="itemQuantity"\r\n                name="itemQuantity"\r\n                ng-required="true"\r\n                ng-if="item.Product.StandardPriceSchedule.RestrictedQuantity"\r\n                class="form-control"\r\n                ng-model="item.Quantity"\r\n                ng-change="updateQuantity()"\r\n                ng-options="priceBreak.Quantity as priceBreak.Quantity for priceBreak in item.Product.StandardPriceSchedule.PriceBreaks"></select>\r\n        <small class="help-block" ng-if="item.Product.QuantityMultiplier > 1">\r\n            {{\'x \' + item.Product.QuantityMultiplier + (item.Quantity ? (\' (\' + (item.Quantity * item.Product.QuantityMultiplier) + \')\') : \'\')}}\r\n        </small>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n'),
$templateCache.put("common/templates/view.loading.tpl.html",'<div class="indicator">\r\n	<div class="animation">\r\n		<div class="dot"></div>\r\n		<div class="dot"></div>\r\n		<div class="dot"></div>\r\n	</div>\r\n</div>\r\n\r\n'),$templateCache.put("login/templates/login.tpl.html",'<main class="login" ng-switch="login.form" cg-busy="login.loading">\r\n\r\n    <!--LOGIN FORM-->\r\n    <div ng-switch-when="login">\r\n        <div class="panel panel-default">\r\n            <form class="panel-body" name="LoginForm" ng-submit="login.submit()" pretty-submit>\r\n                <h3 class="text-center">Login</h3>\r\n                <div class="form-group">\r\n                    <label for="Username" class="sr-only">Username</label>\r\n                    <input id="Username" type="text" class="form-control" placeholder="Username" autocapitalize="off" autocorrect="off" autocomplete="off" ng-model="login.credentials.Username" ng-required="true" />\r\n                </div>\r\n                <div class="form-group">\r\n                    <label for="Password" class="sr-only">Password</label>\r\n                    <input type="password" class="form-control" placeholder="Password" id="Password" ng-model="login.credentials.Password" ng-required="true" />\r\n                </div>\r\n\r\n                <div class="form-group text-center">\r\n                    <div class="checkbox">\r\n                        <label for="Remember">\r\n                            <input type="checkbox" id="Remember" ng-model="login.rememberStatus">\r\n                            Remember Me\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <button id="submit_login" type="submit" class="btn btn-primary btn-block" ng-disabled="LoginForm.$invalid">Submit</button>\r\n\r\n            </form>\r\n        </div>\r\n        <div class="text-center">\r\n            <a id="forgot_password" ng-click="login.setForm(\'forgot\')">Forgot Password?</a>\r\n        </div>\r\n    </div>\r\n\r\n    <!--FORGOT PASSWORD-->\r\n    <div ng-switch-when="forgot">\r\n        <div class="panel panel-default">\r\n            <form class="panel-body" name="ForgotPasswordForm" ng-submit="login.forgotPassword()">\r\n                <h3 class="text-center">Forgot Password</h3>\r\n                <div class="form-group">\r\n                    <label for="Email" class="sr-only">Email</label>\r\n                    <input type="text" class="form-control" id="Email" placeholder="Email Address" ng-model="login.credentials.Email" ng-required="true" />\r\n                </div>\r\n                <button type="submit" id="email_submit" class="btn btn-primary btn-block" ng-disabled="ForgotPasswordForm.$invalid">Submit</button>\r\n            </form>\r\n        </div>\r\n        <div class="text-center">\r\n            <a id="back_to_login" ng-click="login.setForm(\'login\')">Back to Login</a>\r\n        </div>\r\n    </div>\r\n\r\n    <!--RESET PASSWORD-->\r\n    <div ng-switch-when="reset">\r\n        <div class="panel panel-default">\r\n            <form class="panel-body" name="ResetPasswordForm" ng-submit="login.resetPassword()" >\r\n                <h3 class="text-center">Reset Password</h3>\r\n                <div class="form-group">\r\n                    <label for="ResetUsername" class="sr-only">Username</label>\r\n                    <input type="text" class="form-control" id="ResetUsername" placeholder="Username" ng-model="login.credentials.ResetUsername" ng-required="true" />\r\n                </div>\r\n                <div class="form-group">\r\n                    <label for="NewPassword" class="sr-only">New Password</label>\r\n                    <input type="password" class="form-control" id="NewPassword" placeholder="New Password" ng-model="login.credentials.NewPassword" ng-required="true" />\r\n                </div>\r\n                <div class="form-group">\r\n                    <label for="ConfirmPassword" class="sr-only">Confirm Password</label>\r\n                    <input type="password" class="form-control" id="ConfirmPassword" placeholder="Confirm New Password" ng-model="login.credentials.ConfirmPassword" ng-required="true" />\r\n                </div>\r\n                <button type="submit" id="reset_submit" class="btn btn-primary btn-block" ng-disabled="ResetPasswordForm.$invalid || login.credentials.NewPassword != login.credentials.ConfirmPassword">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    <div ng-switch-when="verificationCodeSuccess">\r\n        <div class="alert alert-success text-center" id="forgot_message">Forgot password email has been sent. <br> Please check your email in order to reset your password.</div>\r\n    </div>\r\n\r\n    <div ng-switch-when="resetSuccess">\r\n        <div class="alert alert-success text-center">Your password has been reset.</div>\r\n        <div class="text-center">\r\n            <a id="back_to_login2" ng-click="login.setForm(\'login\')">Back to Login</a>\r\n        </div>\r\n    </div>\r\n</main>\r\n'),$templateCache.put("security/templates/security.html",'<header class="l-page-header">\r\n    <h3 class="l-page-header__title">\r\n        Security Profiles\r\n    </h3>\r\n</header>\r\n<div class="row" ng-if="security.isAdmin">\r\n    <div class="col-md-6">\r\n        <div  class="alert alert-warning">\r\n            <b>Warning!</b> <br>\r\n            Upon first load and after a page refresh, these assignments will <b>not reflect the actual assignments in the API</b>.\r\n            Until we have a way to list admin company level security profile assignments this issue will persist.\r\n        </div>\r\n    </div>\r\n</div>\r\n<form name="security.form">\r\n    <fieldset class="form-group">\r\n        <div class="checkbox" ng-repeat="profile in security.profiles">\r\n            <label for="{{profile.ID}}">\r\n                <input type="checkbox" id="{{profile.ID}}" name="{{profile.ID}}" ng-model="profile.selected" ng-change="security.updateAssignment(this, userGroup.group.ID)">\r\n                <b ng-if="profile.selected">{{profile.Name}}</b> <span ng-if="!profile.selected">{{profile.Name}}</span>\r\n            </label>\r\n        </div>\r\n    </fieldset>\r\n</form>'),$templateCache.put("buyerManagement/addresses/templates/addressCreate.modal.html",'<form name="addressCreateModal.form" class="form-horizontal" ng-submit="addressCreateModal.submit()" autocomplete="off" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="addressCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Address</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressID">Address ID</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressID" name="ID" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" ng-model="addressCreateModal.address.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressName">Address Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressName" name="AddressName" ng-model="addressCreateModal.address.AddressName" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressCompanyName">Company Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressCompanyName" name="CompanyName" placeholder="(Optional)" ng-model="addressCreateModal.address.CompanyName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressFirstName">First Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressFirstName" name="FirstName" placeholder="(Optional)" ng-model="addressCreateModal.address.FirstName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressLastName">Last Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressLastName" name="LastName" placeholder="(Optional)" ng-model="addressCreateModal.address.LastName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressStreet1">Street 1</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressStreet1" name="Street1" ng-model="addressCreateModal.address.Street1" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressStreet2">Street 2</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressStreet2" name="Street2" placeholder="(Optional)" ng-model="addressCreateModal.address.Street2" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressCity">City</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressCity" name="City" ng-model="addressCreateModal.address.City" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" ng-if="(addressCreateModal.states | filter:{country:addressCreateModal.address.Country}).length">\r\n            <label class="col-sm-3 control-label" for="addressState">State</label>\r\n            <div class="col-sm-9">\r\n                <select id="addressState" name="State" class="form-control" ng-options="state.value as state.label for state in addressCreateModal.states | filter:{country:addressCreateModal.address.Country}" ng-model="addressCreateModal.address.State" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" ng-if="!(addressCreateModal.states | filter:{country:addressCreateModal.address.Country}).length">\r\n            <label class="col-sm-3 control-label" for="addressState">State</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressState" name="State" ng-model="addressCreateModal.address.State" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressZip">Zip</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressZip" name="Zip" ng-model="addressCreateModal.address.Zip" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressID">Country</label>\r\n            <div class="col-sm-9">\r\n                <select id="addressCountry" name="Country" class="form-control" ng-options="country.value as country.label for country in addressCreateModal.countries" ng-model="addressCreateModal.address.Country" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressPhone">Phone</label>\r\n            <div class="col-sm-9">\r\n                <input type="tel" class="form-control" id="addressPhone" name="Phone" ng-model="addressCreateModal.address.Phone" />\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" cg-busy="addressCreateModal.loading" ng-disabled="addressCreateModal.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/addresses/templates/addressEdit.modal.html",'<form name="addressEditModal.form" class="form-horizontal" ng-submit="addressEditModal.submit()" autocomplete="off" novalidate oc-readonly-roles="AddressAdmin">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="addressEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span>{{addressEditModal.addressName}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressID">Address ID</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressID" name="ID" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" ng-model="addressEditModal.address.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressName">Address Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressName" name="AddressName" ng-model="addressEditModal.address.AddressName" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressCompanyName">Company Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressCompanyName" name="CompanyName" placeholder="(Optional)" ng-model="addressEditModal.address.CompanyName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressFirstName">First Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressFirstName" name="FirstName" placeholder="(Optional)" ng-model="addressEditModal.address.FirstName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressLastName">Last Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressLastName" name="LastName" placeholder="(Optional)" ng-model="addressEditModal.address.LastName" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressStreet1">Street 1</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressStreet1" name="Street1" ng-model="addressEditModal.address.Street1" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressStreet2">Street 2</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressStreet2" name="Street2" placeholder="(Optional)" ng-model="addressEditModal.address.Street2" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressCity">City</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressCity" name="City" ng-model="addressEditModal.address.City" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" ng-if="(addressEditModal.states | filter:{country:addressEditModal.address.Country}).length">\r\n            <label class="col-sm-3 control-label" for="addressState">State</label>\r\n            <div class="col-sm-9">\r\n                <select id="addressState" name="State" class="form-control" ng-options="state.value as state.label for state in addressEditModal.states | filter:{country:addressEditModal.address.Country}" ng-model="addressEditModal.address.State" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" ng-if="!(addressEditModal.states | filter:{country:addressEditModal.address.Country}).length">\r\n            <label class="col-sm-3 control-label" for="addressState">State</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressState" name="State" ng-model="addressEditModal.address.State" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressZip">Zip</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="addressZip" name="Zip" ng-model="addressEditModal.address.Zip" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressID">Country</label>\r\n            <div class="col-sm-9">\r\n                <select id="addressCountry" name="Country" class="form-control" ng-options="country.value as country.label for country in addressEditModal.countries" ng-model="addressEditModal.address.Country" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="addressPhone">Phone</label>\r\n            <div class="col-sm-9">\r\n                <input type="tel" class="form-control" id="addressPhone" name="Phone" ng-model="addressEditModal.address.Phone" />\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" cg-busy="addressEditModal.loading">Save</button>\r\n    </div>\r\n</form>\r\n'),$templateCache.put("buyerManagement/addresses/templates/addresses.html",'<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            Addresses\r\n        </h3>\r\n        <!--====== CREATE ======-->\r\n        <div class="l-page-header__btns" oc-if-roles="AddressAdmin">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="addresses.createAddress()"><i class="fa fa-plus-circle"></i>\r\n                New Address\r\n            </button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH ======-->\r\n    <div ng-if="addresses.list.Items.length || (!addresses.list.Items.length && addresses.searchResults)">\r\n        <form name="addresses.searchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon"><i class="fa fa-search"></i></span>\r\n                    <input type="search" ng-change="addresses.search()" ng-model-options="{debounce:1000}" placeholder="Search addresses..." ng-model="addresses.parameters.search" class="form-control">\r\n                <span ng-if="addresses.searchResults" class="input-group-btn">\r\n                    <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="addresses.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear Search</span></button>\r\n                </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="addresses.searchLoading">\r\n        <div class="no-matches" ng-if="!addresses.list.Items.length">\r\n            <b ng-if="addresses.searchResults">No matches found.</b>\r\n            <b ng-if="!addresses.searchResults">This buyer organization does not have any addresses.</b>\r\n        </div>\r\n        <div ng-if="addresses.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6">\r\n                    <div class="btn-group" ng-if="addresses.changedAssignments.length">\r\n                        <button ng-click="addresses.updateAssignments()" class="btn btn-primary btn-xs">\r\n                            Update Assignments\r\n                        </button>\r\n                        <button class="btn btn-default btn-xs" ng-click="addresses.resetAssignments()">\r\n                            <i class="fa fa-times"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class="col-xs-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? addresses.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        addresses.list.Meta.ItemRange[1] + \' of \' + addresses.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-address-table" ng-class="{\'l-address-table__usergroup\':addresses.userGroupID}" oc-readonly-roles="AddressAdmin">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col oc-if-roles="AddressAdmin">\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th class="text-center" ng-click="application.userIsAuthorized([\'AddressAdmin\']) ? addresses.selectAllItems(\'shipping\') : angular.noop()">\r\n                            Shipping\r\n                        </th>\r\n                        <th class="text-center" ng-click="application.userIsAuthorized([\'AddressAdmin\']) ? addresses.selectAllItems(\'billing\') : angular.noop()">\r\n                            Billing\r\n                        </th>\r\n                        <th ng-click="addresses.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="addresses.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="addresses.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="addresses.updateSort(\'AddressName\')">\r\n                            Name\r\n                            <i class="fa fa-caret-down" ng-show="addresses.parameters.sortBy == \'AddressName\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="addresses.parameters.sortBy == \'!AddressName\'"></i>\r\n                        </th>\r\n                        <th ng-click="addresses.updateSort(\'Street1\')">\r\n                            Address\r\n                            <i class="fa fa-caret-down" ng-show="addresses.parameters.sortBy == \'Street1\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="addresses.parameters.sortBy == \'!Street1\'"></i>\r\n                        </th>\r\n                        <th oc-if-roles="AddressAdmin"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="address in addresses.list.Items">\r\n                        <td class="text-center">\r\n                            <input type="checkbox" ng-model="address.shipping" ng-change="addresses.selectItem(this, \'shipping\')" />\r\n                        </td>\r\n                        <td class="text-center">\r\n                            <input type="checkbox" ng-model="address.billing" ng-change="addresses.selectItem(this, \'billing\')" />\r\n                        </td>\r\n                        <td>{{address.ID}}</td>\r\n                        <td>\r\n                            <a href="" ng-click="addresses.editAddress(this)">{{address.AddressName}}</a>\r\n                        </td>\r\n                        <td>{{address | address}} <br ng-if="application.$ocMedia(\'max-width:767px\')"> {{address.City + \', \' + address.State + \' \' +\r\n                            address.Zip}}\r\n                        </td>\r\n                        <td oc-if-roles="AddressAdmin">\r\n                            <button type="button" class="btn btn-danger btn-block btn-xs" ng-click="addresses.deleteAddress(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="addresses.list.Meta.TotalPages > 1"\r\n                total-items="addresses.list.Meta.TotalCount"\r\n                items-per-page="addresses.list.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="addresses.list.Meta.TotalPages > 5"\r\n                ng-model="addresses.list.Meta.Page"\r\n                ng-change="addresses.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="addresses.list.Meta.Page < addresses.list.Meta.TotalPages"\r\n                    ng-click="addresses.loadMore()">Load More\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</article>\r\n'),$templateCache.put("buyerManagement/buyer/templates/buyer.html",'<ul class="breadcrumb">\r\n    <li><a href="" ui-sref="buyers">Buyers</a></li>\r\n    <li class="active" ui-sref="buyer">{{buyer.selectedBuyer.Name}}</li>\r\n</ul>\r\n<div class="l-page-header l-page-header-xs">\r\n    <div class="l-page-header__img" ng-if="buyer.selectedBuyer.xp && buyer.selectedBuyer.xp.image && buyer.selectedBuyer.xp.image.URL">\r\n        <figure class="c-logo-display">\r\n            <div role="img" ng-style="{\'background-image\':\'url(\\\'\' + buyer.selectedBuyer.xp.image.URL + \'\\\')\'}"></div>\r\n        </figure>\r\n    </div>\r\n    <h3 class="l-page-header__title">\r\n        {{buyer.selectedBuyer.Name}} <br>\r\n        <small>(ID: {{buyer.selectedBuyer.ID}})</small>\r\n    </h3>\r\n</div>\r\n<article>\r\n    <ul class="nav nav-tabs">\r\n        <li role="presentation" ng-class="{active: application.$state.is(\'buyer\')}">\r\n            <a ui-sref="buyer"><i class="fa fa-cog"></i> Settings</a>\r\n        </li>\r\n        <li role="presentation" ui-sref-active="active">\r\n            <a ui-sref="buyerSecurity"><i class="fa fa-lock"></i> Security</a>\r\n        </li>\r\n        <li role="presentation" ng-class="{active: application.$state.includes(\'catalogManagement\')}" oc-if-roles="CategoryRoles">\r\n            <a ui-sref="catalogManagement({ search: \'\', sortBy: \'\'})"><i class="fa fa-sitemap"></i> Catalog</a>\r\n        </li>\r\n        <li role="presentation" class="hidden-xs" ng-class="{active: application.$state.includes(\'users\')}" oc-if-roles="BuyerUserRoles">\r\n            <a ui-sref="users({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-user"></i> Users</a>\r\n        </li>\r\n        <li role="presentation" class="hidden-xs" ng-class="{active: application.$state.includes(\'userGroups\') || application.$state.includes(\'userGroup\')}" oc-if-roles="UserGroupRoles">\r\n            <a ui-sref="userGroups({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-users"></i> User Groups</a>\r\n        </li>\r\n        <li role="presentation" class="hidden-xs" ng-class="{active: application.$state.is(\'addresses\') || application.$state.is(\'address\')}" oc-if-roles="AddressRoles">\r\n            <a ui-sref="addresses({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-map-marker"></i> Addresses</a>\r\n        </li>\r\n        <li role="presentation" class="hidden-xs hidden-sm hidden-md" ng-class="{active: application.$state.includes(\'creditCards\')}" oc-if-roles="CreditCardRoles">\r\n            <a ui-sref="creditCards({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-credit-card"></i> Credit Cards</a>\r\n        </li>\r\n        <li role="presentation"  ng-class="{active:\r\n            application.$state.is(\'spendingAccounts\') || application.$state.is(\'costCenters\')}"\r\n            uib-dropdown ng-if="application.$ocMedia(\'max-width:767px\') ? application.userIsAuthorized([\'BuyerUserReader\', \'BuyerUserAdmin\', \'UserGroupReader\', \'UserGroupAdmin\', \'AddressReader\', \'AddressAdmin\', \'CreditCardReader\', \'CreditCardAdmin\'], true) : application.userIsAuthorized([\'SpendingAccountReader\', \'SpendingAccountAdmin\', \'CostCenterReader\', \'CostCenterAdmin\', \'PromotionReader\', \'PromotionAdmin\'], true)">\r\n            <a uib-dropdown-toggle>More <i class="fa fa-caret-down"></i></a>\r\n            <ul class="dropdown-menu-right" uib-dropdown-menu>\r\n                <li role="presentation" class="visible-xs" ng-class="{active: application.$state.includes(\'users\')}" oc-if-roles="BuyerUserRoles">\r\n                    <a ui-sref="users({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-user"></i> Users</a>\r\n                </li>\r\n                <li role="presentation" class="visible-xs" ng-class="{active: application.$state.includes(\'userGroups\')}" oc-if-roles="UserGroupRoles">\r\n                    <a ui-sref="userGroups({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-users"></i> User Groups</a>\r\n                </li>\r\n                <li role="presentation" class="visible-xs" ng-class="{active: application.$state.includes(\'addresses\')}" oc-if-roles="AddressRoles">\r\n                    <a ui-sref="addresses({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-map-marker"></i> Addresses</a>\r\n                </li>\r\n                <li role="presentation" class="hidden-lg" ng-class="{active: application.$state.includes(\'creditCards\')}" oc-if-roles="CreditCardRoles">\r\n                    <a ui-sref="creditCards({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-credit-card"></i> Credit Cards</a>\r\n                </li>\r\n                <li role="presentation" ng-class="{active: application.$state.includes(\'spendingAccounts\')}" oc-if-roles="SpendingAccountRoles">\r\n                    <a ui-sref="spendingAccounts({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-dollar"></i> Spending Accounts</a>\r\n                </li>\r\n                <li role="presentation" ng-class="{active: application.$state.includes(\'costCenters\')}" oc-if-roles="CostCenterRoles">\r\n                    <a ui-sref="costCenters({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-asterisk"></i> Cost Centers</a>\r\n                </li>\r\n                <li role="presentation" ng-class="{active: application.$state.includes(\'approvalRules\')}" oc-if-roles="ApprovalRuleRoles">\r\n                    <a ui-sref="approvalRules({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-check-square-o"></i> Approval Rules</a>\r\n                </li>\r\n                <li role="presentation" ng-class="{active: application.$state.includes(\'promotions\')}" oc-if-roles="PromotionRoles">\r\n                    <a ui-sref="promotions({ search: \'\', sortBy: \'\', filters: \'\', page: \'\'})"><i class="fa fa-bullhorn"></i> Promotions</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n\r\n    </ul>\r\n    <br>\r\n    <div ui-view cg-busy="application.stateLoading(\'buyer\')">\r\n        <div class="row">\r\n            <div class="col-sm-7 col-md-6" oc-readonly-roles="BuyerAdmin">\r\n                <form ng-submit="buyer.updateBuyer()" class="form-horizontal" name="buyer.settingsForm" novalidate autocomplete="off">\r\n\r\n                    <div class="form-group">\r\n                        <label for="buyerIDInput" class="control-label col-sm-3">Buyer ID</label>\r\n                        <div class="col-sm-9">\r\n                            <input id="buyerIDInput" name="buyerIDinput" ng-change="buyer.updateValidity()" type="text" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="buyer.settings.ID" required/>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label for="buyerNameInput" class="control-label col-sm-3">Name</label>\r\n                        <div class="col-sm-9">\r\n                            <input id="buyerNameInput" name="buyerNameinput" type="text" ng-model="buyer.settings.Name" class="form-control" required>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-offset-3 col-sm-9">\r\n                            <div class="checkbox">\r\n                                <label for="buyerActiveCheckbox">\r\n                                    <input id="buyerActiveCheckbox" name="buyerActiveCheckbox" type="checkbox" ng-model="buyer.settings.Active"/>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <fieldset class="form-group">\r\n                        <label for="orderCloudUpload" class="col-sm-3 control-label">Logo</label>\r\n                        <div class="col-sm-9">\r\n                            <oc-file-upload model="buyer.settings" keyname="logo" extensions="jpg, png, gif, jpeg, tiff"></oc-file-upload>\r\n                        </div>\r\n                    </fieldset>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-offset-3 col-sm-9">\r\n                            <button class="btn btn-block btn-primary" cg-busy="buyer.updateLoading" type="submit">Save Changes</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <hr>\r\n                <button class="btn btn-block btn-danger" type="button" ng-click="buyer.deleteBuyer()"><i class="fa fa-trash-o"></i> Delete Buyer Organization</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</article>'),
$templateCache.put("buyerManagement/buyers/templates/buyerCreate.modal.html",'<form name="buyerCreateModal.form" class="form-horizontal" ng-submit="buyerCreateModal.submit()" novalidate autocomplete="off">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="buyerCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Buyer Organization</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="buyerID" class="control-label col-sm-3">Buyer ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="buyerID" name="ID" type="text" ng-change="buyerCreateModal.updateValidity()" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="buyerCreateModal.buyer.ID"/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="buyerName" class="control-label col-sm-3">Buyer Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="buyerName" name="Name"  type="text" ng-model="buyerCreateModal.buyer.Name" class="form-control" required>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="checkbox">\r\n                    <label for="buyerActiveCheckbox">\r\n                        <input id="buyerActiveCheckbox" name="Active" type="checkbox" ng-model="buyerCreateModal.buyer.Active"/>\r\n                        Active\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-block btn-primary" ng-disabled="buyerCreateModal.form.$invalid" cg-busy="buyerCreateModal.loading">Submit</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/buyers/templates/buyers.html",'<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            Buyer Organizations\r\n        </h3>\r\n        <!--====== CREATE ======-->\r\n        <div class="l-page-header__btns">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="buyers.createBuyer()"><i class="fa fa-plus-circle"></i>\r\n                New Buyer\r\n            </button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH ======-->\r\n    <div ng-if="buyers.list.Items.length || (!buyers.list.Items.length && buyers.searchResults)">\r\n        <form name="buyers.searchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-search"></i>\r\n                    </span>\r\n                    <input type="search" ng-change="buyers.search()" ng-model-options="{debounce:1000}" placeholder="Search buyers..." ng-model="buyers.parameters.search" class="form-control">\r\n                    <span ng-if="buyers.searchResults" class="input-group-btn">\r\n                        <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="buyers.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear Search</span></button>\r\n                    </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="buyers.searchLoading">\r\n        <div class="no-matches" ng-if="!buyers.list.Items.length">\r\n            <b ng-if="buyers.searchResults">No matches found.</b>\r\n            <b ng-if="!buyers.searchResults">This seller organization does not have any buyer organizations.</b>\r\n        </div>\r\n        <div ng-if="buyers.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6">\r\n                    <button ng-if="buyers.selectedCount" class="btn btn-danger btn-xs" ng-click="buyers.deleteSelected()">\r\n                        <i class="fa fa-trash"></i> Delete {{buyers.selectedCount == 1 ? "Buyers" : (buyers.selectedCount + " Buyers")}}\r\n                    </button>\r\n                </div>\r\n                <div class="col-xs-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? buyers.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        buyers.list.Meta.ItemRange[1] + \' of \' + buyers.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-buyer-table">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th ng-click="buyers.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="buyers.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="buyers.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="buyers.updateSort(\'Name\')">\r\n                            Name\r\n                            <i class="fa fa-caret-down" ng-show="buyers.parameters.sortBy == \'Name\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="buyers.parameters.sortBy == \'!Name\'"></i>\r\n                        </th>\r\n                        <th>\r\n                            Active\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="buyer in buyers.list.Items">\r\n                        <td>{{buyer.ID}}</td>\r\n                        <td><a href="" ui-sref="buyer({buyerid:buyer.ID})">{{buyer.Name}}</a></td>\r\n                        <td class="text-center">\r\n                            <i class="fa fa-circle" aria-hidden="true" ng-class="{\'active\':buyer.Active}"></i>\r\n                        </td>\r\n                        <td>\r\n                            <button class="btn btn-danger btn-xs" ng-click="buyers.deleteBuyer(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                boundary-links="buyers.list.Meta.TotalPages > 5"\r\n                max-size="5"\r\n                total-items="buyers.list.Meta.TotalCount"\r\n                items-per-page="buyers.list.Meta.PageSize"\r\n                ng-model="buyers.list.Meta.Page"\r\n                ng-if="buyers.list.Meta.TotalPages > 1"\r\n                ng-change="buyers.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="buyers.list.Meta.Page < buyers.list.Meta.TotalPages"\r\n                    ng-click="buyers.loadMore()">Load More\r\n            </button>\r\n        </div>\r\n    </div>\r\n</article>\r\n'),$templateCache.put("buyerManagement/costCenters/templates/costCenterCreate.modal.html",'<form name="costCenterCreateModal.form" class="form-horizontal" ng-submit="costCenterCreateModal.submit()" cg-busy="costCenterCreateModal.loading" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="costCenterCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Cost Center</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="costCenterID" class="col-sm-3 control-label">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="costCenterID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="costCenterCreateModal.costCenter.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="costCenterName" class="col-sm-3 control-label">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="costCenterName" name="Name" type="text" class="form-control" ng-model="costCenterCreateModal.costCenter.Name" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="costCenterDescription" class="col-sm-3 control-label">Description</label>\r\n            <div class="col-sm-9">\r\n                <textarea rows="4" id="costCenterDescription" name="Description" placeholder="(Optional)" class="form-control" ng-model="costCenterCreateModal.costCenter.Description"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="costCenterCreateModal.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/costCenters/templates/costCenterEdit.modal.html",'<form name="costCenterEditModal.form" class="form-horizontal" ng-submit="costCenterEditModal.submit()" cg-busy="costCenterEditModal.loading" novalidate oc-readonly-roles="CostCenterAdmin">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="costCenterEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> {{costCenterEditModal.costCenterName}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="costCenterID" class="col-sm-3 control-label">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="costCenterID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="costCenterEditModal.costCenter.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="costCenterName" class="col-sm-3 control-label">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="costCenterName" name="Name" type="text" class="form-control" ng-model="costCenterEditModal.costCenter.Name" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="costCenterDescription" class="col-sm-3 control-label">Description</label>\r\n            <div class="col-sm-9">\r\n                <textarea rows="4" id="costCenterDescription" name="Description" placeholder="(Optional)" class="form-control" ng-model="costCenterEditModal.costCenter.Description"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/costCenters/templates/costCenters.html",'<header class="l-page-header">\r\n    <h3 class="l-page-header__title">\r\n        Cost Centers\r\n    </h3>\r\n    <!--====== CREATE ======-->\r\n    <div class="l-page-header__btns" oc-if-roles="CostCenterAdmin">\r\n        <button type="button" class="btn btn-primary btn-block" ng-click="costCenters.createCostCenter()"><i class="fa fa-plus-circle"></i>\r\n            New Cost Center\r\n        </button>\r\n    </div>\r\n</header>\r\n<!--====== SEARCH/FILTERS ======-->\r\n<div ng-if="costCenters.list.Items.length || (!costCenters.list.Items.length && costCenters.searchResults)">\r\n    <form name="costCenters.searchForm" pretty-submit>\r\n        <fieldset class="form-group">\r\n            <div class="input-group">\r\n                <span class="input-group-addon">\r\n                    <i class="fa fa-search"></i>\r\n                </span>\r\n                <input type="search" ng-change="costCenters.search()" ng-model-options="{debounce:1000}" placeholder="Search costCenters..." ng-model="costCenters.parameters.search" class="form-control">\r\n                <span ng-if="costCenters.searchResults" class="input-group-btn">\r\n                    <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="costCenters.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear</span></button>\r\n                </span>\r\n            </div>\r\n        </fieldset>\r\n    </form>\r\n</div>\r\n\r\n<div cg-busy="costCenters.searchLoading">\r\n    <div class="no-matches" ng-if="!costCenters.list.Items.length">\r\n        <b ng-if="costCenters.searchResults">No matches found.</b>\r\n        <b ng-if="!costCenters.searchResults">This buyer organization does not have any cost centers.</b>\r\n    </div>\r\n    <div ng-if="costCenters.list.Items.length">\r\n        <div class="row">\r\n            <div class="col-xs-6">\r\n                <div class="btn-group" ng-if="costCenters.changedAssignments.length">\r\n                    <button class="btn btn-primary btn-xs" ng-click="costCenters.updateAssignments()">\r\n                        Update Assignments\r\n                    </button>\r\n                    <button class="btn btn-default btn-xs" ng-click="costCenters.resetAssignments()">\r\n                        <i class="fa fa-times"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class="col-xs-6">\r\n                <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? costCenters.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                    costCenters.list.Meta.ItemRange[1] + \' of \' + costCenters.list.Meta.TotalCount + \' results\'}}</p>\r\n            </div>\r\n        </div>\r\n        <div class="panel panel-default table-responsive">\r\n            <table class="table table-striped table-bordered l-costcenter-table" oc-readonly-roles="CostCenterAdmin">\r\n                <colgroup>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col oc-if-roles="CostCenterAdmin">\r\n                </colgroup>\r\n                <thead>\r\n                <tr>\r\n                    <th class="text-center" ng-click="application.userIsAuthorized([\'CostCenterAdmin\']) ? costCenters.selectAllItems() : angular.noop()">\r\n                        Assign\r\n                    </th>\r\n                    <th ng-click="costCenters.updateSort(\'ID\')">\r\n                        ID\r\n                        <i class="fa fa-caret-down" ng-show="costCenters.parameters.sortBy == \'ID\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="costCenters.parameters.sortBy == \'!ID\'"></i>\r\n                    </th>\r\n                    <th ng-click="costCenters.updateSort(\'Name\')">\r\n                        Name\r\n                        <i class="fa fa-caret-down" ng-show="costCenters.parameters.sortBy == \'Name\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="costCenters.parameters.sortBy == \'!Name\'"></i>\r\n                    </th>\r\n                    <th oc-if-roles="CostCenterAdmin"></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr ng-repeat="costCenter in costCenters.list.Items">\r\n                    <td class="text-center">\r\n                        <input type="checkbox" ng-model="costCenter.Assigned" ng-change="costCenters.selectItem(this)"/>\r\n                    </td>\r\n                    <td>{{costCenter.ID}}</td>\r\n                    <td><a href="" ng-click="costCenters.editCostCenter(this)">{{costCenter.Name}}</a></td>\r\n                    <td oc-if-roles="CostCenterAdmin">\r\n                        <button class="btn btn-danger btn-xs" type="button" ng-click="costCenters.deleteCostCenter(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <ul uib-pagination\r\n            class="pagination-sm pull-right hidden-xs"\r\n            boundary-links="costCenters.list.Meta.TotalPages > 5"\r\n            max-size="5"\r\n            total-items="costCenters.list.Meta.TotalCount"\r\n            items-per-page="costCenters.list.Meta.PageSize"\r\n            ng-model="costCenters.list.Meta.Page"\r\n            ng-if="costCenters.list.Meta.TotalPages > 1"\r\n            ng-change="costCenters.pageChanged()">\r\n        </ul>\r\n        <button type="button"\r\n                class="btn btn-default btn-block btn-lg visible-xs"\r\n                ng-show="costCenters.list.Meta.Page < costCenters.list.Meta.TotalPages"\r\n                ng-click="costCenters.loadMore()">Load More\r\n        </button>\r\n    </div>\r\n</div>'),$templateCache.put("buyerManagement/creditCards/templates/creditCardCreate.modal.html",'<form name="creditCardCreateModal.form" class="form-horizontal" ng-submit="creditCardCreateModal.submit()" autocomplete="off" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="creditCardCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Credit Card</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="creditCardID">Credit Card ID</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="creditCardID" name="ID" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" ng-model="creditCardCreateModal.creditCard.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="creditCardCardholderName">Cardholder Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="creditCardCardholderName" name="CardholderName" ng-model="creditCardCreateModal.creditCard.CardholderName" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="creditCardCardNumber">Card Number</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="creditCardCardNumber"\r\n                       name="CardNumber" ng-model="creditCardCreateModal.creditCard.CardNumber"\r\n                       payments-validate="card" payments-format="card" payments-type-model="creditCardCreateModal.creditCard.CardType" ng-class="creditCardCreateModal.creditCard.CardType"\r\n                       disable-validation-message required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="creditCardCardCode">Security Code</label>\r\n            <div class="col-sm-9">\r\n                <input type="number" class="form-control" id="creditCardCardCode" name="CardCode" ng-model="creditCardCreateModal.creditCard.CardCode" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" form="creditCardExpirationMonth">Expiration Month</label>\r\n            <div class="col-sm-9">\r\n                <select class="form-control" id="creditCardExpirationMonth" name="ExpirationMonth"\r\n                        ng-model="creditCardCreateModal.creditCard.ExpirationMonth" ng-options="month.string as month.string for month in creditCardCreateModal.creditCardInfo.ExpirationMonths" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" form="creditCardExpirationYear">Expiration Year</label>\r\n            <div class="col-sm-9">\r\n                <select class="form-control" id="creditCardExpirationYear" name="ExpirationYear"\r\n                        ng-model="creditCardCreateModal.creditCard.ExpirationYear" ng-options="year as year for year in creditCardCreateModal.creditCardInfo.ExpirationYears" required></select>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" cg-busy="addressCreateModal.loading" ng-disabled="creditCardCreateModal.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/creditCards/templates/creditCardEdit.modal.html",'<form name="creditCardEditModal.form" class="form-horizontal" ng-submit="creditCardEditModal.submit()" autocomplete="off" novalidate oc-readonly-roles="CreditCardAdmin">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="creditCardEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> Card ending in {{creditCardEditModal.creditCard.PartialAccountNumber}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="creditCardID">Credit Card ID</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="creditCardID" name="ID" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" ng-model="creditCardEditModal.creditCard.UpdatedCreditCardID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" for="creditCardCardholderName">Cardholder Name</label>\r\n            <div class="col-sm-9">\r\n                <input type="text" class="form-control" id="creditCardCardholderName" name="CardholderName" ng-model="creditCardEditModal.creditCard.CardholderName" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" form="creditCardExpirationMonth">Expiration Month</label>\r\n            <div class="col-sm-9">\r\n                <select class="form-control" id="creditCardExpirationMonth" name="ExpirationMonth"\r\n                        ng-model="creditCardEditModal.creditCard.ExpirationMonth" ng-options="month.string as month.string for month in creditCardEditModal.creditCardInfo.ExpirationMonths" required></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label" form="creditCardExpirationYear">Expiration Year</label>\r\n            <div class="col-sm-9">\r\n                <select class="form-control" id="creditCardExpirationYear" name="ExpirationYear"\r\n                        ng-model="creditCardEditModal.creditCard.ExpirationYear" ng-options="year as year for year in creditCardEditModal.creditCardInfo.ExpirationYears" required></select>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" cg-busy="creditCardEditModal.loading">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/creditCards/templates/creditCards.html",'<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            Credit Cards\r\n        </h3>\r\n        <!--====== CREATE ======-->\r\n        <div class="l-page-header__btns" oc-if-roles="CreditCardAdmin">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="creditCards.createCreditCard()"><i class="fa fa-plus-circle"></i>\r\n                New Credit Card\r\n            </button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH ======-->\r\n    <div ng-if="costCecreditCardsnters.list.Items.length || (!creditCards.list.Items.length && creditCards.searchResults)">\r\n        <form name="creditCards.searchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon"><i class="fa fa-search"></i></span>\r\n                    <input type="search" ng-change="creditCards.search()" ng-model-options="{debounce:1000}" placeholder="Search credit cards..." ng-model="creditCards.parameters.search" class="form-control">\r\n                    <span ng-if="creditCards.searchResults" class="input-group-btn">\r\n                        <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="creditCards.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear Search</span></button>\r\n                    </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="creditCards.searchLoading">\r\n        <div class="no-matches" ng-if="!creditCards.list.Items.length">\r\n            <b ng-if="creditCards.searchResults">No matches found.</b>\r\n            <b ng-if="!creditCards.searchResults">This buyer organization does not have any credit cards.</b>\r\n        </div>\r\n        <div ng-if="creditCards.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6">\r\n                    <button ng-if="creditCards.changedAssignments.length" ng-click="creditCards.updateAssignments()" class="btn btn-primary btn-xs">\r\n                        Update Assignments\r\n                    </button>\r\n                </div>\r\n                <div class="col-xs-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? creditCards.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        creditCards.list.Meta.ItemRange[1] + \' of \' + creditCards.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-address-table" oc-readonly-roles="CreditCardAdmin">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col width="10%">\r\n                        <col oc-if-roles="CreditCardAdmin">\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th class="text-center" ng-click="application.userIsAuthorized([\'CreditCardAdmin\']) ? creditCards.selectAllItems(\'billing\') : angular.noop()">\r\n                            Assigned\r\n                        </th>\r\n                        <th ng-click="creditCards.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="creditCards.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="creditCards.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="creditCards.updateSort(\'CardholderName\')">\r\n                            Cardholder Name\r\n                            <i class="fa fa-caret-down" ng-show="creditCards.parameters.sortBy == \'CardholderName\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="creditCards.parameters.sortBy == \'!CardholderName\'"></i>\r\n                        </th>\r\n                        <th>\r\n                            Details\r\n                        </th>\r\n                        <th>\r\n                            Exp. Date\r\n                        </th>\r\n                        <th oc-if-roles="CreditCardAdmin"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="creditCard in creditCards.list.Items">\r\n                        <td class="text-center">\r\n                            <input type="checkbox" ng-model="creditCard.Assigned" ng-change="creditCards.selectItem(this, \'assigned\')" />\r\n                        </td>\r\n                        <td>\r\n                            <a href="" ng-click="creditCards.editCreditCard(this)">{{creditCard.ID}}</a>\r\n                        </td>\r\n                        <td>\r\n                            {{creditCard.CardholderName}}\r\n                        </td>\r\n                        <td>\r\n                            <span><i class="fa fa-lg {{creditCard.CardType | faCreditCard}}"></i></span>\r\n                            <span>{{\'XXXX-XXXX-XXXX-\' + creditCard.PartialAccountNumber}}</span>\r\n                        </td>\r\n                        <td>\r\n                            {{creditCard.ExpirationDate | date:\'MM/yyyy\'}}\r\n                        </td>\r\n                        <td oc-if-roles="CreditCardAdmin">\r\n                            <button type="button" class="btn btn-danger btn-block btn-xs" ng-click="creditCards.deleteCreditCard(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                boundary-links="creditCards.list.Meta.TotalPages > 5"\r\n                max-size="5"\r\n                total-items="creditCards.list.Meta.TotalCount"\r\n                items-per-page="creditCards.list.Meta.PageSize"\r\n                ng-model="creditCards.list.Meta.Page"\r\n                ng-if="creditCards.list.Meta.TotalPages > 1"\r\n                ng-change="creditCards.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="creditCards.list.Meta.Page < creditCards.list.Meta.TotalPages"\r\n                    ng-click="creditCards.loadMore()">Load More\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</article>'),$templateCache.put("buyerManagement/promotions/templates/promotionCreate.modal.html",'<form name="promotionCreateModal.form" ng-submit="promotionCreateModal.submit()" cg-busy="promotionCreateModal.loading" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="promotionCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Promotion</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-horizontal">\r\n            <div class="form-group">\r\n                <label for="promotionID" class="col-sm-3 control-label">ID</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="promotionCreateModal.promotion.ID"/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionName" class="col-sm-3 control-label">Name</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionName" name="Name" type="text" placeholder="(Optional)" class="form-control" ng-model="promotionCreateModal.promotion.Name"/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionDescription" class="control-label col-sm-3">Description</label>\r\n                <div class="col-sm-9">\r\n                    <textarea rows="2" id="promotionDescription" name="Description" placeholder="(Optional) Describe your promotion..." type="text" class="form-control" ng-model="promotionCreateModal.promotion.Description"></textarea>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionFinePrint" class="control-label col-sm-3">Fine Print</label>\r\n                <div class="col-sm-9">\r\n                    <textarea rows="2" id="promotionFinePrint" name="FinePrint" placeholder="(Optional)" type="text" class="form-control" ng-model="promotionCreateModal.promotion.FinePrint"></textarea>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class="form-group">\r\n                <label for="promotionCode" class="col-sm-3 control-label">Code</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionCode" name="Code" type="text" class="form-control" ng-model="promotionCreateModal.promotion.Code" required/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-offset-3 col-sm-9">\r\n                    <div class="checkbox">\r\n                        <label for="promotionCanCombine">\r\n                            <input id="promotionCanCombine" name="CanCombine" type="checkbox" ng-model="promotionCreateModal.promotion.CanCombine"/>\r\n                            Can combine with other promotions\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionRedemptionLimit" class="col-sm-3 control-label">Redemption Limit</label>\r\n                <div class="col-sm-9">\r\n                    <div class="row">\r\n                        <div class="col-xs-6">\r\n                            <input id="promotionRedemptionLimit" name="RedemptionLimit" type="number" placeholder="(Optional)" step="any" min="0" class="form-control" ng-model="promotionCreateModal.promotion.RedemptionLimit"/>\r\n                        </div>\r\n                        <div class="col-xs-6">\r\n                            <div class="input-group">\r\n                                <input id="promotionRedemptionLimitPerUser" name="RedemptionLimitPerUser" type="number" placeholder="(Optional)" step="any" min="0" class="form-control" ng-model="promotionCreateModal.promotion.RedemptionLimitPerUser"/>\r\n                                <div class="input-group-addon">\r\n                                    Per User\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionStartDate" class="col-sm-3 control-label">Start Date</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionStartDate" ng-if="application.isTouchDevice" class="form-control"  type="date" ng-model="promotionCreateModal.promotion.StartDate"/>\r\n                    <input id="promotionStartDate" ng-if="!application.isTouchDevice" type="text" ng-click="open1 = !open1" is-open="open1" uib-datepicker-popup="MM/dd/yyyy" class="form-control" ng-model="promotionCreateModal.promotion.StartDate">\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionExpirationDate" class="col-sm-3 control-label">Expiration Date</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionExpirationDate" ng-if="application.isTouchDevice" class="form-control"  type="date" ng-model="promotionCreateModal.promotion.ExpirationDate"/>\r\n                    <input id="promotionExpirationDate" ng-if="!application.isTouchDevice" type="text" ng-click="open2 = !open2" is-open="open2" uib-datepicker-popup="MM/dd/yyyy" class="form-control" ng-model="promotionCreateModal.promotion.ExpirationDate">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class="form-group">\r\n            <label for="EligibleExpression">Eligible Expression</label>\r\n            <textarea rows="2" id="EligibleExpression" name="EligibleExpression" type="text" class="form-control" ng-model="promotionCreateModal.promotion.EligibleExpression" required></textarea>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="ValueExpression">Value Expression</label>\r\n            <textarea rows="2" id="ValueExpression" name="ValueExpression" type="text" class="form-control" ng-model="promotionCreateModal.promotion.ValueExpression" required></textarea>\r\n        </div>\r\n\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="promotionCreateModal.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),
$templateCache.put("buyerManagement/promotions/templates/promotionEdit.modal.html",'<form name="promotionEditModal.form" ng-submit="promotionEditModal.submit()" cg-busy="promotionEditModal.loading" novalidate oc-readonly-roles="PromotionAdmin">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="promotionEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span>{{promotionEditModal.promotionName}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-horizontal">\r\n            <div class="form-group">\r\n                <label for="promotionID" class="col-sm-3 control-label">ID</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="promotionEditModal.promotion.ID"/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionName" class="col-sm-3 control-label">Name</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionName" name="Name" type="text" placeholder="(Optional)" class="form-control" ng-model="promotionEditModal.promotion.Name"/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionDescription" class="control-label col-sm-3">Description</label>\r\n                <div class="col-sm-9">\r\n                    <textarea rows="2" id="promotionDescription" name="Description" placeholder="(Optional) Describe your promotion..." type="text" class="form-control" ng-model="promotionEditModal.promotion.Description"></textarea>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionFinePrint" class="control-label col-sm-3">Fine Print</label>\r\n                <div class="col-sm-9">\r\n                    <textarea rows="2" id="promotionFinePrint" name="FinePrint" placeholder="(Optional)" type="text" class="form-control" ng-model="promotionEditModal.promotion.FinePrint"></textarea>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class="form-group">\r\n                <label for="promotionCode" class="col-sm-3 control-label">Code</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionCode" name="Code" type="text" class="form-control" ng-model="promotionEditModal.promotion.Code" required/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-offset-3 col-sm-9">\r\n                    <div class="checkbox">\r\n                        <label for="promotionCanCombine">\r\n                            <input id="promotionCanCombine" name="CanCombine" type="checkbox" ng-model="promotionEditModal.promotion.CanCombine"/>\r\n                            Can combine with other promotions\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionRedemptionLimit" class="col-sm-3 control-label">Redemption Limit</label>\r\n                <div class="col-sm-9">\r\n                    <div class="row">\r\n                        <div class="col-xs-6">\r\n                            <input id="promotionRedemptionLimit" name="RedemptionLimit" type="number" placeholder="(Optional)" step="any" min="0" class="form-control" ng-model="promotionEditModal.promotion.RedemptionLimit"/>\r\n                        </div>\r\n                        <div class="col-xs-6">\r\n                            <div class="input-group">\r\n                                <input id="promotionRedemptionLimitPerUser" name="RedemptionLimitPerUser" type="number" placeholder="(Optional)" step="any" min="0" class="form-control" ng-model="promotionEditModal.promotion.RedemptionLimitPerUser"/>\r\n                                <div class="input-group-addon">\r\n                                    Per User\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionStartDate" class="col-sm-3 control-label">Start Date</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionStartDate" ng-if="application.isTouchDevice" class="form-control"  type="date" ng-model="promotionEditModal.promotion.StartDate"/>\r\n                    <input id="promotionStartDate" ng-if="!application.isTouchDevice" type="text" ng-click="open1 = !open1" is-open="open1" uib-datepicker-popup="MM/dd/yyyy" class="form-control" ng-model="promotionEditModal.promotion.StartDate">\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="promotionExpirationDate" class="col-sm-3 control-label">Expiration Date</label>\r\n                <div class="col-sm-9">\r\n                    <input id="promotionExpirationDate" ng-if="application.isTouchDevice" class="form-control"  type="date" ng-model="promotionEditModal.promotion.ExpirationDate"/>\r\n                    <input id="promotionExpirationDate" ng-if="!application.isTouchDevice" type="text" ng-click="open2 = !open2" is-open="open2" uib-datepicker-popup="MM/dd/yyyy" class="form-control" ng-model="promotionEditModal.promotion.ExpirationDate">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class="form-group">\r\n            <label for="EligibleExpression">Eligible Expression</label>\r\n            <textarea rows="2" id="EligibleExpression" name="EligibleExpression" type="text" class="form-control" ng-model="promotionEditModal.promotion.EligibleExpression" required></textarea>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="ValueExpression">Value Expression</label>\r\n            <textarea rows="2" id="ValueExpression" name="ValueExpression" type="text" class="form-control" ng-model="promotionEditModal.promotion.ValueExpression" required></textarea>\r\n        </div>\r\n\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/promotions/templates/promotions.html",'<header class="l-page-header">\r\n    <h3 class="l-page-header__title">\r\n        Promotions\r\n    </h3>\r\n    <!--====== CREATE ======-->\r\n    <div class="l-page-header__btns" oc-if-roles="PromotionAdmin">\r\n        <button type="button" class="btn btn-primary btn-block" ng-click="promotions.createPromotion()"><i class="fa fa-plus-circle"></i>\r\n            New Promotion\r\n        </button>\r\n    </div>\r\n</header>\r\n<div class="alert alert-info">\r\n    Promotions are unique in that they are shared by all buyer organizations.\r\n    Any changes made to promotions under <em>{{buyer.settings.Name}}</em> will affect the promotion details for <b>all other buyer organizations</b>.\r\n    Assignments are still unique to each buyer.\r\n</div>\r\n<!--====== SEARCH/FILTERS ======-->\r\n<div ng-if="promotions.list.Items.length || (!promotions.list.Items.length && promotions.searchResults)">\r\n    <form name="promotions.searchForm" pretty-submit>\r\n        <fieldset class="form-group">\r\n            <div class="input-group">\r\n                <span class="input-group-addon">\r\n                    <i class="fa fa-search"></i>\r\n                </span>\r\n                <input type="search" ng-change="promotions.search()" ng-model-options="{debounce:1000}" placeholder="Search promotions..." ng-model="promotions.parameters.search" class="form-control">\r\n                <span ng-if="promotions.searchResults" class="input-group-btn">\r\n                    <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="promotions.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear</span></button>\r\n                </span>\r\n            </div>\r\n        </fieldset>\r\n    </form>\r\n</div>\r\n\r\n<div cg-busy="promotions.searchLoading">\r\n    <div class="no-matches" ng-if="!promotions.list.Items.length">\r\n        <b ng-if="promotions.searchResults">No matches found.</b>\r\n        <b ng-if="!promotions.searchResults">This seller organization does not have any available promotions.</b>\r\n    </div>\r\n    <div ng-if="promotions.list.Items.length">\r\n        <div class="row">\r\n            <div class="col-xs-6">\r\n                <div class="btn-group" ng-if="promotions.changedAssignments.length">\r\n                    <button class="btn btn-primary btn-xs" ng-click="promotions.updateAssignments()">\r\n                        Update Assignments\r\n                    </button>\r\n                    <button class="btn btn-default btn-xs" ng-click="promotions.resetAssignments()">\r\n                        <i class="fa fa-times"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class="col-xs-6">\r\n                <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? promotions.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                    promotions.list.Meta.ItemRange[1] + \' of \' + promotions.list.Meta.TotalCount + \' results\'}}</p>\r\n            </div>\r\n        </div>\r\n        <div class="panel panel-default table-responsive">\r\n            <table class="table table-striped table-bordered l-promotion-table" oc-readonly-roles="PromotionAdmin">\r\n                <colgroup>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col oc-if-roles="PromotionAdmin">\r\n                </colgroup>\r\n                <thead>\r\n                <tr>\r\n                    <th class="text-center" ng-click="application.userIsAuthorized([\'PromotionAdmin\']) ? promotions.selectAllItems() : angular.noop()">\r\n                        Assign\r\n                    </th>\r\n                    <th ng-click="promotions.updateSort(\'ID\')">\r\n                        ID\r\n                        <i class="fa fa-caret-down" ng-show="promotions.parameters.sortBy == \'ID\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="promotions.parameters.sortBy == \'!ID\'"></i>\r\n                    </th>\r\n                    <th ng-click="promotions.updateSotr(\'Name\')">\r\n                        Name\r\n                        <i class="fa fa-caret-down" ng-show="promotions.parameters.sortBy == \'Name\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="promotions.parameters.sortBy == \'!Name\'"></i>\r\n                    </th>\r\n                    <th ng-click="promotions.updateSort(\'Code\')">\r\n                        Code\r\n                        <i class="fa fa-caret-down" ng-show="promotions.parameters.sortBy == \'Code\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="promotions.parameters.sortBy == \'!Code\'"></i>\r\n                    </th>\r\n                    <th>\r\n                        Start Date\r\n                    </th>\r\n                    <th>\r\n                        Expiration Date\r\n                    </th>\r\n                    <th oc-if-roles="PromotionAdmin"></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr ng-repeat="promotion in promotions.list.Items">\r\n                    <td class="text-center">\r\n                        <input type="checkbox" ng-model="promotion.Assigned" ng-change="promotions.selectItem(this)"/>\r\n                    </td>\r\n                    <td>{{promotion.ID}}</td>\r\n                    <td>\r\n                        <span ng-if="promotion.Name">{{promotion.Name}}</span>\r\n                        <em class="text-muted" ng-if="!promotion.Name">None</em>\r\n                    </td>\r\n                    <td><a href="" ng-click="promotions.editPromotion(this)">{{promotion.Code}}</a></td>\r\n                    <td>{{promotion.StartDate | date}} <em ng-if="!promotion.StartDate" class="text-muted">None</em></td>\r\n                    <td>{{promotion.ExpirationDate | date}} <em ng-if="!promotion.ExpirationDate" class="text-muted">None</em></td>\r\n                    <td oc-if-roles="PromotionAdmin">\r\n                        <button class="btn btn-danger btn-xs" type="button" ng-click="promotions.deletePromotion(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <ul uib-pagination\r\n            class="pagination-sm pull-right hidden-xs"\r\n            boundary-links="promotions.list.Meta.TotalPages > 5"\r\n            max-size="5"\r\n            total-items="promotions.list.Meta.TotalCount"\r\n            items-per-page="promotions.list.Meta.PageSize"\r\n            ng-model="promotions.list.Meta.Page"\r\n            ng-if="promotions.list.Meta.TotalPages > 1"\r\n            ng-change="promotions.pageChanged()">\r\n        </ul>\r\n        <button type="button"\r\n                class="btn btn-default btn-block btn-lg visible-xs"\r\n                ng-show="promotions.list.Meta.Page < promotions.list.Meta.TotalPages"\r\n                ng-click="promotions.loadMore()">Load More\r\n        </button>\r\n    </div>\r\n</div>'),$templateCache.put("buyerManagement/approvalRules/templates/approvalRuleCreate.modal.html",'<form name="approvalRuleCreateModal.form" ng-submit="approvalRuleCreateModal.submit()" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="approvalRuleCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Approval Rule</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-horizontal">\r\n            <div class="form-group">\r\n                <label for="ID" class="control-label col-sm-3">ID</label>\r\n                <div class="col-sm-9">\r\n                    <input id="ID" name="ID" type="text" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="approvalRuleCreateModal.approvalRule.ID"/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="Name" class="control-label col-sm-3">Name</label>\r\n                <div class="col-sm-9">\r\n                    <input id="Name" name="Name" type="text" class="form-control" ng-model="approvalRuleCreateModal.approvalRule.Name" required/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="Description" class="control-label col-sm-3">Description</label>\r\n                <div class="col-sm-9">\r\n                    <textarea rows="4" id="Description" name="Description" placeholder="(Optional) Describe your approval rule..." type="text" class="form-control" ng-model="approvalRuleCreateModal.approvalRule.Description"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class="form-group">\r\n            <label for="RuleExpression">Rule Expression</label>\r\n            <textarea rows="2" id="RuleExpression" name="RuleExpression" type="text" class="form-control" ng-model="approvalRuleCreateModal.approvalRule.RuleExpression" required></textarea>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="ApprovingGroupID">Approving Group</label>\r\n            <script type="text/ng-template" id="ocTypeahead_usergroup.html">\r\n                <a>\r\n                    <span ng-bind-html="match.model.Name | uibTypeaheadHighlight:query"></span>\r\n                    <code ng-bind-html="match.model.ID | uibTypeaheadHighlight:query"></code>\r\n                </a>\r\n            </script>\r\n\r\n            <input id="ApprovingGroupID"\r\n                   name="ApprovingGroupID"\r\n                   type="text"\r\n                   placeholder="Approving Group ID..."\r\n                   class="form-control"\r\n                   uib-typeahead="group.ID as group.Name for group in approvalRuleCreateModal.searchGroups($viewValue)"\r\n                   typeahead-min-length="0"\r\n                   typeahead-template-url="ocTypeahead_usergroup.html"\r\n                   ng-model-options="{debounce:1000}"\r\n                   ng-model="approvalRuleCreateModal.approvalRule.ApprovingGroupID" required/>\r\n            <small class="help-block">Enter the ID of the buyer user group that will approve these orders.</small>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-block btn-primary" ng-disabled="approvalRuleCreateModal.form.$invalid" cg-busy="approvalRuleCreateModal.loading">Submit</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/approvalRules/templates/approvalRuleEdit.modal.html",'<form name="approvalRuleEditModal.form" ng-submit="approvalRuleEditModal.submit()" novalidate ng-disabled="approvalRuleEditModal.loading" oc-readonly-roles="ApprovalRuleAdmin">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="approvalRuleEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> {{approvalRuleEditModal.approvalRuleName}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-horizontal">\r\n            <div class="form-group">\r\n                <label for="ID" class="control-label col-sm-3">ID</label>\r\n                <div class="col-sm-9">\r\n                    <input id="ID" name="ID" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="approvalRuleEditModal.approvalRule.ID"/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="Name" class="control-label col-sm-3">Name</label>\r\n                <div class="col-sm-9">\r\n                    <input id="Name" name="Name" type="text" class="form-control" ng-model="approvalRuleEditModal.approvalRule.Name" required/>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="Description" class="control-label col-sm-3">Description</label>\r\n                <div class="col-sm-9">\r\n                    <textarea rows="4" id="Description" name="Description" placeholder="(Optional) Describe your approval rule..." type="text" class="form-control" ng-model="approvalRuleEditModal.approvalRule.Description"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class="form-group">\r\n            <label for="RuleExpression">Rule Expression</label>\r\n            <textarea rows="2" id="RuleExpression" name="RuleExpression" type="text" class="form-control" ng-model="approvalRuleEditModal.approvalRule.RuleExpression" required></textarea>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="ApprovingGroupID">Approving Group</label>\r\n            <script type="text/ng-template" id="ocTypeahead_usergroup.html">\r\n                <a>\r\n                    <span ng-bind-html="match.model.Name | uibTypeaheadHighlight:query"></span>\r\n                    <code ng-bind-html="match.model.ID | uibTypeaheadHighlight:query"></code>\r\n                </a>\r\n            </script>\r\n\r\n            <input id="ApprovingGroupID"\r\n                   name="ApprovingGroupID"\r\n                   type="text"\r\n                   placeholder="Approving Group ID..."\r\n                   class="form-control"\r\n                   uib-typeahead="group.ID as group.Name for group in approvalRuleEditModal.searchGroups($viewValue)"\r\n                   typeahead-min-length="0"\r\n                   typeahead-template-url="ocTypeahead_usergroup.html"\r\n                   ng-model-options="{debounce:1000}"\r\n                   ng-model="approvalRuleEditModal.approvalRule.ApprovingGroupID" required/>\r\n            <small class="help-block">Enter the ID of the buyer user group that will approve these orders.</small>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer" >\r\n        <button type="submit" class="btn btn-block btn-primary" cg-busy="approvalRuleEditModal.loading">Update</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/approvalRules/templates/approvalRules.html",'<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            Approval Rules\r\n        </h3>\r\n        <!--====== CREATE ======-->\r\n        <div class="l-page-header__btns" oc-if-roles="ApprovalRuleAdmin">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="approvalRules.createApprovalRule()"><i class="fa fa-plus-circle"></i>\r\n                New Approval Rule\r\n            </button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH ======-->\r\n    <div ng-if="approvalRules.list.Items.length || (!approvalRules.list.Items.length && approvalRules.searchResults)">\r\n        <form name="approvalRules.searchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-search"></i>\r\n                    </span>\r\n                    <input type="search" ng-change="approvalRules.search()" ng-model-options="{debounce:1000}" placeholder="Search approval rules..." ng-model="approvalRules.parameters.search" class="form-control">\r\n                    <span ng-if="approvalRules.searchResults" class="input-group-btn">\r\n                        <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="approvalRules.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear</span></button>\r\n                    </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="approvalRules.searchLoading">\r\n        <div class="no-matches" ng-if="!approvalRules.list.Items.length">\r\n            <b ng-if="approvalRules.searchResults">No matches found.</b>\r\n            <b ng-if="!approvalRules.searchResults">This buyer organization does not have any approval rules.</b>\r\n        </div>\r\n        <div ng-if="approvalRules.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6">\r\n                    <button ng-if="approvalRules.selectedCount" class="btn btn-danger btn-xs" ng-click="approvalRules.deleteSelected()">\r\n                        <i class="fa fa-trash"></i> Delete {{approvalRules.selectedCount == 1 ? "Buyer User" : (approvalRules.selectedCount + " Buyer Users")}}\r\n                    </button>\r\n                </div>\r\n                <div class="col-xs-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? approvalRules.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        approvalRules.list.Meta.ItemRange[1] + \' of \' + approvalRules.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-approvalrule-table">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col oc-if-roles="ApprovalRuleAdmin">\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th ng-click="approvalRules.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="approvalRules.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="approvalRules.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="approvalRules.updateSort(\'Name\')">\r\n                            Name\r\n                            <i class="fa fa-caret-down" ng-show="approvalRules.parameters.sortBy == \'Name\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="approvalRules.parameters.sortBy == \'!Name\'"></i>\r\n                        </th>\r\n                        <th ng-click="approvalRules.updateSort(\'ApprovingGroupID\')">\r\n                            Approving Group\r\n                            <i class="fa fa-caret-down" ng-show="approvalRules.parameters.sortBy == \'ApprovingGroupID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="approvalRules.parameters.sortBy == \'!ApprovingGroupID\'"></i>\r\n                        </th>\r\n                        <th oc-if-roles="ApprovalRuleAdmin"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="approvalRule in approvalRules.list.Items">\r\n                        <td>{{approvalRule.ID}}</td>\r\n                        <td><a href="" ng-click="approvalRules.editApprovalRule(this)">{{approvalRule.Name}}</a></td>\r\n                        <td><a href="" ui-sref="userGroup({usergroupid:approvalRule.ApprovingGroupID})">{{approvalRule.ApprovingGroupID}}</a></td>\r\n                        <td oc-if-roles="ApprovalRuleAdmin">\r\n                            <button class="btn btn-danger btn-xs btn-block" ng-click="approvalRules.deleteApprovalRule(this)"><i class="fa fa-trash-o"></i><span class="hidden-xs"> Delete</span></button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="approvalRules.list.Meta.TotalPages > 1"\r\n                total-items="approvalRules.list.Meta.TotalCount"\r\n                items-per-page="approvalRules.list.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="approvalRules.list.Meta.TotalPages > 5"\r\n                ng-model="approvalRules.list.Meta.Page"\r\n                ng-change="approvalRules.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="approvalRules.list.Meta.Page < approvalRules.list.Meta.TotalPages"\r\n                    ng-click="approvalRules.loadMore()">Load More</button>\r\n        </div>\r\n    </div>\r\n\r\n</article>'),$templateCache.put("buyerManagement/userGroups/templates/userGroup.html",'<ol class="breadcrumb">\r\n    <li><a href="" ui-sref="userGroups">User Groups</a></li>\r\n    <li class="active">{{userGroup.group.Name}}</li>\r\n</ol>\r\n<div class="row">\r\n    <div class="col-sm-4 col-lg-3">\r\n        <nav class="navmenu navmenu-default navmenu-inline" role="navigation">\r\n            <a href="" class="navmenu-brand">\r\n                <i class="fa fa-bars pull-right visible-xs" ng-click="userGroup.showNav = !userGroup.showNav"></i>\r\n                {{userGroup.group.Name}}\r\n            </a>\r\n            <ul class="nav navmenu-nav" uib-collapse="!userGroup.showNav && (application.$ocMedia(\'max-width:767px\'))">\r\n                <li ng-class="{\'active\':application.$state.is(\'userGroup\')}">\r\n                    <a href="" ui-sref="userGroup"><i class="fa fa-cog"></i> Settings</a>\r\n                </li>\r\n                <li ui-sref-active="active">\r\n                    <a href="" ui-sref=".security"><i class="fa fa-lock"></i> Security</a>\r\n                </li>\r\n                <li ui-sref-active="active" oc-if-roles="BuyerUserRoles">\r\n                    <a href="" ui-sref=".users"><i class="fa fa-user"></i> Users</a>\r\n                </li>\r\n                <li ui-sref-active="active" oc-if-roles="AddressRoles">\r\n                    <a href="" ui-sref=".addresses"><i class="fa fa-map-marker"></i> Addresses</a>\r\n                </li>\r\n                <li ui-sref-active="active" oc-if-roles="CreditCardRoles">\r\n                    <a href="" ui-sref=".creditCards"><i class="fa fa-credit-card"></i> Credit Cards</a>\r\n                </li>\r\n                <li ui-sref-active="active" oc-if-roles="SpendingAccountRoles">\r\n                    <a href="" ui-sref=".spendingAccounts"><i class="fa fa-dollar"></i> Spending Accounts</a>\r\n                </li>\r\n                <li ui-sref-active="active" oc-if-roles="CostCenterRoles">\r\n                    <a href="" ui-sref=".costCenters"><i class="fa fa-asterisk"></i> Cost Centers</a>\r\n                </li>\r\n                <li ui-sref-active="active" oc-if-roles="PromotionRoles">\r\n                    <a href="" ui-sref=".promotions"><i class="fa fa-bullhorn"></i> Promotions</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n    <article class="col-sm-8 col-lg-9" ui-view cg-busy="application.stateLoading(\'userGroup\')">\r\n        <header class="l-page-header">\r\n            <h3 class="l-page-header__title">User Group Settings</h3>\r\n        </header>\r\n        <div class="row">\r\n            <div class="col-sm-9 col-lg-8">\r\n                <form name="userGroup.editForm" class="form-horizontal" ng-submit="userGroup.update()" oc-readonly-roles="UserGroupAdmin">\r\n                    <fieldset class="form-group">\r\n                        <label for="userGroupID" class="col-sm-4 control-label">User Group ID</label>\r\n                        <div class="col-sm-8">\r\n                            <input type="text" id="userGroupID" class="form-control" name="ID" ng-model="userGroup.model.ID" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name">\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <label for="userGroupName" class="col-sm-4 control-label">Name</label>\r\n                        <div class="col-sm-8">\r\n                            <input type="text" id="userGroupName" class="form-control" name="Name" ng-model="userGroup.model.Name" required>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <label for="userGroupDescription" class="col-sm-4 control-label">Description</label>\r\n                        <div class="col-sm-8">\r\n                            <textarea rows="4" id="userGroupDescription" class="form-control" name="Description" ng-model="userGroup.model.Description" placeholder="(Optional)"></textarea>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <div class="col-sm-offset-4 col-sm-8">\r\n                            <button type="submit" class="btn btn-primary btn-block">Update User Group</button>\r\n                        </div>\r\n                    </fieldset>\r\n                    <hr>\r\n                    <button type="button" class="btn btn-danger btn-block" ng-click="userGroup.delete()"><i class="fa fa-trash-o"></i> Delete User Group</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </article>\r\n</div>'),
$templateCache.put("buyerManagement/userGroups/templates/userGroupCreate.modal.html",'<form name="userGroupCreateModal.form" class="form-horizontal" ng-submit="userGroupCreateModal.submit()" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="userGroupCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New User Group</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="UserGroupID" class="control-label col-sm-3">User Group ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="UserGroupID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="userGroupCreateModal.userGroup.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="UserGroupName" class="control-label col-sm-3">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="UserGroupName" name="Name" type="text" class="form-control" ng-model="userGroupCreateModal.userGroup.Name" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="UserGroupDescription" class="control-label col-sm-3">Description</label>\r\n            <div class="col-sm-9">\r\n                <textarea rows="4" id="UserGroupDescription" placeholder="Describe this group..." name="Description" type="text" class="form-control" ng-model="userGroupCreateModal.userGroup.Description"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="userGroupCreateModal.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/userGroups/templates/userGroups.html",'<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            User Groups\r\n        </h3>\r\n        <!--====== CREATE ======-->\r\n        <div class="l-page-header__btns" oc-if-roles="UserGroupAdmin">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="userGroups.createGroup()"><i class="fa fa-plus-circle"></i>\r\n                New User Group\r\n            </button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH/FILTERS ======-->\r\n    <div ng-if="userGroups.list.Items.length || (!userGroups.list.Items.length && userGroups.searchResults)">\r\n        <form name="userGroups.searchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-search"></i>\r\n                    </span>\r\n                    <input type="search" ng-change="userGroups.search()" ng-model-options="{debounce:1000}" placeholder="Search Users..." ng-model="userGroups.parameters.search" class="form-control">\r\n                    <span ng-if="userGroups.searchResults" class="input-group-btn">\r\n                        <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="userGroups.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear</span></button>\r\n                    </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="userGroups.searchLoading">\r\n        <div class="no-matches" ng-if="!userGroups.list.Items.length">\r\n            <b ng-if="userGroups.searchResults">No matches found.</b>\r\n            <b ng-if="!userGroups.searchResults">This buyer organization does not have any user groups.</b>\r\n        </div>\r\n        <div ng-if="userGroups.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6">\r\n                    <button ng-if="userGroups.selectedCount" class="btn btn-danger btn-xs" ng-click="userGroups.deleteSelected()">\r\n                        <i class="fa fa-trash"></i> Delete {{userGroups.selectedCount == 1 ? "User Group" : (userGroups.selectedCount + " User Groups")}}\r\n                    </button>\r\n                </div>\r\n                <div class="col-xs-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? userGroups.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        userGroups.list.Meta.ItemRange[1] + \' of \' + userGroups.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-usergroup-table">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col oc-if-roles="UserGroupAdmin">\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th ng-click="userGroups.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="userGroups.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="userGroups.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="userGroups.updateSort(\'Name\')">\r\n                            Name\r\n                            <i class="fa fa-caret-down" ng-show="userGroups.parameters.sortBy == \'Name\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="userGroups.parameters.sortBy == \'!Name\'"></i>\r\n                        </th>\r\n                        <th>Description</th>\r\n                        <th oc-if-roles="UserGroupAdmin"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="userGroup in userGroups.list.Items">\r\n                        <td>{{userGroup.ID}}</td>\r\n                        <td>\r\n                            <a href="" ui-sref="userGroup({usergroupid:userGroup.ID})">{{userGroup.Name}}</a>\r\n                        </td>\r\n                        <td>{{userGroup.Description}}</td>\r\n                        <td oc-if-roles="UserGroupAdmin">\r\n                            <button ng-click="userGroups.deleteGroup(this)" class="btn btn-danger btn-xs"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                boundary-links="userGroups.list.Meta.TotalPages > 5"\r\n                max-size="5"\r\n                total-items="userGroups.list.Meta.TotalCount"\r\n                items-per-page="userGroups.list.Meta.PageSize"\r\n                ng-model="userGroups.list.Meta.Page"\r\n                ng-if="userGroups.list.Meta.TotalPages > 1"\r\n                ng-change="userGroups.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="userGroups.list.Meta.Page < userGroups.list.Meta.TotalPages"\r\n                    ng-click="userGroups.loadMore()">Load More\r\n            </button>\r\n        </div>\r\n    </div>\r\n</article>\r\n'),$templateCache.put("buyerManagement/users/templates/userCreate.modal.html",'<form name="userCreateModal.form" class="form-horizontal" ng-submit="userCreateModal.submit()" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="userCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New User</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="ID" class="control-label col-sm-3">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="ID" name="ID" type="text" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="userCreateModal.user.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Username" class="control-label col-sm-3">Username</label>\r\n            <div class="col-sm-9">\r\n                <input id="Username" name="Username" type="text" class="form-control" ng-model="userCreateModal.user.Username" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Password" class="control-label col-sm-3">Password</label>\r\n            <div class="col-sm-9">\r\n                <input id="Password" name="Password" type="password" pattern=\'^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$\' pattern-err-type="customPassword" class="form-control" ng-model="userCreateModal.user.Password" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="FirstName" class="control-label col-sm-3">First Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="FirstName" name="FirstName" type="text" class="form-control" ng-model="userCreateModal.user.FirstName" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="LastName" class="control-label col-sm-3">Last Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="LastName" name="LastName" type="text" class="form-control" ng-model="userCreateModal.user.LastName" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Phone" class="control-label col-sm-3">Phone Number</label>\r\n            <div class="col-sm-9">\r\n                <input id="Phone" name="Phone" placeholder="(Optional)" type="tel" class="form-control" ng-model="userCreateModal.user.Phone" />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Email" class="control-label col-sm-3">Email Address</label>\r\n            <div class="col-sm-9">\r\n                <input id="Email" name="Email" type="email" class="form-control" ng-model="userCreateModal.user.Email" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="checkbox">\r\n                    <label for="Active">\r\n                        <input id="Active" name="Active" type="checkbox" ng-model="userCreateModal.user.Active"/>\r\n                        Active\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-block btn-primary" ng-disabled="userCreateModal.form.$invalid" cg-busy="userCreateModal.loading">Submit</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/users/templates/userEdit.modal.html",'<form name="userEditModal.form" class="form-horizontal" ng-submit="userEditModal.submit()" novalidate ng-disabled="userEditModal.loading" oc-readonly-roles="BuyerUserAdmin">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="userEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span>{{userEditModal.fullName || userEditModal.username}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="ID" class="control-label col-sm-3">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="ID" name="ID" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="userEditModal.user.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Name" class="control-label col-sm-3">Username</label>\r\n            <div class="col-sm-9">\r\n                <input id="Name" name="Name" type="text" class="form-control" ng-model="userEditModal.user.Username" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="FirstName" class="control-label col-sm-3">First Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="FirstName" name="FirstName" type="text" class="form-control" ng-model="userEditModal.user.FirstName" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="LastName" class="control-label col-sm-3">Last Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="LastName" name="LastName" type="text" class="form-control" ng-model="userEditModal.user.LastName" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Phone" class="control-label col-sm-3">Phone Number</label>\r\n            <div class="col-sm-9">\r\n                <input id="Phone" name="Phone" type="tel" class="form-control" ng-model="userEditModal.user.Phone" />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="Email" class="control-label col-sm-3">Email Address</label>\r\n            <div class="col-sm-9">\r\n                <input id="Email" name="Email" type="email" class="form-control" ng-model="userEditModal.user.Email" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="checkbox">\r\n                    <label for="Active">\r\n                        <input id="Active" name="Active" type="checkbox" ng-model="userEditModal.user.Active"/>\r\n                        Active\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer" >\r\n        <button type="submit" class="btn btn-block btn-primary" cg-busy="userEditModal.loading">Update</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/users/templates/userGroupUsers.html",'<header class="l-page-header">\r\n    <h3 class="l-page-header__title">\r\n        Users\r\n    </h3>\r\n    <!--====== CREATE ======-->\r\n    <div class="l-page-header__btns" oc-if-roles="UserGroupAdmin">\r\n        <button type="button" class="btn btn-primary btn-block" ng-click="userGroupUsers.createUser()"><i class="fa fa-plus-circle"></i>\r\n            New User\r\n        </button>\r\n    </div>\r\n</header>\r\n<!--====== SEARCH/FILTERS ======-->\r\n<div ng-if="userGroupUsers.list.Items.length || (!userGroupUsers.list.Items.length && userGroupUsers.searchResults)">\r\n    <form name="userGroupUsers.searchForm" pretty-submit>\r\n        <fieldset class="form-group">\r\n            <div class="input-group">\r\n                <span class="input-group-addon">\r\n                    <i class="fa fa-search"></i>\r\n                </span>\r\n                <input type="search" ng-change="userGroupUsers.search()" ng-model-options="{debounce:1000}" placeholder="Search users..." ng-model="userGroupUsers.parameters.search" class="form-control">\r\n                <span ng-if="userGroupUsers.searchResults" class="input-group-btn">\r\n                    <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="userGroupUsers.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear</span></button>\r\n                </span>\r\n            </div>\r\n        </fieldset>\r\n    </form>\r\n</div>\r\n\r\n<div cg-busy="userGroupUsers.searchLoading">\r\n    <div class="no-matches" ng-if="!userGroupUsers.list.Items.length">\r\n        <b ng-if="users.searchResults">No matches found.</b>\r\n        <b ng-if="!users.searchResults">This buyer organization does not have any users.</b>\r\n    </div>\r\n    <div ng-if="userGroupUsers.list.Items.length">\r\n        <div class="row">\r\n            <div class="col-xs-6">\r\n                <div class="btn-group" ng-if="userGroupUsers.changedAssignments.length">\r\n                    <button class="btn btn-primary btn-xs" ng-click="userGroupUsers.updateAssignments()">\r\n                        Update Assignments\r\n                    </button>\r\n                    <button class="btn btn-default btn-xs" ng-click="userGroupUsers.resetAssignments()">\r\n                        <i class="fa fa-times"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class="col-xs-6">\r\n                <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? userGroupUsers.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                    userGroupUsers.list.Meta.ItemRange[1] + \' of \' + userGroupUsers.list.Meta.TotalCount + \' results\'}}</p>\r\n            </div>\r\n        </div>\r\n        <div class="panel panel-default table-responsive">\r\n            <table class="table table-striped table-bordered l-user-table__usergroup" oc-readonly-roles="UserGroupAdmin">\r\n                <colgroup>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col oc-if-roles="UserGroupAdmin">\r\n                </colgroup>\r\n                <thead>\r\n                <tr>\r\n                    <th class="text-center" ng-click="application.userIsAuthorized([\'UserGroupAdmin\']) ? userGroupUsers.selectAllItems() : angular.noop()">\r\n                        Assign\r\n                        <!--<input type="checkbox" ng-model="userGroupUsers.allItemsSelected" ng-change="userGroupUsers.selectAllItems()" />-->\r\n                    </th>\r\n                    <!--<th ng-click="userGroupUsers.updateSort(\'ID\')">\r\n                        ID\r\n                        <i class="fa fa-caret-down" ng-show="userGroupUsers.parameters.sortBy == \'ID\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="userGroupUsers.parameters.sortBy == \'!ID\'"></i>\r\n                    </th>-->\r\n                    <th ng-click="userGroupUsers.updateSort(\'Username\')">\r\n                        Username\r\n                        <i class="fa fa-caret-down" ng-show="userGroupUsers.parameters.sortBy == \'Username\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="userGroupUsers.parameters.sortBy == \'!Username\'"></i>\r\n                    </th>\r\n                    <!--<th ng-click="userGroupUsers.updateSort(\'FirstName\')">\r\n                        First Name\r\n                        <i class="fa fa-caret-down" ng-show="userGroupUsers.parameters.sortBy == \'FirstName\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="userGroupUsers.parameters.sortBy == \'!FirstName\'"></i>\r\n                    </th>\r\n                    <th ng-click="userGroupUsers.updateSort(\'LastName\')">\r\n                        Last Name\r\n                        <i class="fa fa-caret-down" ng-show="userGroupUsers.parameters.sortBy == \'LastName\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="userGroupUsers.parameters.sortBy == \'!LastName\'"></i>\r\n                    </th>-->\r\n                    <th ng-click="userGroupUsers.updateSort(\'Email\')">\r\n                        Email\r\n                        <i class="fa fa-caret-down" ng-show="userGroupUsers.parameters.sortBy == \'Email\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="userGroupUsers.parameters.sortBy == \'!Email\'"></i>\r\n                    </th>\r\n                    <th oc-if-roles="UserGroupAdmin"></th>\r\n                    <!--<th>\r\n                        Active\r\n                    </th>-->\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr ng-repeat="user in userGroupUsers.list.Items">\r\n                    <td class="text-center">\r\n                        <input type="checkbox" ng-model="user.Assigned" ng-change="userGroupUsers.selectItem(this)"/>\r\n                    </td>\r\n                    <!--<td>\r\n                        <a href="">{{user.ID}}</a>\r\n                    </td>-->\r\n                    <td><a href="" ng-click="userGroupUsers.editUser(this)">{{user.Username}}</a></td>\r\n                    <!--<td>{{user.FirstName}}</td>\r\n                    <td>{{user.LastName}}</td>-->\r\n                    <td>{{user.Email}}</td>\r\n                    <td oc-if-roles="UserGroupAdmin">\r\n                        <button class="btn btn-danger btn-xs" type="button" ng-click="userGroupUsers.deleteUser(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                    </td>\r\n                    <!--<td class="text-center"><i class="fa fa-circle" ng-class="{active:user.Active}"></i></td>-->\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <ul uib-pagination\r\n            class="pagination-sm pull-right hidden-xs"\r\n            boundary-links="userGroupUsers.list.Meta.TotalPages > 5"\r\n            max-size="5"\r\n            total-items="userGroupUsers.list.Meta.TotalCount"\r\n            items-per-page="userGroupUsers.list.Meta.PageSize"\r\n            ng-model="userGroupUsers.list.Meta.Page"\r\n            ng-if="userGroupUsers.list.Meta.TotalPages > 1"\r\n            ng-change="userGroupUsers.pageChanged()">\r\n        </ul>\r\n        <button type="button"\r\n                class="btn btn-default btn-block btn-lg visible-xs"\r\n                ng-show="userGroupUsers.list.Meta.Page < userGroupUsers.list.Meta.TotalPages"\r\n                ng-click="userGroupUsers.loadMore()">Load More\r\n        </button>\r\n    </div>\r\n</div>'),$templateCache.put("buyerManagement/users/templates/users.html",'<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            Users\r\n        </h3>\r\n        <!--====== CREATE ======-->\r\n        <div class="l-page-header__btns" oc-if-roles="BuyerUserAdmin">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="users.createUser()"><i class="fa fa-plus-circle"></i>\r\n                New User\r\n            </button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH ======-->\r\n    <div ng-if="users.list.Items.length || (!users.list.Items.length && users.searchResults)">\r\n        <form name="users.searchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-search"></i>\r\n                    </span>\r\n                    <input type="search" ng-change="users.search()" ng-model-options="{debounce:1000}" placeholder="Search users..." ng-model="users.parameters.search" class="form-control">\r\n                    <span ng-if="users.searchResults" class="input-group-btn">\r\n                        <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="users.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear</span></button>\r\n                    </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="users.searchLoading">\r\n        <div class="no-matches" ng-if="!users.list.Items.length">\r\n            <b ng-if="users.searchResults">No matches found.</b>\r\n            <b ng-if="!users.searchResults">This buyer organization does not have any users.</b>\r\n        </div>\r\n        <div ng-if="users.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6">\r\n                    <button ng-if="users.selectedCount" class="btn btn-danger btn-xs" ng-click="users.deleteSelected()">\r\n                        <i class="fa fa-trash"></i> Delete {{users.selectedCount == 1 ? "Buyer User" : (users.selectedCount + " Buyer Users")}}\r\n                    </button>\r\n                </div>\r\n                <div class="col-xs-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? users.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        users.list.Meta.ItemRange[1] + \' of \' + users.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-user-table">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col oc-if-roles="BuyerUserAdmin">\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th ng-click="users.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="users.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="users.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="users.updateSort(\'Username\')">\r\n                            Username\r\n                            <i class="fa fa-caret-down" ng-show="users.parameters.sortBy == \'Username\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="users.parameters.sortBy == \'!Username\'"></i>\r\n                        </th>\r\n                        <th ng-click="users.updateSort(\'FirstName\')">\r\n                            First Name\r\n                            <i class="fa fa-caret-down" ng-show="users.parameters.sortBy == \'FirstName\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="users.parameters.sortBy == \'!FirstName\'"></i>\r\n                        </th>\r\n                        <th ng-click="users.updateSort(\'LastName\')">\r\n                            Last Name\r\n                            <i class="fa fa-caret-down" ng-show="users.parameters.sortBy == \'LastName\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="users.parameters.sortBy == \'!LastName\'"></i>\r\n                        </th>\r\n                        <th ng-click="users.updateSort(\'Email\')">\r\n                            Email\r\n                            <i class="fa fa-caret-down" ng-show="users.parameters.sortBy == \'Email\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="users.parameters.sortBy == \'!Email\'"></i>\r\n                        </th>\r\n                        <th>\r\n                            Active\r\n                        </th>\r\n                        <th oc-if-roles="BuyerUserAdmin"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="user in users.list.Items">\r\n                        <td>{{user.ID}}</td>\r\n                        <td><a href="" ng-click="users.editUser(this)">{{user.Username}}</a></td>\r\n                        <td>{{user.FirstName}}</td>\r\n                        <td>{{user.LastName}}</td>\r\n                        <td>{{user.Email}}</td>\r\n                        <td class="text-center"><i class="fa fa-circle" ng-class="{active:user.Active}"></i></td>\r\n                        <td oc-if-roles="BuyerUserAdmin">\r\n                            <button class="btn btn-danger btn-xs btn-block" ng-click="users.deleteUser(this)"><i class="fa fa-trash-o"></i><span class="hidden-xs"> Delete</span></button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="users.list.Meta.TotalPages > 1"\r\n                total-items="users.list.Meta.TotalCount"\r\n                items-per-page="users.list.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="users.list.Meta.TotalPages > 5"\r\n                ng-model="users.list.Meta.Page"\r\n                ng-change="users.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="users.list.Meta.Page < users.list.Meta.TotalPages"\r\n                    ng-click="users.loadMore()">Load More</button>\r\n        </div>\r\n    </div>\r\n\r\n</article>'),$templateCache.put("catalogManagement/assignmentsView/templates/assignmentsView.html",'<div ng-if="catalogAssignments.tree.length">\r\n    <div ng-if="!catalogAssignments.category" class="well text-center">\r\n        Select a category to view details\r\n    </div>\r\n    <div ng-if="catalogAssignments.category">\r\n        <header>\r\n            <div class="pull-right" oc-if-roles="CategoryAdmin">\r\n                <button type="button" class="btn btn-default" ng-click="catalogAssignments.editCategory(catalogAssignments.category.ID)"><i class="fa fa-edit"></i> Edit</button>\r\n                <button type="button" class="btn btn-danger" ng-click="catalogAssignments.deleteCategory(catalogAssignments.category.ID)"><i class="fa fa-trash"></i> Delete</button>\r\n            </div>\r\n            <h3>\r\n                {{catalogAssignments.category.Name}}\r\n                <small>(ID: {{catalogAssignments.category.ID}})</small>\r\n            </h3>\r\n            <p ng-bind-html="catalogAssignments.category.Description || \'<em class=\\\'text-muted\\\'>No description</em>\'"></p>\r\n        </header>\r\n        <uib-tabset>\r\n            <uib-tab>\r\n                <br>\r\n                <uib-tab-heading>Products</uib-tab-heading>\r\n                <div ng-if="!catalogAssignments.category" class="well text-center">\r\n                    Select a category to view details\r\n                </div>\r\n                <!--Assign a Product to Category-->\r\n                <div class="row" ng-if="catalogAssignments.category" oc-if-roles="CategoryAdmin">\r\n                    <div class="col-xs-12 col-sm-8 col-md-9">\r\n                        <ui-select multiple ng-model="catalogAssignments.selectedProducts" close-on-select="false">\r\n                            <ui-select-match placeholder="Search and select products to add...">\r\n                                {{$item.Name}}\r\n                                <span ng-bind="$select.selected.Name"></span>\r\n                            </ui-select-match>\r\n                            <ui-select-choices repeat="product in (catalogAssignments.uiSelectProducts.Items | filter: $select.search) track by $index" refresh="catalogAssignments.listAllProducts($select.search)" refresh-delay="300">\r\n                                <b><span ng-bind="product.Name"></span></b>\r\n                                <br>\r\n                                <small>\r\n                                    <b>ID: </b>{{product.ID}}\r\n                                </small>\r\n                            </ui-select-choices>\r\n                        </ui-select>\r\n                    </div>\r\n                    <div class="col-xs-12 col-sm-4 col-md-3">\r\n                        <button class="btn btn-primary btn-block" ng-disabled="!catalogAssignments.selectedProducts.length" ng-click="catalogAssignments.saveAssignment()"><i class="fa fa-plus-circle"></i> Add Products</button>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n                <div class="well text-center" ng-if="!catalogAssignments.products.Items.length">\r\n                    This category does not contain any products.\r\n                </div>\r\n                <!--Product Assignment List-->\r\n                <div class="table-responsive panel panel-default" ng-if="catalogAssignments.products.Items.length">\r\n                    <table class="table table-striped table-bordered">\r\n                        <colgroup>\r\n                            <col style="width:30%">\r\n                            <col style="width:70%">\r\n                        </colgroup>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th colspan="2">Name</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr ng-repeat="product in catalogAssignments.products.Items">\r\n                            <td><a href="" ui-sref="productDetail({productid: product.ID})">{{product.ID}}</a></td>\r\n                            <td>{{product.Name}}</td>\r\n                            <td oc-if-roles="CategoryAdmin">\r\n                                <button type="button" class="btn btn-xs btn-danger" uib-tooltip="Remove Product" tooltip-placement="left" ng-click="catalogAssignments.deleteAssignment(product)"><i class="fa fa-times"></i></button>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <ul uib-pagination\r\n                    class="pagination-sm pull-right"\r\n                    boundary-links="catalogAssignments.products.Meta.TotalPages > 5"\r\n                    max-size="5"\r\n                    total-items="catalogAssignments.products.Meta.TotalCount"\r\n                    items-per-page="catalogAssignments.products.Meta.PageSize"\r\n                    ng-model="catalogAssignments.products.Meta.Page"\r\n                    ng-if="catalogAssignments.products.Meta.TotalPages > 1"\r\n                    ng-change="catalogAssignments.productPageChanged()">\r\n                </ul>\r\n            </uib-tab>\r\n            <uib-tab oc-if-roles="[\'CategoryAdmin\', \'BuyerReader\', \'UserGroupReader\']">\r\n                <uib-tab-heading>Availability</uib-tab-heading>\r\n                <br>\r\n                <div ng-if="!catalogAssignments.category" class="well text-center">\r\n                    Select a category to view details\r\n                </div>\r\n                <!-- -->\r\n                <div ng-if="catalogAssignments.category">\r\n                    <p>Assign to:\r\n                    <form name="selectAssignmentType">\r\n                        <div class="form-group">\r\n                            <div class="radio">\r\n                                <label>\r\n                                    <input type="radio" ng-model="catalogAssignments.assignmentType" ng-change="catalogAssignments.toggleBuyerAssignment()" value="buyer">\r\n                                    Buyer Organization\r\n                                </label>\r\n                            </div>\r\n                            <div class="radio">\r\n                                <label>\r\n                                    <input type="radio" ng-model="catalogAssignments.assignmentType" ng-change="catalogAssignments.toggleBuyerAssignment()" value="userGroups"> User Groups\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <hr ng-if="catalogAssignments.assignmentType === \'userGroups\'">\r\n                </div>\r\n                <!--Party Assignment List-->\r\n                <div class="row" ng-if="catalogAssignments.category && catalogAssignments.assignmentType === \'userGroups\'">\r\n                    <div class="col-xs-12 col-sm-8 col-md-9">\r\n                        <ui-select multiple ng-model="catalogAssignments.selectedUserGroups" close-on-select="false">\r\n                            <ui-select-match placeholder="Type to search user groups">\r\n                                {{$item.Name}}\r\n                                <span ng-bind="$select.selected.Name"></span>\r\n                            </ui-select-match>\r\n                            <ui-select-choices repeat="userGroup in (catalogAssignments.uiSelectedGroups.Items | filter: $select.search) track by $index" refresh="catalogAssignments.listAllUserGroups($select.search)" refresh-delay="300">\r\n                                <b><span ng-bind="userGroup.Name"></span></b>\r\n                                <br>\r\n                                <small>\r\n                                    <div class="row">\r\n                                        <div class="col-md-6">\r\n                                            ID: {{userGroup.ID}}\r\n                                        </div>\r\n                                    </div>\r\n                                </small>\r\n                            </ui-select-choices>\r\n                        </ui-select>\r\n                    </div>\r\n                    <div class="col-xs-12 col-sm-4 col-md-3">\r\n                        <button class="btn btn-primary btn-block" ng-disabled="!catalogAssignments.selectedUserGroups.length" ng-click="catalogAssignments.savePartyAssignment()"><i class="fa fa-plus-circle"></i> Add Groups</button>\r\n                    </div>\r\n                </div>\r\n                <hr ng-if="catalogAssignments.assignmentType === \'userGroups\'">\r\n                <div class="well text-center" ng-if="!catalogAssignments.userGroups.Items && catalogAssignments.assignmentType === \'userGroups\'">\r\n                    This category is not assigned to any user groups.\r\n                </div>\r\n                <div class="table-responsive panel panel-default" ng-if="catalogAssignments.userGroups.Items && catalogAssignments.assignmentType === \'userGroups\'">\r\n                    <table class="table table-striped table-bordered">\r\n                        <colgroup>\r\n                            <col style="width:30%">\r\n                            <col style="width:70%">\r\n                        </colgroup>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th colspan="2">Name</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr ng-repeat="userGroup in catalogAssignments.userGroups.Items">\r\n                            <th><a href="" ui-sref="userGroups.detail({usergroupid: userGroup.ID})">{{userGroup.ID}}</a></th>\r\n                            <td>{{userGroup.Name}}</td>\r\n                            <td>\r\n                                <button type="button" class="btn btn-danger btn-xs" uib-tooltip="Remove User Group" tooltip-placement="left" ng-click="catalogAssignments.deletePartyAssignment(userGroup)">\r\n                                    <i class="fa fa-times"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <ul uib-pagination\r\n                    class="pagination-sm pull-right"\r\n                    boundary-links="catalogAssignments.userGroups.Meta.TotalPages > 5"\r\n                    max-size="5"\r\n                    total-items="catalogAssignments.userGroups.Meta.TotalCount"\r\n                    items-per-page="catalogAssignments.userGroups.Meta.PageSize"\r\n                    ng-model="catalogAssignments.userGroups.Meta.Page"\r\n                    ng-if="catalogAssignments.userGroups.Meta.TotalPages > 1"\r\n                    ng-change="catalogAssignments.userGroupPageChanged()">\r\n                </ul>\r\n            </uib-tab>\r\n        </uib-tabset>\r\n    </div>\r\n</div>\r\n'),
$templateCache.put("catalogManagement/categoryModalFactory/templates/create.html",'<form name="CategoryCreateModalForm" ng-submit="createCategory.submit()" class="form-horizontal" autocomplete="off" novalidate cg-busy="createCategory.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="createCategory.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Category</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="categoryIDInput" class="col-sm-3 control-label">Category ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="categoryIDInput" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="createCategory.category.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="categoryNameInput" class="col-sm-3 control-label">Category Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="categoryNameInput" type="text" class="form-control" ng-model="createCategory.category.Name" required/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="categoryDescriptionInput" class="col-sm-3 control-label">Description</label>\r\n            <div class="col-sm-9">\r\n                <textarea rows="4" id="categoryDescriptionInput" type="text" class="form-control" placeholder="(Optional)" ng-model="createCategory.category.Description"></textarea>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-9 col-md-offset-3">\r\n                <div class="checkbox">\r\n                    <label for="categoryActiveInput">\r\n                        <input id="categoryActiveInput" type="checkbox" ng-model="createCategory.category.Active"/>\r\n                        Active\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label">Image</label>\r\n            <div class="col-sm-9">\r\n                <oc-file-upload  model="createCategory.category" label="Image:" patch="createCategory.patchImage(xp)" keyname="image" extensions="jpg, png, gif, jpeg, tiff"></oc-file-upload>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="CategoryCreateForm.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("catalogManagement/categoryModalFactory/templates/edit.html",'<form name="CategoryCreateModalForm" ng-submit="editCategory.submit()" class="form-horizontal" novalidate cg-busy="editCategory.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="editCategory.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> {{editCategory.categoryName}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="categoryIDInput" class="col-sm-3 control-label">Category ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="categoryIDInput" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="editCategory.category.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="categoryNameInput" class="col-sm-3 control-label">Category Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="categoryNameInput" type="text" class="form-control" ng-model="editCategory.category.Name" required/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="categoryDescriptionInput" class="col-sm-3 control-label">Description</label>\r\n            <div class="col-sm-9">\r\n                <textarea rows="4" id="categoryDescriptionInput" type="text" class="form-control" placeholder="(Optional)" ng-model="editCategory.category.Description"></textarea>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-9 col-md-offset-3">\r\n                <div class="checkbox">\r\n                    <label for="categoryActiveInput">\r\n                        <input id="categoryActiveInput" type="checkbox" ng-model="editCategory.category.Active"/>\r\n                        Active\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label">Image</label>\r\n            <div class="col-sm-9">\r\n                <oc-file-upload  model="editCategory.category" label="Image:" patch="editCategory.patchImage(xp)" keyname="image" extensions="jpg, png, gif, jpeg, tiff"></oc-file-upload>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="CategoryCreateForm.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/spendingAccounts/templates/spendingAccountCreate.modal.html",'<form name="spendingAccountCreateModal.form" class="form-horizontal" ng-submit="spendingAccountCreateModal.submit()" cg-busy="spendingAccountCreateModal.loading" novalidate>\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="spendingAccountCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Spending Account</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="spendingAccountID" class="col-sm-3 control-label">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="spendingAccountCreateModal.spendingAccount.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="spendingAccountName" class="col-sm-3 control-label">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountName" name="Name" type="text" class="form-control" ng-model="spendingAccountCreateModal.spendingAccount.Name" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="spendingAccountStartDate" class="col-sm-3 control-label">Start Date</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountStartDate" ng-if="application.isTouchDevice" class="form-control"  type="date" ng-model="spendingAccountCreateModal.spendingAccount.StartDate"/>\r\n                <input id="spendingAccountStartDate" ng-if="!application.isTouchDevice" type="text" ng-click="open1 = !open1" is-open="open1" uib-datepicker-popup="MM/dd/yyyy" class="form-control" ng-model="spendingAccountCreateModal.spendingAccount.StartDate">\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="spendingAccountEndDate" class="col-sm-3 control-label">End Date</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountEndDate" ng-if="application.isTouchDevice" class="form-control"  type="date" ng-model="spendingAccountCreateModal.spendingAccount.EndDate"/>\r\n                <input id="spendingAccountEndDate" ng-if="!application.isTouchDevice" type="text" ng-click="open2 = !open2" is-open="open2" uib-datepicker-popup="MM/dd/yyyy" class="form-control" ng-model="spendingAccountCreateModal.spendingAccount.EndDate">\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="spendingAccountBalance" class="col-sm-3 control-label">Balance</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountBalance" name="Balance" type="number" step="any" min="0" class="form-control" ng-model="spendingAccountCreateModal.spendingAccount.Balance" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="checkbox">\r\n                    <label for="spendingAccountAllowAsPaymentMethod">\r\n                        <input id="spendingAccountAllowAsPaymentMethod" name="AllowAsPaymentMethod" type="checkbox" ng-model="spendingAccountCreateModal.spendingAccount.AllowAsPaymentMethod"/>\r\n                        Allow As Payment Method\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="spendingAccountCreateModal.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/spendingAccounts/templates/spendingAccountEdit.modal.html",'<form name="spendingAccountEditModal.form" class="form-horizontal" ng-submit="spendingAccountEditModal.submit()" cg-busy="spendingAccountEditModal.loading" novalidate oc-readonly-roles="SpendingAccountAdmin">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="spendingAccountEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> {{spendingAccountEditModal.spendingAccountName}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group">\r\n            <label for="spendingAccountID" class="col-sm-3 control-label">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="spendingAccountEditModal.spendingAccount.ID"/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="spendingAccountName" class="col-sm-3 control-label">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountName" name="Name" type="text" class="form-control" ng-model="spendingAccountEditModal.spendingAccount.Name" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="spendingAccountStartDate" class="col-sm-3 control-label">Start Date</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountStartDate" ng-if="application.isTouchDevice" class="form-control"  type="date" ng-model="spendingAccountEditModal.spendingAccount.StartDate"/>\r\n                <input id="spendingAccountStartDate" ng-if="!application.isTouchDevice" type="text" ng-click="open1 = !open1" is-open="open1" uib-datepicker-popup="MM/dd/yyyy" class="form-control" ng-model="spendingAccountEditModal.spendingAccount.StartDate">\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="spendingAccountEndDate" class="col-sm-3 control-label">End Date</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountEndDate" ng-if="application.isTouchDevice" class="form-control"  type="date" ng-model="spendingAccountEditModal.spendingAccount.EndDate"/>\r\n                <input id="spendingAccountEndDate" ng-if="!application.isTouchDevice" type="text" ng-click="open2 = !open2" is-open="open2" uib-datepicker-popup="MM/dd/yyyy" class="form-control" ng-model="spendingAccountEditModal.spendingAccount.EndDate">\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label for="spendingAccountBalance" class="col-sm-3 control-label">Balance</label>\r\n            <div class="col-sm-9">\r\n                <input id="spendingAccountBalance" name="Balance" type="number" step="any" min="0" class="form-control" ng-model="spendingAccountEditModal.spendingAccount.Balance" required/>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="checkbox">\r\n                    <label for="spendingAccountAllowAsPaymentMethod">\r\n                        <input id="spendingAccountAllowAsPaymentMethod" name="AllowAsPaymentMethod" type="checkbox" ng-model="spendingAccountEditModal.spendingAccount.AllowAsPaymentMethod"/>\r\n                        Allow As Payment Method\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("buyerManagement/spendingAccounts/templates/spendingAccounts.html",'<header class="l-page-header">\r\n    <h3 class="l-page-header__title">\r\n        Spending Accounts\r\n    </h3>\r\n    <!--====== CREATE ======-->\r\n    <div class="l-page-header__btns" oc-if-roles="SpendingAccountAdmin">\r\n        <button type="button" class="btn btn-primary btn-block" ng-click="spendingAccounts.createSpendingAccount()"><i class="fa fa-plus-circle"></i>\r\n            New Spending Account\r\n        </button>\r\n    </div>\r\n</header>\r\n<!--====== SEARCH/FILTERS ======-->\r\n<div ng-if="spendingAccounts.list.Items.length || (!spendingAccounts.list.Items.length && spendingAccounts.searchResults)">\r\n    <form name="spendingAccounts.searchForm" pretty-submit>\r\n        <fieldset class="form-group">\r\n            <div class="input-group">\r\n                <span class="input-group-addon">\r\n                    <i class="fa fa-search"></i>\r\n                </span>\r\n                <input type="search" ng-change="spendingAccounts.search()" ng-model-options="{debounce:1000}" placeholder="Search spendingAccounts..." ng-model="spendingAccounts.parameters.search" class="form-control">\r\n                <span ng-if="spendingAccounts.searchResults" class="input-group-btn">\r\n                    <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="spendingAccounts.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear</span></button>\r\n                </span>\r\n            </div>\r\n        </fieldset>\r\n    </form>\r\n</div>\r\n\r\n<div cg-busy="spendingAccounts.searchLoading">\r\n    <div class="no-matches" ng-if="!spendingAccounts.list.Items.length">\r\n        <b ng-if="spendingAccounts.searchResults">No matches found.</b>\r\n        <b ng-if="!spendingAccounts.searchResults">This buyer organization does not have any spending accounts.</b>\r\n    </div>\r\n    <div ng-if="spendingAccounts.list.Items.length">\r\n        <div class="row">\r\n            <div class="col-xs-6">\r\n                <div class="btn-group" ng-if="spendingAccounts.changedAssignments.length">\r\n                    <button class="btn btn-primary btn-xs" ng-click="spendingAccounts.updateAssignments()">\r\n                        Update Assignments\r\n                    </button>\r\n                    <button class="btn btn-default btn-xs" ng-click="spendingAccounts.resetAssignments()">\r\n                        <i class="fa fa-times"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class="col-xs-6">\r\n                <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? spendingAccounts.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                    spendingAccounts.list.Meta.ItemRange[1] + \' of \' + spendingAccounts.list.Meta.TotalCount + \' results\'}}</p>\r\n            </div>\r\n        </div>\r\n        <div class="panel panel-default table-responsive">\r\n            <table class="table table-striped table-bordered" ng-class="{\'l-spendingaccount-table__usergroup\': spendingAccounts.userGroupID, \'l-spendingaccount-table\': !spendingAccounts.userGroupID}" oc-readonly-roles="SpendingAccountAdmin">\r\n                <colgroup>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col oc-if-roles="SpendingAccountAdmin">\r\n                </colgroup>\r\n                <thead>\r\n                <tr>\r\n                    <th class="text-center" ng-click="application.userIsAuthorized([\'SpendingAccountAdmin\']) ? spendingAccounts.selectAllItems() : angular.noop()">\r\n                        Assign\r\n                    </th>\r\n                    <th ng-click="spendingAccounts.updateSort(\'ID\')">\r\n                        ID\r\n                        <i class="fa fa-caret-down" ng-show="spendingAccounts.parameters.sortBy == \'ID\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="spendingAccounts.parameters.sortBy == \'!ID\'"></i>\r\n                    </th>\r\n                    <th ng-click="spendingAccounts.updateSort(\'Name\')">\r\n                        Name\r\n                        <i class="fa fa-caret-down" ng-show="spendingAccounts.parameters.sortBy == \'Name\'"></i>\r\n                        <i class="fa fa-caret-up" ng-show="spendingAccounts.parameters.sortBy == \'!Name\'"></i>\r\n                    </th>\r\n                    <th>\r\n                        Balance\r\n                    </th>\r\n                    <th>\r\n                        Start Date\r\n                    </th>\r\n                    <th>\r\n                        End Date\r\n                    </th>\r\n                    <th oc-if-roles="SpendingAccountAdmin"></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr ng-repeat="spendingAccount in spendingAccounts.list.Items">\r\n                    <td class="text-center">\r\n                        <input type="checkbox" ng-model="spendingAccount.Assigned" ng-change="spendingAccounts.selectItem(this)"/>\r\n                    </td>\r\n                    <td>{{spendingAccount.ID}}</td>\r\n                    <td><a href="" ng-click="spendingAccounts.editSpendingAccount(this)">{{spendingAccount.Name}}</a></td>\r\n                    <td>{{spendingAccount.Balance | currency}}</td>\r\n                    <td>{{spendingAccount.StartDate | date}} <em ng-if="!spendingAccount.StartDate" class="text-muted">None</em></td>\r\n                    <td>{{spendingAccount.EndDate | date}} <em ng-if="!spendingAccount.EndDate" class="text-muted">None</em></td>\r\n                    <td oc-if-roles="SpendingAccountAdmin">\r\n                        <button class="btn btn-danger btn-xs" type="button" ng-click="spendingAccounts.deleteSpendingAccount(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <ul uib-pagination\r\n            class="pagination-sm pull-right hidden-xs"\r\n            boundary-links="spendingAccounts.list.Meta.TotalPages > 5"\r\n            max-size="5"\r\n            total-items="spendingAccounts.list.Meta.TotalCount"\r\n            items-per-page="spendingAccounts.list.Meta.PageSize"\r\n            ng-model="spendingAccounts.list.Meta.Page"\r\n            ng-if="spendingAccounts.list.Meta.TotalPages > 1"\r\n            ng-change="spendingAccounts.pageChanged()">\r\n        </ul>\r\n        <button type="button"\r\n                class="btn btn-default btn-block btn-lg visible-xs"\r\n                ng-show="spendingAccounts.list.Meta.Page < spendingAccounts.list.Meta.TotalPages"\r\n                ng-click="spendingAccounts.loadMore()">Load More\r\n        </button>\r\n    </div>\r\n</div>'),$templateCache.put("catalogManagement/categoryTreeView/templates/categoryTreeView.html",'<div ng-if="!categoryTree.tree.length" class="no-matches">\r\n    <b>There are no categories in this catalog. <span oc-if-roles="CategoryAdmin"><a ng-click="categoryTree.createCategory()">Create one now.</a></span></b>\r\n</div>\r\n<script type="text/ng-template" id="nodes_renderer.html">\r\n    <div class="tree-node tree-node-content" ng-class="{\'inactive-node\':!node.Active, \'selected-node\':node.ID == catalogManagement.selectedCategory.ID}">\r\n        <i ng-if="node.children && node.children.length > 0" class="fa" ng-click="toggle(this)" ng-class="{\r\n                        \'fa-folder\': !collapsed,\r\n                        \'fa-folder-open\': collapsed\r\n                    }">\r\n                </i>\r\n        <p ng-click="categoryTree.categorySelected(node.ID)">{{node.Name}}</p>\r\n        <i ui-tree-handle class="fa fa-reorder text-muted"></i>\r\n    </div>\r\n    <ol ui-tree-nodes ng-model="node.children" uib-collapse="!collapsed">\r\n        <li ng-repeat="node in node.children" ui-tree-node ng-include="\'nodes_renderer.html\'"></li>\r\n    </ol>\r\n</script>\r\n<section ng-if="categoryTree.tree.length">\r\n    <div oc-if-roles="CategoryAdmin">\r\n        <button type="button" class="btn btn-primary" ng-click="categoryTree.createCategory()">\r\n            <i class="fa fa-plus-circle" aria-hidden="true"></i>\r\n            New Category\r\n        </button>\r\n        <br>\r\n        <br>\r\n    </div>\r\n    <div ui-tree="categoryTree.treeOptions" id="tree-root" data-drag-delay="200">\r\n        <ol ui-tree-nodes ng-model="categoryTree.tree">\r\n            <li ng-repeat="node in categoryTree.tree" ui-tree-node ng-include="\'nodes_renderer.html\'"></li>\r\n        </ol>\r\n    </div>\r\n</section>'),$templateCache.put("orderManagement/approvals/templates/orderApprovals.html",'<div cg-busy="application.stateLoading(\'approvals\')">\r\n    <!--====== PAYMENT LIST ======-->\r\n    <div ng-if="orderApprovals.list.Items.length">\r\n        <div class="panel panel-default table-responsive" ng-if="(orderApprovals.list.Items | filter:{Status:\'Pending\'}).length">\r\n            <div class="panel-heading">Pending Approvals</div>\r\n            <table class="table table-bordered l-approval-pending-table">\r\n                <colgroup>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                </colgroup>\r\n                <thead>\r\n                <tr>\r\n                    <th>Approving User Group</th>\r\n                    <th>Date Created</th>\r\n                    <th>Approval Rule Name</th>\r\n                    <th>Approval Rule Description</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr ng-repeat="approval in orderApprovals.list.Items| filter:{Status:\'Pending\'}">\r\n                    <td>{{approval.ApprovingUserGroup.Name}}</td>\r\n                    <td>{{approval.DateCreated | date:\'short\'}}</td>\r\n                    <td>{{approval.ApprovalRule.Name}}</td>\r\n                    <td>{{approval.ApprovalRule.Description}}</td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class="panel panel-default table-responsive" ng-if="(orderApprovals.list.Items | filter:{Status:\'Approved\'}).length">\r\n            <div class="panel-heading">Approved</div>\r\n            <table class="table table-bordered l-approval-approved-table">\r\n                <colgroup>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                </colgroup>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Approving User</th>\r\n                        <th>Date Approved</th>\r\n                        <th>Comments</th>\r\n                        <th>Approval Rule Name</th>\r\n                        <th>Approval Rule Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr ng-repeat="approval in orderApprovals.list.Items| filter:{Status:\'Approved\'}">\r\n                        <td>{{approval.ApproverUserName}}</td>\r\n                        <td>{{approval.DateCompleted | date:\'short\'}}</td>\r\n                        <td>{{approval.Comments}}</td>\r\n                        <td>{{approval.ApprovalRule.Name}}</td>\r\n                        <td>{{approval.ApprovalRule.Description}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class="panel panel-default table-responsive" ng-if="(orderApprovals.list.Items | filter:{Status:\'Declined\'}).length">\r\n            <div class="panel-heading">Declined</div>\r\n            <table class="table table-bordered l-approval-declined-table">\r\n                <colgroup>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                </colgroup>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Approving User</th>\r\n                        <th>Date Declined</th>\r\n                        <th>Comments</th>\r\n                        <th>Approval Rule Name</th>\r\n                        <th>Approval Rule Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr ng-repeat="approval in orderApprovals.list.Items| filter:{Status:\'Declined\'}">\r\n                        <td>{{approval.ApproverUserName}}</td>\r\n                        <td>{{approval.DateCompleted | date:\'short\'}}</td>\r\n                        <td>{{approval.Comments}}</td>\r\n                        <td>{{approval.ApprovalRule.Name}}</td>\r\n                        <td>{{approval.ApprovalRule.Description}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div ng-if="!orderApprovals.list.Items.length" class="no-matches">\r\n        This order does not have any approvals. <br>\r\n    </div>\r\n\r\n    <!--====== Approvals PAGINATION ======-->\r\n    <ul uib-pagination\r\n        class="pagination-sm pull-right hidden-xs"\r\n        ng-if="orderApprovals.list.Meta.TotalPages > 1"\r\n        total-items="orderApprovals.list.Meta.TotalCount"\r\n        items-per-page="orderApprovals.list.Meta.PageSize"\r\n        max-size="5"\r\n        boundary-links="orderApprovals.list.Meta.TotalPages > 5"\r\n        ng-model="orderApprovals.list.Meta.Page"\r\n        ng-change="orderApprovals.pageChanged()">\r\n    </ul>\r\n    <button type="button"\r\n            class="btn btn-default btn-block btn-lg visible-xs"\r\n            ng-show="orderApprovals.list.Meta.Page < orderApprovals.list.Meta.TotalPages"\r\n            ng-click="orderApprovals.loadMore()">Load More</button>\r\n</div>'),$templateCache.put("orderManagement/order/templates/orderDetail.html",'<ul class="breadcrumb">\r\n    <li><a href="" ui-sref="orders">All Orders</a></li>\r\n    <li class="active">{{orderDetail.order.ID}}</li>\r\n</ul>\r\n<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            <small class="pull-right">Submitted on {{orderDetail.order.DateSubmitted | date}}</small>\r\n            <span class="text-muted">Order:</span> {{orderDetail.order.ID}} <br>\r\n        </h3>\r\n    </header>\r\n    <ul class="nav nav-tabs">\r\n        <li ng-class="{active: application.$state.is(\'orderDetail\')}">\r\n            <a href="" ui-sref="orderDetail"><i class="fa fa-cube"></i> <span>Details</span></a>\r\n        </li>\r\n        <li ui-sref-active="active">\r\n            <a href="" ui-sref=".payments"><i class="fa fa-dollar"></i> Payments</a>\r\n        </li>\r\n        <li ui-sref-active="active">\r\n            <a href="" ui-sref=".shipments"><i class="fa fa-truck"></i> Shipments</a>\r\n        </li>\r\n        <!-- TODO: these roles seem incorrect in the api - fix when this is adjusted there -->\r\n        <li ui-sref-active="active" oc-if-roles="[\'ApprovalRuleAdmin\', \'AddressReader\']">\r\n            <a href="" ui-sref=".approvals"><i class="fa fa-check-square-o"></i> Approvals</a>\r\n        </li>\r\n    </ul>\r\n    <br>\r\n    <div ui-view cg-busy="application.stateLoading(\'orderDetail\')">\r\n        <!--====== ORDER DETAILS ======-->\r\n\r\n        <div class="panel panel-default">\r\n            <div class="panel-body">\r\n                <div class="row">\r\n                    <div class="col-sm-8">\r\n                        <b>Date {{orderDetail.order.DateSubmitted ? \'Submitted\' : \'Created\'}}: </b> {{(orderDetail.order.DateSubmitted || orderDetail.order.DateCreated) | date:\'medium\'}} <br>\r\n                        <b>Status: </b> {{orderDetail.order.Status | humanize}} <br>\r\n                        <b>Buyer Company: </b> {{orderDetail.order.FromCompany.Name}} <br>\r\n                        <b>Created By: </b> {{orderDetail.order.FromUserFirstName + \' \' + orderDetail.order.FromUserLastName}} <br>\r\n                        <div ng-if="orderDetail.order.Comments">\r\n                            <b>Comments: </b> {{orderDetail.order.Comments}}\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-4">\r\n                        <span>Subtotal</span> <span class="pull-right">{{orderDetail.order.Subtotal | currency}}</span> <br>\r\n                        <span>Shipping</span> <span class="pull-right">{{orderDetail.order.ShippingCost | currency}}</span> <br>\r\n                        <span>Tax</span> <span class="pull-right">{{orderDetail.order.TaxCost | currency}}</span>\r\n                        <hr>\r\n                        <b>Total <span class="pull-right">{{orderDetail.order.Total | currency}}</span></b>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="row">\r\n            <div class="col-sm-6" ng-if="orderDetail.order.ShippingAddressID">\r\n                <div class="panel panel-default">\r\n                    <div class="panel-heading">\r\n                        <h3 class="panel-title">Shipping Address</h3>\r\n                    </div>\r\n                    <div class="panel-body">\r\n                        <div ng-bind-html="orderDetail.lineItems.Items[0].ShippingAddress | address:\'full\'"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-sm-6" ng-if="orderDetail.order.BillingAddressID">\r\n                <div class="panel panel-default">\r\n                    <div class="panel-heading">\r\n                        <h3 class="panel-title">Billing Address</h3>\r\n                    </div>\r\n                    <div class="panel-body">\r\n                        <div ng-bind-html="orderDetail.order.BillingAddress | address:\'full\'"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!--====== LINE ITEM LIST ======-->\r\n        <div class="panel panel-default table-responsive">\r\n            <table class="table table-striped table-bordered l-lineitem-table">\r\n                <colgroup>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                    <col>\r\n                </colgroup>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Product</th>\r\n                        <th ng-if="!orderDetail.order.ShippingAddressID">Shipping Address</th>\r\n                        <th>Quantity</th>\r\n                        <th>Unit Price</th>\r\n                        <th>Line Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr ng-repeat="lineItem in orderDetail.lineItems.Items">\r\n                        <td>{{lineItem.ID}}</td>\r\n                        <td>\r\n                            <a ng-click="orderDetail.editLineItem(lineItem)"><i class="fa fa-edit"></i> {{lineItem.Product.Name}}</a>\r\n                            <small class="text-muted">({{lineItem.Product.ID}})</small>\r\n                            <ul ng-if="lineItem.Specs.length > 0">\r\n                                <li ng-repeat="spec in lineItem.Specs">\r\n                                    <small>{{spec.Name}}:</small>\r\n                                    <small>{{spec.Value}}</small>\r\n                                </li>\r\n                            </ul>\r\n                        </td>\r\n                        <td ng-if="!orderDetail.order.ShippingAddressID">{{lineItem.ShippingAddress | address}}</td>\r\n                        <td>{{lineItem.Quantity}}</td>\r\n                        <td>{{lineItem.UnitPrice | currency}}</td>\r\n                        <td>{{lineItem.LineTotal | currency}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <!--====== LINE ITEM PAGINATION ======-->\r\n        <ul uib-pagination\r\n            class="pagination-sm pull-right hidden-xs"\r\n            ng-if="orderDetail.lineItems.Meta.TotalPages > 1"\r\n            total-items="orderDetail.lineItems.Meta.TotalCount"\r\n            items-per-page="orderDetail.lineItems.Meta.PageSize"\r\n            max-size="5"\r\n            boundary-links="orderDetail.lineItems.Meta.TotalPages > 5"\r\n            ng-model="orderDetail.lineItems.Meta.Page"\r\n            ng-change="orderDetail.pageChanged()">\r\n        </ul>\r\n        <button type="button"\r\n                class="btn btn-default btn-block btn-lg visible-xs"\r\n                ng-show="orderDetail.lineItems.Meta.Page < orderDetail.lineItems.Meta.TotalPages"\r\n                ng-click="orderDetail.loadMore()">Load More</button>\r\n    </div>\r\n</article>'),
$templateCache.put("orderManagement/order/templates/orderDetail.lineItemEdit.modal.html",'<form name="orderLineItemEditModal.form" class="form-horizontal" ng-submit="orderLineItemEditModal.submit()" novalidate autocomplete="off" oc-readonly-roles="OrderAdmin" cg-busy="orderLineItemEditModal.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="orderLineItemEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> Line Item {{orderLineItemEditModal.lineItemID}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="lineItemID" class="control-label col-sm-3">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="lineItemID" name="ID" type="text" class="form-control" ng-change="orderLineItemEditModal.updateValidity()" placeholder="(Optional)" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" ng-model="orderLineItemEditModal.lineItem.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="lineItemQuantity" class="control-label col-sm-3">Quantity</label>\r\n            <div class="col-sm-9">\r\n                <input id="lineItemQuantity" name="Quantity" type="number" min="1" class="form-control" ng-model="orderLineItemEditModal.lineItem.Quantity" required/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="lineItemUnitPrice" class="control-label col-sm-3">Unit Price</label>\r\n            <div class="col-sm-9">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-dollar"></i>\r\n                    </span>\r\n                    <input id="lineItemUnitPrice" name="UnitPrice" type="number" min="0" step="0.01" placeholder="0.00" class="form-control" ng-model="orderLineItemEditModal.lineItem.UnitPrice" required/>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="lineItemDateNeeded" class="control-label col-sm-3">Date Needed</label>\r\n            <div class="col-sm-9">\r\n                <input ng-if="application.isTouchDevice" type="date" class="form-control" ng-model="orderLineItemEditModal.lineItem.DateNeeded">\r\n                <input id="lineItemDateNeeded" name="DateNeeded" ng-if="!application.isTouchDevice" type="text" class="form-control" ng-model="orderLineItemEditModal.lineItem.DateNeeded" uib-datepicker-popup="MM/dd/yyyy" is-open="dateNeeded.open" ng-click="dateNeeded.open = !dateNeeded.open">\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block">Save</button>\r\n    </div>\r\n</form>\r\n'),$templateCache.put("orderManagement/payments/templates/orderPayments.html",'<div cg-busy="application.stateLoading(\'payments\')">\r\n    <!--====== PAYMENT LIST ======-->\r\n    <div class="panel panel-default table-responsive" ng-if="orderPayments.list.Items.length">\r\n        <table class="table table-striped table-bordered l-payment-table">\r\n            <colgroup>\r\n                <col>\r\n                <col>\r\n                <col>\r\n                <col>\r\n                <col>\r\n            </colgroup>\r\n            <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Type</th>\r\n                <th>Details</th>\r\n                <th>Date Created</th>\r\n                <th>Amount</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr ng-repeat="payment in orderPayments.list.Items">\r\n                <td>{{payment.ID}}</td>\r\n                <td>{{payment.Type | humanize}} </td>\r\n                <td>\r\n                    <div ng-if="!payment.Details">No details available</div>\r\n                    <div ng-if="payment.Details">\r\n                        <div ng-if="payment.Type == \'CreditCard\'">\r\n                            <b>{{payment.Details.CardholderName}}</b>\r\n                            <div>\r\n                                <span><i class="fa fa-lg {{payment.Details.CardType | faCreditCard}}"></i></span>\r\n                                <small>{{\'XXXX-XXXX-XXXX-\' + payment.Details.PartialAccountNumber}}</small><br>\r\n                                <small class="text-muted">Expires On: {{payment.Details.ExpirationDate | date:\'MM/yy\'}}</small><br>\r\n                                <small class="text-muted">({{payment.CreditCardID}})</small>\r\n                            </div>\r\n                        </div>\r\n                        <div ng-if="payment.Type == \'SpendingAccount\'">\r\n                            <b>{{payment.Details.Name}}</b>\r\n                            <div class="text-muted">\r\n                                <small>({{payment.SpendingAccountID}})</small><br>\r\n                                <small ng-if="payment.Details.StartDate && payment.Details.EndDate">\r\n                                    Lifetime: {{payment.Details.StartDate | date:\'shortDate\'}} - {{payment.Details.EndDate | date :\'shortDate\'}}\r\n                                </small>\r\n                                <small ng-if="payment.Details.StartDate && !payment.Details.EndDate">\r\n                                    Made Available On: {{payment.Details.StartDate | date:\'shortDate\'}}\r\n                                </small>\r\n                                <small ng-if="!payment.Details.StartDate && payment.Details.EndDate">\r\n                                    Expires On: {{payment.Details.EndDate | date :\'shortDate\'}}\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                        <div ng-if="payment.Type == \'PurchaseOrder\'">\r\n                            <b>PO Number:</b> {{payment.Details.PONumber}}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>{{payment.DateCreated | date:\'short\'}}</td>\r\n                <td>{{payment.Amount | currency}}</td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div ng-if="!orderPayments.list.Items.length" class="no-matches">\r\n        This order does not have any payments. <br>\r\n    </div>\r\n\r\n    <!--====== PAYMENTS PAGINATION ======-->\r\n    <ul uib-pagination\r\n        class="pagination-sm pull-right hidden-xs"\r\n        ng-if="orderPayments.list.Meta.TotalPages > 1"\r\n        total-items="orderPayments.list.Meta.TotalCount"\r\n        items-per-page="orderPayments.list.Meta.PageSize"\r\n        max-size="5"\r\n        boundary-links="orderPayments.list.Meta.TotalPages > 5"\r\n        ng-model="orderPayments.list.Meta.Page"\r\n        ng-change="orderPayments.pageChanged()">\r\n    </ul>\r\n    <button type="button"\r\n            class="btn btn-default btn-block btn-lg visible-xs"\r\n            ng-show="orderPayments.list.Meta.Page < orderPayments.list.Meta.TotalPages"\r\n            ng-click="orderPayments.loadMore()">Load More</button>\r\n</div>'),$templateCache.put("orderManagement/orders/templates/orders.html",'<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            Orders\r\n        </h3>\r\n    </header>\r\n\r\n    <!--====== SEARCH ======-->\r\n    <form name="OrdersSearchForm" pretty-submit>\r\n        <fieldset class="form-group">\r\n            <div class="input-group">\r\n                <span class="input-group-addon">\r\n                    <i class="fa fa-search"></i>\r\n                </span>\r\n                <input type="search" ng-change="orders.search()" ng-model-options="{debounce:1000}" placeholder="Search orders..." ng-model="orders.parameters.search" class="form-control">\r\n                <span ng-if="orders.searchResults" class="input-group-btn">\r\n                    <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="orders.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear Search</span></button>\r\n                </span>\r\n            </div>\r\n        </fieldset>\r\n    </form>\r\n\r\n    <!--====== FILTERS ======-->\r\n    <form name="OrdersFiltersForm">\r\n        <div class="row">\r\n            <div class="col-sm-3 form-group">\r\n                <label for="Status">Status</label>\r\n                <select id="Status" class="form-control" ng-model="orders.parameters.filters.status" ng-options="status.Value as status.Name for status in orders.orderStatuses" ng-change="orders.filter(true)">\r\n                    <option value="">All</option>\r\n                </select>\r\n            </div>\r\n            <div class="col-sm-3 form-group">\r\n                <label for="BuyerCompany">Buyer Company</label>\r\n                <ui-select id="BuyerCompany" ng-model="orders.parameters.filters.FromCompanyID" close-on-select="true" ng-change="orders.filter(true)">\r\n                    <ui-select-match placeholder="Search buyer companies...">\r\n                        <span ng-bind-html="$select.selected.Name"></span>\r\n                    </ui-select-match>\r\n                    <ui-select-choices repeat="buyer.ID as buyer in (orders.buyerCompanies.Items | filter: $select.search) track by $index" refresh="orders.searchBuyerCompanies($select.search)" refresh-delay="300">\r\n                        <span ng-bind-html="buyer.Name"></span>\r\n                    </ui-select-choices>\r\n                </ui-select>\r\n            </div>\r\n            <div class="col-sm-3 form-group">\r\n                <label for="FromDate">From Date</label>\r\n                <input ng-if="application.isTouchDevice" type="date" class="form-control" ng-model="orders.parameters.fromDate" ng-blur="orders.filter(true)">\r\n                <input id="FromDate" ng-if="!application.isTouchDevice" type="text" class="form-control" ng-model="orders.parameters.fromDate" uib-datepicker-popup datepicker-options="{maxDate:orders.parameters.toDate}" is-open="fromDate.open" ng-change="orders.filter(true)" ng-click="fromDate.open = !fromDate.open">\r\n            </div>\r\n            <div class="col-sm-3 form-group">\r\n                <label for="ToDate">To Date</label>\r\n                <input ng-if="application.isTouchDevice" type="date" class="form-control" ng-model="orders.parameters.toDate" ng-blur="orders.filter(true)">\r\n                <input id="ToDate" ng-if="!application.isTouchDevice" type="text" class="form-control" ng-model="orders.parameters.toDate" uib-datepicker-popup datepicker-options="{minDate:orders.parameters.fromDate}" is-open="toDate.open" ng-change="orders.filter(true)" ng-click="toDate.open = !toDate.open">\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="orders.searchLoading">\r\n        <div class="no-matches" ng-if="!orders.list.Items.length">\r\n            <b>No matches found.</b>\r\n        </div>\r\n        <div ng-if="orders.list.Items.length">\r\n            <div class="text-right">\r\n                <p>{{(application.$ocMedia(\'min-width:768px\') ? orders.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                    orders.list.Meta.ItemRange[1] + \' of \' + orders.list.Meta.TotalCount + \' results\'}}</p>\r\n            </div>\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-order-table">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                    </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th ng-click="orders.updateSort(\'ID\')">\r\n                                ID\r\n                                <i class="fa fa-caret-down" ng-show="orders.parameters.sortBy == \'ID\'"></i>\r\n                                <i class="fa fa-caret-up" ng-show="orders.parameters.sortBy == \'!ID\'"></i>\r\n                            </th>\r\n                            <th ng-click="orders.updateSort(\'Status\')">\r\n                                Status\r\n                                <i class="fa fa-caret-down" ng-show="orders.parameters.sortBy == \'Status\'"></i>\r\n                                <i class="fa fa-caret-up" ng-show="orders.parameters.sortBy == \'!Status\'"></i>\r\n                            </th>\r\n                            <th ng-click="orders.updateSort(\'DateSubmitted\')">\r\n                                Received\r\n                                <i class="fa fa-caret-down" ng-show="orders.parameters.sortBy == \'DateSubmitted\'"></i>\r\n                                <i class="fa fa-caret-up" ng-show="orders.parameters.sortBy == \'!DateSubmitted\'"></i>\r\n                            </th>\r\n                            <th ng-click="orders.updateSort(\'FromCompanyID\')">\r\n                                Buyer Company\r\n                                <i class="fa fa-caret-down" ng-show="orders.parameters.sortBy == \'FromCompanyID\'"></i>\r\n                                <i class="fa fa-caret-up" ng-show="orders.parameters.sortBy == \'!FromCompanyID\'"></i>\r\n                            </th>\r\n                            <th ng-click="orders.updateSort(\'FromUserFirstName\')">\r\n                                Submitted By\r\n                                <i class="fa fa-caret-down" ng-show="orders.parameters.sortBy == \'FromUserFirstName\'"></i>\r\n                                <i class="fa fa-caret-up" ng-show="orders.parameters.sortBy == \'!FromUserFirstName\'"></i>\r\n                            </th>\r\n                            <th ng-click="orders.updateSort(\'Subtotal\')">\r\n                                Subtotal\r\n                                <i class="fa fa-caret-down" ng-show="orders.parameters.sortBy == \'Subtotal\'"></i>\r\n                                <i class="fa fa-caret-up" ng-show="orders.parameters.sortBy == \'!Subtotal\'"></i>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr ng-repeat="order in orders.list.Items">\r\n                            <td><a href="" ui-sref="orderDetail({buyerid: order.FromCompanyID, orderid: order.ID})">{{order.ID}}</a></td>\r\n                            <td>{{order.Status | humanize}}</td>\r\n                            <td>{{(order.DateSubmitted || order.DateCreated) | date:\'short\'}}</td>\r\n                            <td>{{order.FromCompany.Name}}</td>\r\n                            <td>{{order.FromUserFirstName + \' \' + order.FromUserLastName}}</td>\r\n                            <td>{{order.Subtotal | currency}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="orders.list.Meta.TotalPages > 1"\r\n                total-items="orders.list.Meta.TotalCount"\r\n                items-per-page="orders.list.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="orders.list.Meta.TotalPages > 5"\r\n                ng-model="orders.list.Meta.Page"\r\n                ng-change="orders.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="orders.list.Meta.Page < orders.list.Meta.TotalPages"\r\n                    ng-click="orders.loadMore()">Load More</button>\r\n        </div>\r\n    </div>\r\n\r\n</article>'),$templateCache.put("orderManagement/shipments/templates/orderShipments.html",'<div ui-view cg-busy="application.stateLoading(\'shipments\')">\r\n    <div ng-if="!orderShipments.list.Items.length" class="no-matches">\r\n        This order does not have any shipments. <br>\r\n        <a ui-sref=".create">Create one now</a>\r\n    </div>\r\n    <div class="row" ng-if="orderShipments.list.Items.length">\r\n        <div class="col-sm-5">\r\n            <button type="button" class="btn btn-primary" ui-sref=".create">\r\n                <i class="fa fa-plus-circle" aria-hidden="true"></i>\r\n                New Shipment\r\n            </button>\r\n            <br>\r\n            <br>\r\n            <ul class="list-group">\r\n                <li class="list-group-item" ng-class="{\'active\': shipment.ID == orderShipments.selectedShipment.ID}" ng-repeat="shipment in orderShipments.list.Items" ng-click="orderShipments.selectShipment(shipment)">\r\n                    <b>{{shipment.ID}}</b>\r\n                </li>\r\n            </ul>\r\n            <!--====== SHIPMENT PAGINATION ======-->\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="orderShipments.list.Meta.TotalPages > 1"\r\n                total-items="orderShipments.list.Meta.TotalCount"\r\n                items-per-page="orderShipments.list.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="orderShipments.list.Meta.TotalPages > 5"\r\n                ng-model="orderShipments.list.Meta.Page"\r\n                ng-change="orderShipments.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="orderShipments.list.Meta.Page < orderShipments.list.Meta.TotalPages"\r\n                    ng-click="orderShipments.loadMore()">Load More</button>\r\n        </div>\r\n        <div class="col-sm-7">\r\n            <div ng-if="!orderShipments.selectedShipment" class="well text-center">\r\n                Select a shipment to view details\r\n            </div>\r\n            <div ng-if="orderShipments.selectedShipment">\r\n                <header>\r\n                    <h3>\r\n                        <div class="pull-right">\r\n                            <button type="button" class="btn btn-default" ng-click="orderShipments.editShipment()"><i class="fa fa-edit"></i> Edit</button>\r\n                            <button type="button" class="btn btn-danger" ng-click="orderShipments.deleteShipment()"><i class="fa fa-trash"></i> Delete</button>\r\n                        </div>\r\n                        {{orderShipments.selectedShipment.ID}}\r\n                    </h3>\r\n                </header>\r\n                <br>\r\n                <div class="panel panel-default">\r\n                    <div class="panel-body">\r\n                        <b>Shipper: </b> {{orderShipments.selectedShipment.Shipper}} <br>\r\n                        <b>Tracking Number: </b> {{orderShipments.selectedShipment.TrackingNumber}} <br>\r\n                        <b>Date Shipped: </b> {{orderShipments.selectedShipment.DateShipped | date:\'shortDate\'}} <br>\r\n                        <b>Date Delivered: </b> {{orderShipments.selectedShipment.DateDelivered | date:\'shortDate\'}} <br>\r\n                        <b>Cost: </b> {{orderShipments.selectedShipment.Cost | currency}}\r\n                    </div>\r\n                </div>\r\n                <div class="panel panel-default" ng-if="orderShipments.selectedShipment.ShippingAddress">\r\n                    <div class="panel-body">\r\n                        <h4>Shipping Address</h4>\r\n                        <div ng-bind-html="orderShipments.selectedShipment.ShippingAddress | address:\'full\'"></div>\r\n                    </div>\r\n                </div>\r\n                <div ng-if="orderShipments.selectedShipment.Items.length">\r\n                    <div class="text-right">\r\n                        <button type="button" class="btn btn-sm btn-primary" ng-click="orderShipments.createShipmentItems()">\r\n                            <i class="fa fa-plus-circle"></i>\r\n                            Add Items\r\n                        </button>\r\n                    </div>\r\n                    <br>\r\n                    <div class="panel panel-default table-responsive">\r\n                        <table class="table table-bordered l-shipmentitem-table">\r\n                            <colgroup>\r\n                                <col>\r\n                                <col>\r\n                                <col>\r\n                                <col>\r\n                            </colgroup>\r\n                            <thead>\r\n                            <tr>\r\n                                <th><span class="hidden-xs">Quantity </span>Shipped</th>\r\n                                <th>Product</th>\r\n                                <th>Line Item ID</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr ng-repeat-start="item in orderShipments.selectedShipment.Items" ng-if="item.OrderID == orderShipments.orderID">\r\n                                <td ng-click="orderShipments.editShipmentItem(item)">{{item.QuantityShipped + \' of \' + item.LineItem.Quantity}}</td>\r\n                                <td rowspan="{{orderShipments.selectedShipment.ShippingAddress ? 1 : 2}}">\r\n                                    {{item.LineItem.Product.Name}} <small class="text-muted">({{item.LineItem.Product.ID}})</small>\r\n                                </td>\r\n                                <td>{{item.LineItem.ID}}</td>\r\n                                <td class="actions-cell" rowspan="{{orderShipments.selectedShipment.ShippingAddress ? 1 : 2}}">\r\n                                    <button class="btn btn-danger btn-xs btn-block" ng-click="orderShipments.deleteShipmentItem(item)"><i class="fa fa-trash"></i> <span class="hidden-xs">Delete</span></button>\r\n                                </td>\r\n                            </tr>\r\n                            <tr ng-repeat-end ng-if="!orderShipments.selectedShipment.ShippingAddress">\r\n                                <td colspan="2">{{item.LineItem.ShippingAddress | address:\'fullOneLine\'}}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div ng-if="!orderShipments.selectedShipment.Items.length" class="no-matches">\r\n                    This shipment does not have any items. <br>\r\n                    <a ng-click="orderShipments.createShipmentItems()">Create one now</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'),$templateCache.put("orderManagement/shipments/templates/orderShipmentsCreate.html",'<form name="orderShipmentsCreate.form" ng-submit="orderShipmentsCreate.submit()" autocomplete="off" novalidate>\r\n    <div class="row">\r\n        <div class="col-sm-4">\r\n            <fieldset class="form-group">\r\n                <label for="shipmentShipper">Shipper</label>\r\n                <input id="shipmentShipper" type="text" name="Shipper" class="form-control" ng-model="orderShipmentsCreate.shipment.Shipper" />\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="shipmentTrackingNumber">Tracking Number</label>\r\n                <input id="shipmentTrackingNumber" type="text" name="TrackingNumber" class="form-control" ng-model="orderShipmentsCreate.shipment.TrackingNumber" />\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="shipmentCost">Cost</label>\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-dollar"></i>\r\n                    </span>\r\n                    <input id="shipmentCost" type="number" name="Cost" min="0" placeholder="0.00" step="0.01" class="form-control" ng-model="orderShipmentsCreate.shipment.Cost" />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="shipmentDateShipped">Date Shipped</label>\r\n                <input ng-if="application.isTouchDevice" type="date" class="form-control" ng-model="orderShipmentsCreate.shipment.DateShipped">\r\n                <input id="shipmentDateShipped" name="DateShipped" ng-if="!application.isTouchDevice" type="text" class="form-control" ng-model="orderShipmentsCreate.shipment.DateShipped" uib-datepicker-popup="MM/dd/yyyy" is-open="dateShipped.open" ng-click="dateShipped.open = !dateShipped.open">\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="shipmentDateDelivered">Date Delivered</label>\r\n                <input ng-if="application.isTouchDevice" type="date" class="form-control" ng-model="orderShipmentsCreate.shipment.DateDelivered">\r\n                <input id="shipmentDateDelivered" name="DateDelivered" ng-if="!application.isTouchDevice" type="text" class="form-control" ng-model="orderShipmentsCreate.shipment.DateDelivered" uib-datepicker-popup="MM/dd/yyyy" is-open="dateDelivered.open" ng-click="dateDelivered.open = !dateDelivered.open">\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <button type="submit" class="btn btn-primary btn-block" ng-disabled="orderShipmentsCreate.form.$invalid">Save Shipment</button>\r\n            </fieldset>\r\n        </div>\r\n        <div class="col-sm-8">\r\n            <!--====== LINE ITEM LIST ======-->\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-bordered">\r\n                    <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>ID</th>\r\n                        <th>Product</th>\r\n                        <th>Quantity in Shipment</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-class="{\'active\': lineItem.QuantityShipped == lineItem.Quantity}" ng-repeat="lineItem in orderShipmentsCreate.lineItems.Items | ocCachedList:orderShipmentsCreate.selectedLineItemPage">\r\n                        <th class="text-center">\r\n                            <input type="checkbox" ng-model="lineItem.Selected" ng-disabled="lineItem.Quantity == lineItem.QuantityShipped" ng-change="orderShipmentsCreate.itemChange()" />\r\n                        </th>\r\n                        <td>{{lineItem.ID}}</td>\r\n                        <td>\r\n                            <span>{{lineItem.Product.Name}}</span>\r\n                            <small class="text-muted">({{lineItem.Product.ID}})</small>\r\n                        </td>\r\n                        <td>\r\n                            <span ng-if="lineItem.QuantityShipped == lineItem.Quantity">Shipped</span>\r\n                            <div class="input-group input-group-sm" ng-if="lineItem.QuantityShipped < lineItem.Quantity">\r\n                                <input type="number" class="form-control" ng-model="lineItem.ShipQuantity" ng-change="orderShipmentsCreate.itemChange()">\r\n                                <span class="input-group-addon">of {{lineItem.Quantity}}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <!--====== LINE ITEM PAGINATION ======-->\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="orderShipmentsCreate.lineItems.Meta.TotalPages > 1"\r\n                total-items="orderShipmentsCreate.lineItems.Meta.TotalCount"\r\n                items-per-page="orderShipmentsCreate.lineItems.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="orderShipmentsCreate.lineItems.Meta.TotalPages > 5"\r\n                ng-model="orderShipmentsCreate.lineItems.Meta.Page"\r\n                ng-change="orderShipmentsCreate.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="orderShipmentsCreate.lineItems.Meta.Page < orderShipmentsCreate.lineItems.Meta.TotalPages"\r\n                    ng-click="orderShipmentsCreate.loadMore()">Load More</button>\r\n        </div>\r\n    </div>\r\n</form>'),$templateCache.put("orderManagement/shipments/templates/orderShipmentsCreateItem.modal.html",'<form class="form-horizontal" ng-submit="orderShipmentsCreateItems.submit()" name="orderShipmentsCreateItems.form">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" ng-click="orderShipmentsCreateItems.cancel()" aria-label="Close"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">Add Shipment Items</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <!--====== LINE ITEM LIST ======-->\r\n        <div class="panel panel-default table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>ID</th>\r\n                    <th>Product</th>\r\n                    <th>Quantity in Shipment</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr ng-class="{\'active\': (lineItem.QuantityShipped == lineItem.Quantity || lineItem.ExistingShipmentItem)}" ng-repeat="lineItem in orderShipmentsCreateItems.lineItems.Items | ocCachedList:orderShipmentsCreateItems.selectedLineItemPage">\r\n                    <th class="text-center">\r\n                        <input type="checkbox" ng-model="lineItem.Selected" ng-disabled="lineItem.Quantity == lineItem.QuantityShipped || lineItem.ExistingShipmentItem" ng-change="orderShipmentsCreateItems.itemChange()" />\r\n                    </th>\r\n                    <td>{{lineItem.ID}}</td>\r\n                    <td>\r\n                        <span>{{lineItem.Product.Name}}</span>\r\n                        <small class="text-muted">({{lineItem.Product.ID}})</small>\r\n                    </td>\r\n                    <td>\r\n                        <span ng-if="lineItem.QuantityShipped == lineItem.Quantity">Shipped</span>\r\n                        <span ng-if="lineItem.ExistingShipmentItem">Existing Item</span>\r\n                        <div class="input-group input-group-sm" ng-if="lineItem.QuantityShipped < lineItem.Quantity && !lineItem.ExistingShipmentItem">\r\n                            <input type="number" class="form-control" ng-model="lineItem.ShipQuantity" ng-change="orderShipmentsCreateItems.itemChange()">\r\n                            <span class="input-group-addon">of {{lineItem.Quantity}}</span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <!--====== LINE ITEM PAGINATION ======-->\r\n        <ul uib-pagination\r\n            class="pagination-sm pull-right hidden-xs"\r\n            ng-if="orderShipmentsCreateItems.lineItems.Meta.TotalPages > 1"\r\n            total-items="orderShipmentsCreateItems.lineItems.Meta.TotalCount"\r\n            items-per-page="orderShipmentsCreateItems.lineItems.Meta.PageSize"\r\n            max-size="5"\r\n            boundary-links="orderShipmentsCreateItems.lineItems.Meta.TotalPages > 5"\r\n            ng-model="orderShipmentsCreateItems.lineItems.Meta.Page"\r\n            ng-change="orderShipmentsCreateItems.pageChanged()">\r\n        </ul>\r\n        <button type="button"\r\n                class="btn btn-default btn-block btn-lg visible-xs"\r\n                ng-show="orderShipmentsCreateItems.lineItems.Meta.Page < orderShipmentsCreateItems.lineItems.Meta.TotalPages"\r\n                ng-click="orderShipmentsCreateItems.loadMore()">Load More</button>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="orderShipmentsCreateItems.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),
$templateCache.put("orderManagement/shipments/templates/orderShipmentsEdit.modal.html",'<form class="form-horizontal" ng-submit="orderShipmentsEdit.submit()" name="orderShipmentsEdit.form" cg-busy="orderShipmentsEdit.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" ng-click="orderShipmentsEdit.cancel()" aria-label="Close"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> Shipment {{orderShipmentsEdit.shipmentID}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="shipmentID" class="col-sm-3 control-label">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="shipmentID" name="ID" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="orderShipmentsEdit.shipment.ID"/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="shipmentTrackingNumber" class="col-sm-3 control-label">Tracking Number</label>\r\n            <div class="col-sm-9">\r\n                <input id="shipmentTrackingNumber" name="TrackingNumber" type="text" class="form-control" ng-model="orderShipmentsEdit.shipment.TrackingNumber" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="shipmentCost" class="col-sm-3 control-label">Cost</label>\r\n            <div class="col-sm-9">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-dollar"></i>\r\n                    </span>\r\n                    <input id="shipmentCost" name="Cost" type="number" min="0" placeholder="0.00" step="0.01" class="form-control" ng-model="orderShipmentsEdit.shipment.Cost" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="shipmentDateShipped" class="control-label col-sm-3">Date Shipped</label>\r\n            <div class="col-sm-9">\r\n                <input ng-if="application.isTouchDevice" type="date" class="form-control" ng-model="orderShipmentsEdit.shipment.DateShipped">\r\n                <input id="shipmentDateShipped" name="DateShipped" ng-if="!application.isTouchDevice" type="text" class="form-control" ng-model="orderShipmentsEdit.shipment.DateShipped" uib-datepicker-popup="MM/dd/yyyy" datepicker-options="{maxDate:orderShipmentsEdit.shipment.DateDelivered}" is-open="dateShipped.open" ng-click="dateShipped.open = !dateShipped.open">\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="shipmentDateDelivered" class="control-label col-sm-3">Date Delivered</label>\r\n            <div class="col-sm-9">\r\n                <input ng-if="application.isTouchDevice" type="date" class="form-control" ng-model="orderShipmentsEdit.shipment.DateDelivered">\r\n                <input id="shipmentDateDelivered" name="DateDelivered" ng-if="!application.isTouchDevice" type="text" class="form-control" ng-model="orderShipmentsEdit.shipment.DateDelivered" uib-datepicker-popup="MM/dd/yyyy" datepicker-options="{minDate:orderShipmentsEdit.shipment.DateShipped}" is-open="dateDelivered.open" ng-click="dateDelivered.open = !dateDelivered.open">\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("orderManagement/shipments/templates/orderShipmentsEditItem.modal.html",'<form class="form-horizontal" ng-submit="orderShipmentsEditItem.submit()" name="orderShipmentsEditItem.form" cg-busy="orderShipmentsEditItem.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" ng-click="orderShipmentsEditItem.cancel()" aria-label="Close"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> Shipment Item {{orderShipmentsEditItem.itemID}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="shipmentItemQuantityShipped" class="col-sm-4 control-label">Quantity Shipped</label>\r\n            <div class="col-sm-8">\r\n                <input id="shipmentItemQuantityShipped" name="QuantityShipped" type="number" class="form-control" ng-model="orderShipmentsEditItem.shipmentItem.QuantityShipped" min="0" max="{{orderShipmentsEditItem.shipmentItem.LineItem.Quantity}}" required />\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("productManagement/pricing/templates/priceScheduleAssignment.modal.html",'<form name="priceScheduleAssignment.form" ng-submit="priceScheduleAssignment.submit()" cg-busy="priceScheduleAssignment.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" ng-click="priceScheduleAssignment.cancel()" aria-label="Close"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">Add Assignment</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-group" ng-if="!priceScheduleAssignment.preSelectedBuyer">\r\n            <label>Select Buyer</label>\r\n            <ui-select ng-model="priceScheduleAssignment.selectedBuyer"\r\n                       close-on-select="true"\r\n                       ng-change="priceScheduleAssignment.getBuyerUserGroups()">\r\n                <ui-select-match>\r\n                    <span ng-bind="$select.selected.Name"></span>\r\n                </ui-select-match>\r\n                <ui-select-choices\r\n                        repeat="group in (priceScheduleAssignment.buyers.Items | filter: $select.search) track by $index">\r\n                    <span ng-bind="group.Name"></span>\r\n                </ui-select-choices>\r\n            </ui-select>\r\n        </div>\r\n        <div ng-if="priceScheduleAssignment.selectedBuyer">\r\n            <div class="form-group" ng-if="priceScheduleAssignment.buyerUserGroups.Items.length && !priceScheduleAssignment.preSelectedBuyer">\r\n                <div class="checkbox">\r\n                    <label>\r\n                        <input type="checkbox" ng-model="priceScheduleAssignment.assignAtUserGroupLevel" />\r\n                        Assign at User Group Level\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div class="form-group" ng-if="priceScheduleAssignment.assignAtUserGroupLevel">\r\n                <label>Select User Group(s)</label>\r\n                <ui-select ng-model="priceScheduleAssignment.selectedUserGroup"\r\n                           close-on-select="true">\r\n                    <ui-select-match>\r\n                        {{$item.Name}}\r\n                        <span ng-bind="$select.selected.Name"></span>\r\n                    </ui-select-match>\r\n                    <ui-select-choices\r\n                            repeat="userGroup in (priceScheduleAssignment.buyerUserGroups.Items | filter: $select.search) track by $index">\r\n                        <span ng-bind="userGroup.Name"></span>\r\n                    </ui-select-choices>\r\n                </ui-select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-block btn-primary" ng-disabled="priceScheduleAssignment.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("productManagement/pricing/templates/priceScheduleEdit.modal.html",'<form class="form-horizontal" ng-submit="priceScheduleEditModal.submit()" name="priceScheduleEditModal.form" cg-busy="priceScheduleEditModal.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" ng-click="priceScheduleEditModal.cancel()" aria-label="Close"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> {{priceScheduleEditModal.priceScheduleName}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="ID" class="col-sm-3 control-label">Price ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="ID" name="ID" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="priceScheduleEditModal.data.ID"/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="Name" class="col-sm-3 control-label">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="Name" name="Name" type="text" class="form-control" ng-model="priceScheduleEditModal.data.Name"/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="radio">\r\n                    <label for="OpenQuantity">\r\n                        <input id="OpenQuantity" name="OpenQuantity" type="radio" ng-model="priceScheduleEditModal.data.RestrictedQuantity" ng-value="false"> Open Quantity\r\n                    </label>\r\n                </div>\r\n                <div class="radio">\r\n                    <label for="RestrictedQuantity">\r\n                        <input id="RestrictedQuantity" name="RestrictedQuantity" type="radio" ng-model="priceScheduleEditModal.data.RestrictedQuantity" ng-value="true"> Restricted Quantity\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="MinQuantity" class="col-sm-3 control-label">Min Quantity</label>\r\n            <div class="col-sm-9">\r\n                <input id="MinQuantity" name="MinQuantity"\r\n                       type="text" class="form-control"\r\n                       ng-disabled="priceScheduleEditModal.data.RestrictedQuantity"\r\n                       pattern="^[0-9]*[1-9][0-9]*$" pattern-err-type="positiveInteger"\r\n                       ng-max="priceScheduleEditModal.data.MaxQuantity"\r\n                       ng-model="priceScheduleEditModal.data.MinQuantity"/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="MaxQuantity" class="col-sm-3 control-label">Max Quantity</label>\r\n            <div class="col-sm-9">\r\n                <input id="MaxQuantity" name="MaxQuantity"\r\n                       type="text" class="form-control"\r\n                       ng-disabled="priceScheduleEditModal.data.RestrictedQuantity"\r\n                       pattern="^[0-9]*[1-9][0-9]*$" pattern-err-type="positiveInteger"\r\n                       ng-min="priceScheduleEditModal.data.MinQuantity"\r\n                       ng-model="priceScheduleEditModal.data.MaxQuantity"/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="checkbox">\r\n                    <label for="ApplyTax">\r\n                        <input id="ApplyTax" name="ApplyTax" type="checkbox" ng-model="priceScheduleEditModal.data.ApplyTax"> Apply Tax\r\n                    </label>\r\n                </div>\r\n                <div class="checkbox">\r\n                    <label for="ApplyShipping">\r\n                        <input id="ApplyShipping" name="ApplyShipping" type="checkbox" ng-model="priceScheduleEditModal.data.ApplyShipping"> Apply Shipping\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("productManagement/pricing/templates/priceSchedulePriceBreak.modal.html",'<form name="PriceBreakForm" ng-submit="priceBreak.confirm()" cg-busy="priceBreak.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" ng-click="priceBreak.cancel()" aria-label="Close"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">Create Price Break</h4>\r\n    </div>\r\n    <div class="modal-body row">\r\n        <div class="col-sm-6">\r\n            <div class="form-group">\r\n                <label for="quantity">Quantity</label>\r\n                <input type="number" id="quantity" class="form-control" ng-model="priceBreak.priceBreak.Quantity" min="1" required />\r\n            </div>\r\n        </div>\r\n        <div class="col-sm-6">\r\n            <div class="form-group">\r\n                <label for="price">Price</label>\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-dollar"></i>\r\n                    </span>\r\n                    <input type="number" id="price" class="form-control" ng-model="priceBreak.priceBreak.Price" placeholder="0.00" min="0" step="0.01" required />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-block btn-primary" ng-disabled="PriceBreakForm.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("productManagement/pricing/templates/productCreateAssignment.html",'<form class="row" name="CreateAssignmentForm" autocomplete="off" novalidate>\r\n    <div class="col-sm-7">\r\n        <h4>\r\n            Price Information\r\n        </h4>\r\n        <div class="form-horizontal">\r\n            <fieldset class="form-group">\r\n                <label for="ID" class="col-sm-3 control-label">Price ID</label>\r\n                <div class="col-sm-9">\r\n                    <input id="ID" name="ID" type="text" placeholder="(Optional)" class="form-control" ng-model="productCreateAssignment.priceSchedule.ID"/>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="Name" class="col-sm-3 control-label">Name</label>\r\n                <div class="col-sm-9">\r\n                    <input id="Name" name="Name" type="text" class="form-control" ng-model="productCreateAssignment.priceSchedule.Name" required/>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <div class="col-sm-offset-3 col-sm-9">\r\n                    <div class="checkbox">\r\n                        <label for="ApplyTax">\r\n                            <input id="ApplyTax" name="ApplyTax" type="checkbox" ng-model="productCreateAssignment.priceSchedule.ApplyTax"> Apply Tax\r\n                        </label>\r\n                    </div>\r\n                    <div class="checkbox">\r\n                        <label for="ApplyShipping">\r\n                            <input id="ApplyShipping" name="ApplyShipping" type="checkbox" ng-model="productCreateAssignment.priceSchedule.ApplyShipping"> Apply Shipping\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <div class="col-sm-offset-3 col-sm-9">\r\n                    <div class="radio">\r\n                        <label for="OpenQuantity">\r\n                            <input id="OpenQuantity" name="OpenQuantity" type="radio" ng-model="productCreateAssignment.priceSchedule.RestrictedQuantity" ng-value="false"> Open Quantity\r\n                        </label>\r\n                    </div>\r\n                    <div class="radio">\r\n                        <label for="RestrictedQuantity">\r\n                            <input id="RestrictedQuantity" name="RestrictedQuantity" type="radio" ng-model="productCreateAssignment.priceSchedule.RestrictedQuantity" ng-value="true"> Restricted Quantity\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="MinQuantity" class="col-sm-3 control-label">Min Quantity</label>\r\n                <div class="col-sm-9">\r\n                    <input id="MinQuantity" name="MinQuantity" type="number" class="form-control"\r\n                           min="1"\r\n                           ng-max="productCreateAssignment.priceSchedule.MaxQuantity"\r\n                           ng-disabled="productCreateAssignment.priceSchedule.RestrictedQuantity"\r\n                           ng-model="productCreateAssignment.priceSchedule.MinQuantity"/>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="MaxQuantity" class="col-sm-3 control-label">Max Quantity</label>\r\n                <div class="col-sm-9">\r\n                    <input id="MaxQuantity" name="MaxQuantity" placeholder="(Optional)"  type="number" class="form-control"\r\n                           ng-min="productCreateAssignment.priceSchedule.MinQuantity"\r\n                           ng-disabled="productCreateAssignment.priceSchedule.RestrictedQuantity"\r\n                           ng-model="productCreateAssignment.priceSchedule.MaxQuantity"/>\r\n                </div>\r\n            </fieldset>\r\n        </div>\r\n\r\n\r\n        <hr />\r\n        <h4>Price Breaks</h4>\r\n        <div class="row">\r\n            <div class="form-group col-sm-5">\r\n                <label for="priceSchedulePBQInput">Quantity</label>\r\n                <input id="priceSchedulePBQInput" type="number" min="1" class="form-control"\r\n                       ng-model="productCreateAssignment.quantity" />\r\n            </div>\r\n            <div class="form-group col-sm-5">\r\n                <label for="priceSchedulePBPInput">Price (each)</label>\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-dollar"></i>\r\n                    </span>\r\n                    <input id="priceSchedulePBPInput" type="number" placeholder="0.00" step="0.01" min="0" class="form-control"\r\n                           ng-model="productCreateAssignment.price" />\r\n                </div>\r\n            </div>\r\n            <div class="form-group col-sm-2">\r\n                <br>\r\n                <button type="button" class="btn btn-default form-control addps"\r\n                        ng-disabled="!productCreateAssignment.price || !productCreateAssignment.quantity"\r\n                        ng-click="productCreateAssignment.addPriceBreak()"><i class="fa fa-plus-circle"></i> Add\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class="form-group" ng-if="productCreateAssignment.priceSchedule.PriceBreaks.length">\r\n            <div class="panel panel-default table-responsive">\r\n                <section class="table-fixed-header">\r\n                    <div class="table-header-bg"></div>\r\n                    <div class="table-container">\r\n                        <table class="table table-striped">\r\n                            <colgroup>\r\n                                <col class="action-column"/>\r\n                            </colgroup>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <div>Quantity</div>\r\n                                </th>\r\n                                <th>\r\n                                    <div>Price</div>\r\n                                </th>\r\n                                <th>\r\n                                    <div></div>\r\n                                </th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr ng-repeat="pricebreak in productCreateAssignment.priceSchedule.PriceBreaks | orderBy: \'Quantity\' track by $index">\r\n                                <td ng-if="productCreateAssignment.priceSchedule.RestrictedQuantity">\r\n                                    {{pricebreak.Quantity}}\r\n                                </td>\r\n                                <td ng-if="!productCreateAssignment.priceSchedule.RestrictedQuantity">\r\n                                    {{pricebreak.displayQuantity}}\r\n                                </td>\r\n                                <td ng-if="productCreateAssignment.priceSchedule.RestrictedQuantity">\r\n                                    {{pricebreak.Price * pricebreak.Quantity | currency}}\r\n                                </td>\r\n                                <td ng-if="!productCreateAssignment.priceSchedule.RestrictedQuantity">\r\n                                    {{pricebreak.Price | currency}}\r\n                                </td>\r\n                                <td class="text-center">\r\n                                    <a class="fa fa-trash" ng-click="productCreateAssignment.deletePriceBreak($index)"></a>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="col-sm-5">\r\n        <h4>Availability</h4>\r\n        <p class="text-muted">\r\n            You can assign a product to an entire Buyer Company or specific User Groups. User Group assignments will take precedence over Buyer Company assignments.\r\n        </p>\r\n        <div class="form-group">\r\n            <label>Select Buyer</label>\r\n            <ui-select ng-model="productCreateAssignment.selectedBuyer"\r\n                       close-on-select="true"\r\n                       ng-change="productCreateAssignment.getBuyerUserGroups()">\r\n                <ui-select-match>\r\n                    <span ng-bind="$select.selected.Name"></span>\r\n                </ui-select-match>\r\n                <ui-select-choices\r\n                        repeat="group in (productCreateAssignment.buyers.Items | filter: $select.search) track by $index">\r\n                    <span ng-bind="group.Name"></span>\r\n                </ui-select-choices>\r\n            </ui-select>\r\n        </div>\r\n        <div ng-if="productCreateAssignment.selectedBuyer">\r\n            <div class="well well-lg text-center" ng-if="!productCreateAssignment.buyerUserGroups.Items.length">\r\n                <b><i class="fa fa-search"></i> No UserGroups under this buyer</b>\r\n            </div>\r\n            <div class="form-group" ng-if="productCreateAssignment.buyerUserGroups.Items.length">\r\n                <label>\r\n                    <input type="checkbox" ng-model="productCreateAssignment.assignAtUserGroupLevel" />\r\n                    Assign at User Group Level\r\n                </label>\r\n            </div>\r\n            <div ng-if="productCreateAssignment.assignAtUserGroupLevel">\r\n                <div class="form-group">\r\n                    <label>Select User Group(s)</label>\r\n                    <ui-select multiple ng-model="productCreateAssignment.selectedUserGroups"\r\n                               close-on-select="false">\r\n                        <ui-select-match>\r\n                            {{$item.Name}}\r\n                            <span ng-bind="$select.selected.Name"></span>\r\n                        </ui-select-match>\r\n                        <ui-select-choices\r\n                                repeat="group in (productCreateAssignment.buyerUserGroups.Items | filter: $select.search) track by $index">\r\n                            <span ng-bind="group.Name"></span>\r\n                        </ui-select-choices>\r\n                    </ui-select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button type="button" class="btn btn-default" ui-sref="^.pricing">Cancel</button>\r\n        <button type="button" class="btn btn-primary" ng-click="productCreateAssignment.saveAssignment()"\r\n                ng-disabled="!(productCreateAssignment.selectedBuyer && productCreateAssignment.priceSchedule.Name && productCreateAssignment.priceSchedule.PriceBreaks.length )">\r\n            Save New Price\r\n        </button>\r\n    </div>\r\n</form>'),$templateCache.put("productManagement/pricing/templates/productPricing.html",'<!--==== No Prices Defined ====-->\r\n<div class="no-matches" ng-if="productPricing.noPricesSet">\r\n    This product does not have any pricing. <br>\r\n    <a href="" ui-sref="^.createAssignment">Create one now</a>\r\n</div>\r\n<div class="row" ng-if="!productPricing.noPricesSet">\r\n    <div class="col-sm-5">\r\n\r\n        <!--==== Create New Assignment ====-->\r\n        <button class="btn btn-primary" ui-sref="^.createAssignment">\r\n            <i class="fa fa-plus-circle"></i> New Price\r\n        </button>\r\n        <br>\r\n        <br>\r\n\r\n        <!--==== Product Price Schedule List ====-->\r\n        <div class="c-price-list">\r\n            <div ng-repeat="assignment in productPricing.listAssignments"\r\n                 ng-class="{\'active\':productPricing.selectedPrice.PriceSchedule.ID == assignment.PriceSchedule.ID}"\r\n                 class="c-price-list__item"\r\n                 ng-click="productPricing.selectPrice(this)">\r\n                <!--==== Product Price Selection ====-->\r\n                <h5 class="c-price-list__item__info">\r\n                    {{assignment.PriceSchedule.Name}} <br>\r\n                    <small>{{\'ID: \' + assignment.PriceSchedule.ID}}</small>\r\n                </h5>\r\n                <div class="c-price-list__item__price">\r\n                    {{assignment.PriceSchedule.PriceBreaks[0].Price | currency}}\r\n                </div>\r\n                <div class="c-price-list__item__buyers">\r\n                    <small>Buyers</small>\r\n                    <br>\r\n                    {{assignment.Buyers.length}}\r\n                </div>\r\n                <div class="c-price-list__item__groups">\r\n                    <small>Groups</small>\r\n                    <br>\r\n                    {{assignment.UserGroups.length}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class="col-sm-7" cg-busy="productPricing.loadingPrice">\r\n\r\n        <!--==== No Price Selected Message ====-->\r\n        <div class="well text-center" ng-if="!productPricing.selectedPrice">\r\n            Select a price to view it\'s details and assignments.\r\n        </div>\r\n\r\n        <!--==== Selected Price ====-->\r\n        <div ng-if="productPricing.selectedPrice">\r\n\r\n            <!--==== Basic Price Schedule Information ====-->\r\n            <div class="pull-right">\r\n                <button type="button" class="btn btn-default" ng-click="productPricing.editPrice()"><i class="fa fa-edit"></i> Edit</button>\r\n                <button type="button" class="btn btn-danger" ng-click="productPricing.deletePrice()"><i class="fa fa-trash"></i> Delete</button>\r\n            </div>\r\n            <h3>\r\n                {{productPricing.selectedPrice.PriceSchedule.Name}}\r\n                <small>(ID: {{productPricing.selectedPrice.PriceSchedule.ID}})</small>\r\n            </h3>\r\n            <div class="row">\r\n                <div class="col-xs-5">\r\n                    <b class="text-primary" ng-if="productPricing.selectedPrice.PriceSchedule.RestrictedQuantity">\r\n                        <i class="fa fa-lock"></i> Restricted Quantity <br>\r\n                    </b>\r\n                    <b class="text-primary" ng-if="!productPricing.selectedPrice.PriceSchedule.RestrictedQuantity">\r\n                        <i class="fa fa-unlock-alt"></i> Open Quantity <br>\r\n                    </b>\r\n                    <span>\r\n                        <b class="text-muted">Min Quantity: </b> {{productPricing.selectedPrice.PriceSchedule.MinQuantity}}\r\n                        <br>\r\n                    </span>\r\n                    <span ng-if="productPricing.selectedPrice.PriceSchedule.MaxQuantity">\r\n                        <b class="text-muted">Max Quantity: </b> {{productPricing.selectedPrice.PriceSchedule.MaxQuantity}}\r\n                        <br>\r\n                    </span>\r\n                    <br>\r\n                </div>\r\n                <div class="col-xs-7">\r\n                    <b class="text-success" ng-if="productPricing.selectedPrice.PriceSchedule.ApplyShipping">\r\n                        <i class="fa fa-check"></i> Apply Shipping <br>\r\n                    </b>\r\n                    <b class="text-warning" ng-if="!productPricing.selectedPrice.PriceSchedule.ApplyShipping">\r\n                        <i class="fa fa-times"></i> Apply Shipping <br>\r\n                    </b>\r\n                    <b class="text-success" ng-if="productPricing.selectedPrice.PriceSchedule.ApplyTax">\r\n                        <i class="fa fa-check"></i> Apply Tax\r\n                        <br>\r\n                    </b>\r\n                    <b class="text-warning" ng-if="!productPricing.selectedPrice.PriceSchedule.ApplyTax">\r\n                        <i class="fa fa-times"></i> Apply Tax\r\n                        <br>\r\n                    </b>\r\n                </div>\r\n            </div>\r\n\r\n            <!--==== Price Schedule Tabs ====-->\r\n            <ul class="nav nav-tabs" ng-init="productPricing.activeTab = \'priceBreaks\'">\r\n                <li ng-class="{active:productPricing.activeTab == \'priceBreaks\'}"><a href="" ng-click="productPricing.activeTab = \'priceBreaks\'">Price breaks</a></li>\r\n                <li ng-class="{active:productPricing.activeTab == \'availability\'}"><a href="" ng-click="productPricing.activeTab = \'availability\'">Availability</a></li>\r\n            </ul>\r\n            <br>\r\n\r\n            <!--==== Price Breaks ====-->\r\n            <div ng-show="productPricing.activeTab == \'priceBreaks\'" cg-busy="productPricing.removePriceBreaksLoading">\r\n                <button type="button"\r\n                        class="btn btn-default pull-right"\r\n                        ng-click="productPricing.removePriceBreaks()"\r\n                        ng-if="(productPricing.selectedPrice.PriceSchedule.PriceBreaks | filter:{\'selected\':true}).length"><i class="fa fa-times"></i> Remove Price Breaks</button>\r\n                <button class="btn btn-primary" ng-click="productPricing.createPriceBreak()"><i class="fa fa-plus-circle"></i> Price Break</button>\r\n                <br>\r\n                <br>\r\n                <div class="panel panel-default table-responsive">\r\n                    <table class="table table-condensed table-striped table-bordered l-pricebreak-table">\r\n                        <colgroup>\r\n                            <col>\r\n                            <col>\r\n                            <col>\r\n                        </colgroup>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Quantity</th>\r\n                            <th>Price</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr ng-repeat="pricebreak in productPricing.selectedPrice.PriceSchedule.PriceBreaks | orderBy: \'Quantity\' track by $index">\r\n                            <td>\r\n                                {{pricebreak.displayQuantity}}\r\n                            </td>\r\n                            <td>\r\n                                {{pricebreak.Price | currency}}\r\n                            </td>\r\n                            <td>\r\n                                <button type="button" class="btn btn-danger btn-block btn-xs" ng-click="productPricing.deletePriceBreak(this)"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <!--==== Assignments ====-->\r\n            <div ng-show="productPricing.activeTab == \'availability\'">\r\n                <button class="btn btn-primary" ng-click="productPricing.createAssignment()"><i class="fa fa-plus-circle"></i> Assignment</button>\r\n                <br>\r\n                <br>\r\n                <div class="panel panel-default" ng-repeat="buyer in productPricing.selectedPrice.Availability" cg-busy="productPricing.availabilityLoading[$index]">\r\n                    <div class="panel-body">\r\n                        <div class="pull-right">\r\n                            <button type="button"\r\n                                    class="btn btn-default btn-sm"\r\n                                    ng-click="productPricing.removeUserGroupAssignments(this)"\r\n                                    ng-if="(buyer.UserGroups | filter:{\'selected\':true}).length"><i class="fa fa-times"></i> Remove User Groups</button>\r\n                            <button type="button"\r\n                                    class="btn btn-default btn-sm"\r\n                                    ng-click="productPricing.addUserGroupAssignment(this)"\r\n                                    ng-if="!(buyer.UserGroups | filter:{\'selected\':true}).length"><i class="fa fa-plus-circle"></i> User Group</button>\r\n                            <button type="button"\r\n                                    class="btn btn-default btn-sm"\r\n                                    uib-tooltip="Remove Buyer"\r\n                                    ng-click="productPricing.removeBuyerAssignment(this)"\r\n                                    tooltip-placement="bottom-left"><i class="fa fa-times"></i></button>\r\n                        </div>\r\n                        <h5 style="margin:0;">\r\n                            <b>{{buyer.Name}}</b> <br>\r\n                            <small>(ID: {{buyer.ID}})</small>\r\n                        </h5>\r\n                        <p class="small text-center text-muted" style="margin-top:15px; margin-bottom:0;" ng-if="buyer.Assigned">This price is assigned to the entire buyer organization.</p>\r\n                    </div>\r\n                    <div class="table-responsive" ng-if="!buyer.Assigned">\r\n                        <table class="table table-condensed table-striped table-bordered">\r\n                            <colgroup>\r\n                                <col style="width:45px;">\r\n                            </colgroup>\r\n                            <thead>\r\n                            <tr>\r\n                                <th class="text-center">\r\n                                    <input type="checkbox" ng-model="buyer.allGroupsSelected" ng-change="productPricing.selectAllUserGroups(this)">\r\n                                </th>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr ng-repeat="userGroup in buyer.UserGroups">\r\n                                <td class="text-center">\r\n                                    <input type="checkbox" ng-model="userGroup.selected" ng-change="productPricing.selectUserGroup(buyer, this)">\r\n                                </td>\r\n                                <td>\r\n                                    <a href="" ui-sref="userGroup({buyerid:buyer.ID, usergroupid:userGroup.ID})">{{userGroup.ID}}</a>\r\n                                </td>\r\n                                <td>{{userGroup.Name}}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n'),
$templateCache.put("productManagement/product/templates/productDetail.html",'<ul class="breadcrumb">\r\n    <li><a href="" ui-sref="products">All Products</a></li>\r\n    <li class="active">{{productDetail.productName}}</li>\r\n</ul>\r\n<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            <span class="text-muted">Product:</span> {{productDetail.productName}}\r\n        </h3>\r\n    </header>\r\n    <ul class="nav nav-tabs">\r\n        <li ng-class="{active:application.$state.is(\'productDetail\')}">\r\n            <a href="" ui-sref="productDetail"><i class="fa fa-cube"></i> <span>Product</span></a>\r\n        </li>\r\n        <li ui-sref-active="active">\r\n            <a href="" ui-sref=".specs"><i class="fa fa-edit"></i> Specs</a>\r\n        </li>\r\n        <li class="hidden-xs" ng-class="{active:application.$state.includes(\'productDetail.pricing\') || application.$state.is(\'productDetail.createAssignment\')}" oc-if-roles="[\'ProductAdmin\', \'ProductAssignmentAdmin\']">\r\n            <a href="" ui-sref=".pricing"><i class="fa fa-dollar"></i> Pricing</a>\r\n        </li>\r\n        <li class="hidden-xs" ui-sref-active="active">\r\n            <a href="" ui-sref=".shipping"><i class="fa fa-truck"></i> Shipping</a>\r\n        </li>\r\n        <li class="hidden-xs" ui-sref-active="active" ng-if="productDetail.inventoryEnabled">\r\n            <a href="" ui-sref=".inventory"><i class="fa fa-clipboard"></i> Inventory</a>\r\n        </li>\r\n        <li role="presentation" class="visible-xs" uib-dropdown> <!--Mobile dropdown menu-->\r\n            <a uib-dropdown-toggle>More <i class="fa fa-caret-down"></i></a>\r\n            <ul class="dropdown-menu-right" uib-dropdown-menu>\r\n                <li ng-class="{active:application.$state.includes(\'productDetail.pricing\') || application.$state.is(\'productDetail.createAssignment\')}" oc-if-roles="[\'ProductAdmin\', \'ProductAssignmentAdmin\']">\r\n                    <a href="" ui-sref=".pricing"><i class="fa fa-dollar"></i> Pricing</a>\r\n                </li>\r\n                <li ui-sref-active="active">\r\n                    <a href="" ui-sref=".shipping"><i class="fa fa-truck"></i> Shipping</a>\r\n                </li>\r\n                <li ui-sref-active="active" ng-if="productDetail.inventoryEnabled" oc-if-roles="InventoryAdmin">\r\n                    <a href="" ui-sref=".inventory"><i class="fa fa-clipboard"></i> Inventory</a>\r\n                </li>\r\n\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n    <br>\r\n    <div ui-view cg-busy="application.stateLoading(\'productDetail\')">\r\n        <div class="row">\r\n            <div class="col-sm-8">\r\n                <form name="productDetail.InfoForm" autocomplete="off" ng-submit="productDetail.updateProduct()" novalidate class="form-horizontal" oc-readonly-roles="ProductAdmin">\r\n                    <fieldset class="form-group">\r\n                        <label for="ProductID" class="col-sm-3 control-label">Product ID</label>\r\n                        <div class="col-sm-9">\r\n                            <input id="ProductID" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" type="text" class="form-control" ng-model="productDetail.product.ID" required>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <label for="ProductName" class="col-sm-3 control-label">Name</label>\r\n                        <div class="col-sm-9">\r\n                            <input id="ProductName" type="text" class="form-control" ng-model="productDetail.product.Name" required>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <label for="ProductDescription" class="col-sm-3 control-label">Description</label>\r\n                        <div class="col-sm-9">\r\n                            <textarea rows="4" id="ProductDescription" placeholder="(Optional)" class="form-control" ng-model="productDetail.product.Description"></textarea>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <label for="QuantityMultiplier" class="col-sm-3 control-label">Qty Multiplier</label>\r\n                        <div class="col-sm-9">\r\n                            <input id="QuantityMultiplier" type="number" class="form-control" min="1" ng-model="productDetail.product.QuantityMultiplier" required>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <label class="col-sm-3 control-label">Image</label>\r\n                        <div class="col-sm-9">\r\n                            <oc-file-upload  model="productDetail.product" label="Image:" patch="productDetail.patchImage(xp)" keyname="image" extensions="jpg, png, gif, jpeg, tiff"></oc-file-upload>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <div class="col-sm-offset-3 col-sm-9">\r\n                            <div class="checkbox">\r\n                                <label for="InventoryEnabled">\r\n                                    <input id="InventoryEnabled" name="InventoryEnabled" type="checkbox" ng-model="productDetail.product.InventoryEnabled"> Inventory Enabled\r\n                                </label>\r\n                            </div>\r\n                            <div class="checkbox">\r\n                                <label for="ProductActive">\r\n                                    <input id="ProductActive" name="ProductActive" type="checkbox" ng-model="productDetail.product.Active"> Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset class="form-group">\r\n                        <div class="col-sm-offset-3 col-sm-9">\r\n                            <button type="submit" cg-busy="productDetail.productUpdateLoading" class="btn btn-primary btn-block">Update Product Info</button>\r\n                        </div>\r\n                    </fieldset>\r\n                    <hr>\r\n                    <button type="button" class="btn btn-danger btn-block" ng-click="productDetail.deleteProduct()"><i class="fa fa-trash-o"></i> Delete Product</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</article>\r\n'),$templateCache.put("productManagement/inventory/templates/productInventory.html",'<div class="row">\r\n    <div class="col-sm-8">\r\n        <div class="alert alert-info" ng-if="productInventory.inventory.LastUpdated">\r\n            Inventory was last updated on {{productInventory.inventory.LastUpdated | date:\'short\'}}\r\n        </div>\r\n        <form name="productInventory.ProductInventoryForm" ng-submit="productInventory.updateProductInventory(productDetail.product)" autocomplete="off" novalidate class="form-horizontal" oc-readonly-roles="InventoryAdmin">\r\n            <fieldset class="form-group">\r\n                <label for="InventoryNotificationPoint" class="col-sm-3 control-label">Notification Point</label>\r\n                <div class="col-sm-9">\r\n                    <input id="InventoryNotificationPoint" type="number" class="form-control" min="1" ng-model="productDetail.product.InventoryNotificationPoint" />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="AvailableInventory" class="col-sm-3 control-label">Inventory</label>\r\n                <div class="col-sm-9">\r\n                    <input id="AvailableInventory" type="number" class="form-control" ng-model="productInventory.inventory.Available" ng-min="productDetail.product.AllowOrderExceedInventory ? 0 : productInventory.inventory.Reserved" required />\r\n                    <p class="help-block">{{productInventory.inventory.Reserved}} of {{productInventory.inventoryAvailable}} are reserved</p>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <div class="col-sm-offset-3 col-sm-9">\r\n                    <div class="checkbox">\r\n                        <label for="AllowOrderExceedInventory">\r\n                            <input id="AllowOrderExceedInventory" name="ApplyTax" type="checkbox" ng-model="productDetail.product.AllowOrderExceedInventory">\r\n                            Allow Order to Exceed Inventory\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <div class="col-sm-offset-3 col-sm-9">\r\n                    <button type="submit" cg-busy="productInventory.productUpdateLoading" class="btn btn-primary btn-block">Update</button>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n</div>\r\n'),$templateCache.put("productManagement/products/templates/productCreate.modal.html",'<form name="productCreateModal.form" autocomplete="off" ng-submit="productCreateModal.submit()" novalidate class="form-horizontal" cg-busy="productCreateModal.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="productCreateModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">Create New Product</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="ProductID" class="col-sm-3 control-label">Product ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="ProductID" pattern="([A-Za-z0-9\\-\\_]+)" placeholder="(Optional)" pattern-err-type="ID_Name" type="text" class="form-control" ng-model="productCreateModal.product.ID">\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="ProductName" class="col-sm-3 control-label">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="ProductName" type="text" class="form-control" ng-model="productCreateModal.product.Name" required>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="ProductDescription" class="col-sm-3 control-label">Description</label>\r\n            <div class="col-sm-9">\r\n                <textarea rows="4" id="ProductDescription" placeholder="(Optional)" class="form-control" ng-model="productCreateModal.product.Description"></textarea>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="QuantityMultiplier" class="col-sm-3 control-label">Qty Multiplier</label>\r\n            <div class="col-sm-9">\r\n                <input id="QuantityMultiplier" type="number" class="form-control" min="1" ng-model="productCreateModal.product.QuantityMultiplier" required>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label class="col-sm-3 control-label">Image</label>\r\n            <div class="col-sm-9">\r\n                <oc-file-upload  model="productCreateModal.product" label="Image:" patch="productCreateModal.patchImage(xp)" keyname="image" extensions="jpg, png, gif, jpeg, tiff"></oc-file-upload>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-offset-3 col-sm-9">\r\n                <div class="checkbox">\r\n                    <label for="InventoryEnabled">\r\n                        <input id="InventoryEnabled" name="InventoryEnabled" type="checkbox" ng-model="productCreateModal.product.InventoryEnabled"> Inventory Enabled\r\n                    </label>\r\n                </div>\r\n                <div class="checkbox">\r\n                    <label for="ProductActive">\r\n                        <input id="ProductActive" name="ProductActive" type="checkbox" ng-model="productCreateModal.product.Active"> Active\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    \r\n    <div class="modal-footer">\r\n        <button type="submit" cg-busy="productCreateModal.productUpdateLoading" ng-disabled="productCreateModal.form.$invalid" class="btn btn-primary btn-block">Save Product</button>\r\n    </div>\r\n</form>'),$templateCache.put("productManagement/products/templates/products.html",'<article>\r\n    <header class="l-page-header">\r\n        <h3 class="l-page-header__title">\r\n            Products\r\n        </h3>\r\n        <!--====== CREATE ======-->\r\n        <div class="l-page-header__btns" oc-if-roles="ProductAdmin">\r\n            <button type="button" class="btn btn-primary btn-block" ng-click="products.createProduct()"><i class="fa fa-plus-circle"></i>\r\n                New Product\r\n            </button>\r\n        </div>\r\n    </header>\r\n\r\n    <!--====== SEARCH/FILTERS ======-->\r\n    <div ng-if="products.list.Items.length || (!products.list.Items.length && products.searchResults)">\r\n        <form name="products.searchForm" pretty-submit>\r\n            <fieldset class="form-group">\r\n                <div class="input-group">\r\n                    <span class="input-group-addon">\r\n                        <i class="fa fa-search"></i>\r\n                    </span>\r\n                    <input type="search" ng-change="products.search()" ng-model-options="{debounce:1000}" placeholder="Search Products..." ng-model="products.parameters.search" class="form-control">\r\n                    <span ng-if="products.searchResults" class="input-group-btn">\r\n                        <button class="btn btn-default" type="button" aria-label="Clear Search" ng-click="products.clearSearch()"><i class="fa fa-times"></i> <span class="hidden-xs">Clear</span></button>\r\n                    </span>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    <!--====== LIST ======-->\r\n    <div cg-busy="products.searchLoading">\r\n        <div class="no-matches" ng-if="!products.list.Items.length">\r\n            <b ng-if="products.searchResults">No matches found.</b>\r\n            <b ng-if="!products.searchResults">This seller organization does not have any products.</b>\r\n        </div>\r\n        <div ng-if="products.list.Items.length">\r\n            <div class="row">\r\n                <div class="col-xs-6 col-xs-offset-6">\r\n                    <p class="text-right">{{(application.$ocMedia(\'min-width:768px\') ? products.list.Meta.ItemRange[0] : \'1\') + \' - \' +\r\n                        products.list.Meta.ItemRange[1] + \' of \' + products.list.Meta.TotalCount + \' results\'}}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="panel panel-default table-responsive">\r\n                <table class="table table-striped table-bordered l-product-table">\r\n                    <colgroup>\r\n                        <col>\r\n                        <col>\r\n                        <col>\r\n                        <col oc-if-roles="ProductAdmin">\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th ng-click="products.updateSort(\'ID\')">\r\n                            ID\r\n                            <i class="fa fa-caret-down" ng-show="products.parameters.sortBy == \'ID\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="products.parameters.sortBy == \'!ID\'"></i>\r\n                        </th>\r\n                        <th ng-click="products.updateSort(\'Name\')">\r\n                            Name\r\n                            <i class="fa fa-caret-down" ng-show="products.parameters.sortBy == \'Name\'"></i>\r\n                            <i class="fa fa-caret-up" ng-show="products.parameters.sortBy == \'!Name\'"></i>\r\n                        </th>\r\n                        <th>Active</th>\r\n                        <th oc-if-roles="ProductAdmin"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr ng-repeat="product in products.list.Items">\r\n                        <td>{{product.ID}}</td>\r\n                        <td><a href="" ui-sref="productDetail({productid:product.ID})">{{product.Name}}</a></td>\r\n                        <td class="text-center">\r\n                            <i class="fa fa-circle" aria-hidden="true" ng-class="{\'active\':product.Active}"></i>\r\n                        </td>\r\n                        <td oc-if-roles="ProductAdmin">\r\n                            <button ng-click="products.deleteProduct(this)" class="btn btn-danger btn-xs"><i class="fa fa-trash-o"></i> <span class="hidden-xs">Delete</span></button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul uib-pagination\r\n                class="pagination-sm pull-right hidden-xs"\r\n                ng-if="products.list.Meta.TotalPages > 1"\r\n                total-items="products.list.Meta.TotalCount"\r\n                items-per-page="products.list.Meta.PageSize"\r\n                max-size="5"\r\n                boundary-links="products.list.Meta.TotalPages > 5"\r\n                ng-model="products.list.Meta.Page"\r\n                ng-change="products.pageChanged()">\r\n            </ul>\r\n            <button type="button"\r\n                    class="btn btn-default btn-block btn-lg visible-xs"\r\n                    ng-show="products.list.Meta.Page < products.list.Meta.TotalPages"\r\n                    ng-click="products.loadMore()">Load More</button>\r\n        </div>\r\n    </div>\r\n</article>'),$templateCache.put("productManagement/shipping/templates/productShipping.html",'<div class="row">\r\n    <div class="col-sm-8">\r\n        <form name="productShipping.ProductShippingForm" ng-submit="productShipping.updateProductShipping(productDetail.product)" autocomplete="off" novalidate class="form-horizontal" oc-readonly-roles="ProductAdmin">\r\n            <fieldset class="form-group">\r\n                <label for="ShipWeight" class="col-sm-3 control-label">Ship Weight</label>\r\n                <div class="col-sm-9">\r\n                    <div class="input-group">\r\n                        <input id="ShipWeight" type="number" min="0" step="any" class="form-control" ng-model="productDetail.product.ShipWeight" />\r\n                        <span class="input-group-addon">lb(s)</span>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="ShipHeight" class="col-sm-3 control-label">Ship Height</label>\r\n                <div class="col-sm-9">\r\n                    <input id="ShipHeight" type="number" min="0" step="any" class="form-control" ng-model="productDetail.product.ShipHeight" />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="ShipWidth" class="col-sm-3 control-label">Ship Width</label>\r\n                <div class="col-sm-9">\r\n                    <input id="ShipWidth" type="number" min="0" step="any" class="form-control" ng-model="productDetail.product.ShipWidth" />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <label for="ShipLength" class="col-sm-3 control-label">Ship Length</label>\r\n                <div class="col-sm-9">\r\n                    <input id="ShipLength" type="number" min="0" step="any" class="form-control" ng-model="productDetail.product.ShipLength" />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group" oc-if-roles="AddressAdmin">\r\n                <label for="ShipFrom" class="col-sm-3 control-label">Ship From</label>\r\n                <div class="col-sm-9">\r\n                    <ui-select ng-model="productDetail.product.ShipFromAddressID" close-on-select="true" id="ShipFrom" ng-disabled="!application.userIsAuthorized([\'ProductAdmin\'])">\r\n                        <ui-select-match placeholder="Search and select seller addresses...">\r\n                            <span ng-bind-html="$select.selected | address"></span>\r\n                        </ui-select-match>\r\n                        <ui-select-choices repeat="address.ID as address in (productShipping.adminAddresses.Items | filter: $select.search) track by $index" refresh="productShipping.listAllAdminAddresses($select.search)" refresh-delay="300">\r\n                            <span ng-bind-html="address | address:\'full\'"></span>\r\n                        </ui-select-choices>\r\n                    </ui-select>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class="form-group">\r\n                <div class="col-sm-offset-3 col-sm-9">\r\n                    <button type="submit" cg-busy="productShipping.productUpdateLoading" class="btn btn-primary btn-block">Update</button>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n</div>'),$templateCache.put("productManagement/specs/templates/productSpecCreate.modal.html",'<form name="ProductSpecCreateModalForm" ng-submit="productSpecCreate.submit()" class="form-horizontal" autocomplete="off" novalidate cg-busy="productSpecCreate.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="productSpecCreate.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Spec</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="SpecID" class="col-sm-3 control-label">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="SpecID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="productSpecCreate.spec.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="SpecName" class="col-sm-3 control-label">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="SpecName" type="text" class="form-control" ng-model="productSpecCreate.spec.Name" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-9 col-md-offset-3">\r\n                <div class="checkbox">\r\n                    <label for="SpecRequired">\r\n                        <input id="SpecRequired" placeholder="(Optional)" type="checkbox" ng-model="productSpecCreate.spec.Required"/>\r\n                        Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="ProductSpecCreateModalForm.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("productManagement/specs/templates/productSpecEdit.modal.html",'<form name="productSpecEditModal.form" ng-submit="productSpecEditModal.submit()" class="form-horizontal" autocomplete="off" novalidate cg-busy="productSpecEditModal.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="productSpecEditModal.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> {{productSpecEditModal.specName}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="ID" class="col-sm-3 control-label">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="ID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="productSpecEditModal.spec.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="Name" class="col-sm-3 control-label">Name</label>\r\n            <div class="col-sm-9">\r\n                <input id="Name" name="Name" type="text" class="form-control" ng-model="productSpecEditModal.spec.Name" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="DefaultValue" class="col-sm-3 control-label">Default Value</label>\r\n            <div class="col-sm-9">\r\n                <input id="DefaultValue" name="DefaultValue" placeholder="(Optional)" type="text" class="form-control" ng-model="productSpecEditModal.spec.DefaultValue" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-9 col-sm-offset-3">\r\n                <div class="checkbox">\r\n                    <label for="AllowOpenText">\r\n                        <input id="AllowOpenText" name="AllowOpenText" placeholder="(Optional)" type="checkbox" ng-model="productSpecEditModal.spec.AllowOpenText"/>\r\n                        Enable Open Text\r\n                    </label>\r\n                </div>\r\n                <div class="checkbox">\r\n                    <label for="Required">\r\n                        <input id="Required" name="Required" placeholder="(Optional)" type="checkbox" ng-model="productSpecEditModal.spec.Required"/>\r\n                        Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="productSpecEditModal.form.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("productManagement/specs/templates/productSpecOptionCreate.modal.html",'<form name="ProductSpecOptionCreateModalForm" ng-submit="productSpecOptionCreate.submit()" class="form-horizontal" autocomplete="off" novalidate cg-busy="productSpecOptionCreate.loading">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="productSpecOptionCreate.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title">New Spec Option</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="OptionID" class="col-sm-3 control-label">ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="OptionID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="productSpecOptionCreate.specOption.ID" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="OptionValue" class="col-sm-3 control-label">Value</label>\r\n            <div class="col-sm-9">\r\n                <input id="OptionValue" name="Value" type="text" class="form-control" ng-model="productSpecOptionCreate.specOption.Value" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="OptionPriceMarkupType" class="col-sm-3 control-label">Markup Type</label>\r\n            <div class="col-sm-9">\r\n                <select id="OptionPriceMarkupType" name="PriceMarkupType" class="form-control" ng-model="productSpecOptionCreate.specOption.PriceMarkupType" ng-options="markupType.Value as markupType.Label for markupType in productSpecOptionCreate.markupTypes"></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" uib-collapse="productSpecOptionCreate.specOption.PriceMarkupType == \'NoMarkup\'">\r\n            <label for="OptionPriceMarkup" class="col-sm-3 control-label">Markup</label>\r\n            <div class="col-sm-9">\r\n                <input id="OptionPriceMarkup" name="PriceMarkup" type="number" class="form-control" ng-model="productSpecOptionCreate.specOption.PriceMarkup" ng-required="productSpecOptionCreate.specOption.PriceMarkupType != \'NoMarkup\'"/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-9 col-md-offset-3">\r\n                <div class="checkbox">\r\n                    <label for="OptionIsOpenText">\r\n                        <input id="OptionIsOpenText" name="IsOpenText" type="checkbox" ng-model="productSpecOptionCreate.specOption.IsOpenText"/>\r\n                        Open Text\r\n                    </label>\r\n                </div>\r\n                <div class="checkbox">\r\n                    <label for="OptionDefaultOption">\r\n                        <input id="OptionDefaultOption" name="DefaultOption" type="checkbox" ng-model="productSpecOptionCreate.specOption.DefaultOption"/>\r\n                        Default Option\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block" ng-disabled="ProductSpecOptionCreateModalForm.$invalid">Save</button>\r\n    </div>\r\n</form>'),$templateCache.put("productManagement/specs/templates/productSpecOptionEdit.modal.html",'<form name="productSpecOptionEdit.form" ng-submit="productSpecOptionEdit.submit()" class="form-horizontal" autocomplete="off" novalidate cg-busy="productSpecOptionEdit.loading" oc-readonly-roles="ProductAdmin">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" aria-label="Close" ng-click="productSpecOptionEdit.cancel()"><span aria-hidden="true">&times;</span></button>\r\n        <h4 class="modal-title"><span class="text-muted">Editing: </span> {{productSpecOptionEdit.specOptionValue}}</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <fieldset class="form-group">\r\n            <label for="OptionID" class="col-sm-3 control-label">Option ID</label>\r\n            <div class="col-sm-9">\r\n                <input id="OptionID" name="ID" placeholder="(Optional)" type="text" pattern="([A-Za-z0-9\\-\\_]+)" pattern-err-type="ID_Name" class="form-control" ng-model="productSpecOptionEdit.specOption.ID" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="OptionValue" class="col-sm-3 control-label">Value</label>\r\n            <div class="col-sm-9">\r\n                <input id="OptionValue" name="Value" type="text" class="form-control" ng-model="productSpecOptionEdit.specOption.Value" required />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <label for="OptionPriceMarkupType" class="col-sm-3 control-label">Markup Type</label>\r\n            <div class="col-sm-9">\r\n                <select id="OptionPriceMarkupType" name="PriceMarkupType" class="form-control" ng-model="productSpecOptionEdit.specOption.PriceMarkupType" ng-options="markupType.Value as markupType.Label for markupType in productSpecOptionEdit.markupTypes"></select>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group" uib-collapse="productSpecOptionEdit.specOption.PriceMarkupType == \'NoMarkup\'">\r\n            <label for="OptionPriceMarkup" class="col-sm-3 control-label">Markup</label>\r\n            <div class="col-sm-9">\r\n                <input id="OptionPriceMarkup" name="PriceMarkup" type="number" class="form-control" ng-model="productSpecOptionEdit.specOption.PriceMarkup" ng-required="productSpecOptionEdit.specOption.PriceMarkupType != \'NoMarkup\'" />\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class="form-group">\r\n            <div class="col-sm-9 col-md-offset-3">\r\n                <div class="checkbox">\r\n                    <label for="OptionIsOpenText">\r\n                        <input id="OptionIsOpenText" name="IsOpenText" type="checkbox" ng-model="productSpecCreate.spec.IsOpenText"/>\r\n                        Open Text\r\n                    </label>\r\n                </div>\r\n                <div class="checkbox">\r\n                    <label for="OptionDefaultOption">\r\n                        <input id="OptionDefaultOption" name="DefaultOption" type="checkbox" ng-model="productSpecOptionEdit.specOption.DefaultOption"/>\r\n                        Default Option\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" class="btn btn-primary btn-block">Save</button>\r\n    </div>\r\n</form>'),
$templateCache.put("productManagement/specs/templates/productSpecs.html",'<div ng-if="!productSpecs.specs.Items.length" class="no-matches">\r\n    This product does not have any specs. <br>\r\n    <a ng-click="productSpecs.createSpec(productDetail.product.ID)" oc-if-roles="ProductAdmin">Create one now</a>\r\n</div>\r\n<div class="row" ng-if="productSpecs.specs.Items.length">\r\n    <div class="col-sm-5">\r\n        <div oc-if-roles="ProductAdmin">\r\n            <button type="button" class="btn btn-primary" ng-click="productSpecs.createSpec(productDetail.product.ID)">\r\n                <i class="fa fa-plus-circle" aria-hidden="true"></i>\r\n                New Spec\r\n            </button>\r\n            <br>\r\n            <br>\r\n        </div>\r\n\r\n        <script type="text/ng-template" id="specs_renderer.html">\r\n            <div class="tree-node tree-node-content" ng-class="{\'selected-node\': node.Spec.ID == productSpecs.selectedSpec.Spec.ID}">\r\n                <p ng-click="productSpecs.specSelected(node)">{{node.Spec.Name}}</p>\r\n                <i ui-tree-handle class="fa fa-reorder text-muted"></i>\r\n            </div>\r\n        </script>\r\n        <div ui-tree="productSpecs.specTreeOptions" id="spec-tree-root" data-drag-delay="200">\r\n            <ol ui-tree-nodes ng-model="productSpecs.specs.Items">\r\n                <li ng-repeat="node in productSpecs.specs.Items" ui-tree-node ng-include="\'specs_renderer.html\'"></li>\r\n            </ol>\r\n        </div>\r\n    </div>\r\n    <div class="col-sm-7">\r\n        <div ng-if="!productSpecs.selectedSpec" class="well text-center">\r\n            Select a spec to view details\r\n        </div>\r\n        <div ng-if="productSpecs.selectedSpec">\r\n            <header>\r\n                <h3>\r\n                    <div class="pull-right" oc-if-roles="ProductAdmin">\r\n                        <button type="button" class="btn btn-default" ng-click="productSpecs.editSelectedSpec()"><i class="fa fa-edit"></i> Edit</button>\r\n                        <button type="button" class="btn btn-danger" ng-click="productSpecs.deleteSelectedSpec()"><i class="fa fa-trash"></i> Delete</button>\r\n                    </div>\r\n                    {{productSpecs.selectedSpec.Spec.Name}}\r\n                    <small>(ID: {{productSpecs.selectedSpec.Spec.ID}})</small>\r\n                </h3>\r\n                <b class="text-primary" ng-if="productSpecs.selectedSpec.Spec.Required">\r\n                    <i class="fa fa-star"></i> Required <br>\r\n                </b>\r\n                <b class="text-warning" ng-if="!productSpecs.selectedSpec.Spec.Required">\r\n                    <i class="fa fa-star-o"></i> Optional <br>\r\n                </b>\r\n                <b class="text-primary" ng-if="productSpecs.selectedSpec.Spec.AllowOpenText">\r\n                    <i class="fa fa-pencil-square"></i> Open Text Enabled <br>\r\n                </b>\r\n                <b class="text-warning" ng-if="!productSpecs.selectedSpec.Spec.AllowOpenText">\r\n                    <i class="fa fa-times"></i> Open Text Disabled <br>\r\n                </b>\r\n                <span ng-if="productSpecs.selectedSpec.Spec.DefaultValue">\r\n                    <b class="text-muted">Default Value:</b> <code>{{productSpecs.selectedSpec.Spec.DefaultValue}}</code>\r\n                    <br>\r\n                </span>\r\n            </header>\r\n            <div ng-if="!productSpecs.selectedSpec.Options.length">\r\n                <hr>\r\n                <div class="no-matches">\r\n                    There are no options for this spec. <span oc-if-roles="ProductAdmin"><a ng-click="productSpecs.createSpecOption()">Create</a> one now.</span>\r\n                </div>\r\n            </div>\r\n            <div ng-if="productSpecs.selectedSpec.Options.length">\r\n                <h4 class="page-header">\r\n                    Options\r\n                </h4>\r\n\r\n                <div oc-if-roles="ProductAdmin">\r\n                    <button type="button" class="btn btn-primary" ng-click="productSpecs.createSpecOption()">\r\n                        <i class="fa fa-plus-circle" aria-hidden="true"></i>\r\n                        New Option\r\n                    </button>\r\n                    <br>\r\n                    <br>\r\n                </div>\r\n\r\n                <script type="text/ng-template" id="spec_options_renderer.html">\r\n                    <div class="tree-node tree-node-content" cg-busy="node.loading">\r\n                        <i class="fa fa-trash-o text-danger" ng-click="productSpecs.deleteSpecOption(node)"></i>\r\n                        <p>\r\n                            {{node.Value}}\r\n                            <small ng-if="node.PriceMarkupType != \'NoMarkup\'" ng-class="{\'text-success\':node.PriceMarkup > 0, \'text-warning\': node.PriceMarkup < 0}">\r\n                                {{(node.PriceMarkup > 0 ? \'+\' : \'\') + (node.PriceMarkupType == \'Percentage\' ? node.PriceMarkup : (node.PriceMarkup | currency))}}<span ng-if="node.PriceMarkupType == \'Percentage\'">% / line</span>\r\n                                <span ng-if="node.PriceMarkupType == \'AmountTotal\'">/ line</span>\r\n                                <span ng-if="node.PriceMarkupType == \'AmountPerQuantity\'">/ unit</span>\r\n                            </small>\r\n                        </p>\r\n                        <small ng-if="node.DefaultOption" class="text-primary">DEFAULT OPTION</small>\r\n                        <i class="fa fa-edit text-primary" ng-click="productSpecs.editSpecOption(node)"></i>\r\n                        <i ui-tree-handle class="fa fa-reorder text-muted" oc-if-roles="ProductAdmin"></i>\r\n                    </div>\r\n                </script>\r\n                <div ui-tree="productSpecs.specOptionsTreeOptions" id="spec-options-tree-root" data-drag-delay="200">\r\n                    <ol ui-tree-nodes ng-model="productSpecs.selectedSpec.Options">\r\n                        <li ng-repeat="node in productSpecs.selectedSpec.Options" ui-tree-node ng-include="\'spec_options_renderer.html\'"></li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n')}])}()}(),function(){"use strict";angular.module("orderCloud").constant("appname","Angular Admin").constant("scope","ProductAdmin ProductReader InventoryAdmin ProductAssignmentAdmin BuyerAdmin BuyerReader CategoryAdmin CategoryReader AddressAdmin AddressReader CostCenterAdmin CostCenterReader PromotionAdmin PromotionReader CreditCardAdmin CreditCardReader OrderAdmin OrderReader UnsubmittedOrderReader PriceScheduleAdmin PriceScheduleReader SpendingAccountAdmin SpendingAccountReader BuyerUserAdmin BuyerUserReader UserGroupAdmin UserGroupReader ApprovalRuleAdmin ApprovalRuleReader PermissionAdmin AdminUserAdmin AdminUserReader MessageConfigAssignmentAdmin CatalogReader CatalogAdmin MeAdmin MeXpAdmin MeAddressAdmin MeCreditCardAdmin OverrideUnitPrice OverrideShipping OverrideTax").constant("clientid","D89E2196-CC75-4312-A4A9-67E4CC4BEDFB").constant("buyerid","A").constant("catalogid","SHARED").constant("environment","prod").constant("defaultstate","home").constant("html5mode",!1).constant("bootswatchtheme",null).constant("authurl","https://auth.ordercloud.io/oauth/token").constant("apiurl","https://api.ordercloud.io")}(),function(){"use strict";function ProductSpecsController($rootScope,toastr,ocProductSpecs,ProductSpecs){function createSpec(productID){ocProductSpecs.CreateSpec(productID).then(function(assignment){vm.specs.Items.push(assignment),vm.selectedSpec=assignment,$rootScope.$broadcast("ProductManagement:SpecCountChanged","increment")})}function editSelectedSpec(){ocProductSpecs.EditSpec(vm.selectedSpec.Spec).then(function(updatedSpec){vm.specs.Items[_.indexOf(vm.specs.Items,vm.selectedSpec)].Spec=updatedSpec,vm.specs.Items[_.indexOf(vm.specs.Items,vm.selectedSpec)].SpecID=updatedSpec.ID,vm.selectedSpec.Spec=updatedSpec,toastr.success("Spec: "+vm.selectedSpec.Spec.Name+" was updated.")})}function deleteSelectedSpec(){ocProductSpecs.DeleteSpec(vm.selectedSpec.Spec.ID).then(function(){var specIndex=0;angular.forEach(vm.specs.Items,function(spec,index){spec.Spec.ID==vm.selectedSpec.Spec.ID&&(specIndex=index)}),vm.specs.Items.splice(specIndex,1),toastr.success("Spec: "+vm.selectedSpec.Spec.Name+" was deleted."),vm.selectedSpec=null,$rootScope.$broadcast("ProductManagement:SpecCountChanged","decrement")})}function specSelected(node){vm.selectedSpec=node}function createSpecOption(){ocProductSpecs.CreateSpecOption(vm.selectedSpec).then(function(specOption){vm.selectedSpec.Options?vm.selectedSpec.Options.push(specOption):vm.selectedSpec.Options=[specOption],angular.forEach(vm.selectedSpec.Options,function(option,index){option.ID!=specOption.ID&&(vm.selectedSpec.Options[index].DefaultOption=specOption.DefaultOption?!1:option.DefaultOption)}),toastr.success("Spec option "+specOption.Value+" was created.")})}function editSpecOption(node){ocProductSpecs.EditSpecOption(vm.selectedSpec,node).then(function(specOption){angular.forEach(vm.selectedSpec.Options,function(option,index){option.ID==specOption.OriginalID?vm.selectedSpec.Options[index]=specOption:vm.selectedSpec.Options[index].DefaultOption=specOption.DefaultOption?!1:option.DefaultOption}),toastr.success("Spec option "+specOption.Value+" was updated.")})}function deleteSpecOption(node){ocProductSpecs.DeleteSpecOption(vm.selectedSpec.Spec.ID,node.ID).then(function(){var specOptionIndex=0;angular.forEach(vm.selectedSpec.Options,function(option,index){option.ID==node.ID&&(specOptionIndex=index)}),toastr.success("Spec option: "+node.Value+" was deleted."),vm.selectedSpec.Options.splice(specOptionIndex,1)})}var vm=this;vm.specs=angular.copy(ProductSpecs),vm.selectedSpec=null,vm.createSpec=createSpec,vm.editSelectedSpec=editSelectedSpec,vm.deleteSelectedSpec=deleteSelectedSpec,vm.specSelected=specSelected,vm.createSpecOption=createSpecOption,vm.editSpecOption=editSpecOption,vm.deleteSpecOption=deleteSpecOption,vm.specTreeOptions={dropped:function(event){ocProductSpecs.UpdateSpecListOrder(event).then(function(){vm.selectedSpec=null})}},vm.specOptionsTreeOptions={dropped:function(event){ocProductSpecs.UpdateSpecOptionsListOrder(event,vm.selectedSpec.Spec.ID)}}}function ProductSpecCreateController($uibModalInstance,toastr,OrderCloud,ProductID){var vm=this;vm.submit=function(){vm.loading=OrderCloud.Specs.Create(vm.spec).then(function(data){OrderCloud.Specs.SaveProductAssignment({ProductID:ProductID,SpecID:data.ID}).then(function(assignment){assignment.Spec=data,toastr.success("Spec: "+data.Name+" created"),$uibModalInstance.close(assignment)})})},vm.cancel=function(){$uibModalInstance.dismiss()}}ProductSpecsController.$inject=["$rootScope","toastr","ocProductSpecs","ProductSpecs"],ProductSpecCreateController.$inject=["$uibModalInstance","toastr","OrderCloud","ProductID"],angular.module("orderCloud").controller("ProductSpecsCtrl",ProductSpecsController).controller("ProductSpecCreateCtrl",ProductSpecCreateController)}(),function(){"use strict";function ocProductsSpecsService($q,$uibModal,OrderCloud,ocConfirm){function _productSpecsDetail(productid){function getSpecs(data){OrderCloud.Specs.List(null,null,null,null,null,{ID:_.pluck(data.Items,"SpecID").join("|")}).then(function(details){getSpecOptions(data,details)})}function getSpecOptions(data,details){var optionQueue=[];angular.forEach(data.Items,function(specAssignment){specAssignment.Spec=_.where(details.Items,{ID:specAssignment.SpecID})[0],specAssignment.Spec&&specAssignment.Spec.OptionCount&&optionQueue.push(function(){var d=$q.defer();return OrderCloud.Specs.ListOptions(specAssignment.Spec.ID,null,1,100).then(function(oData){specAssignment.Options=oData.Items,_.map(specAssignment.Options,function(option){option.DefaultOption=specAssignment.DefaultOptionID==option.ID}),d.resolve()}),d.promise}())}),$q.all(optionQueue).then(function(){deferred.resolve(data)})}var deferred=$q.defer();return OrderCloud.Specs.ListProductAssignments(null,productid,1,100).then(function(data){data.Items.length?getSpecs(data):deferred.resolve(data)}),deferred.promise}function _updateSpecListOrder(event){function run(i){queue[i]().then(function(){queueIndex++,queueIndex<queue.length?run(queueIndex):deferred.resolve()})}var deferred=$q.defer(),nodeList=event.source.nodesScope.$modelValue,queue=[];angular.forEach(nodeList,function(node,index){queue.push(function(){return OrderCloud.Specs.Patch(node.Spec.ID,{ListOrder:index})})});var queueIndex=0;return run(queueIndex),deferred.promise}function _updateSpecOptionsListOrder(event,specID){function run(i){queue[i]().then(function(){queueIndex++,queueIndex<queue.length?run(queueIndex):deferred.resolve()})}var deferred=$q.defer(),nodeList=event.source.nodesScope.$modelValue,queue=[];angular.forEach(nodeList,function(node,index){queue.push(function(){return OrderCloud.Specs.PatchOption(specID,node.ID,{ListOrder:index})})});var queueIndex=0;return run(queueIndex),deferred.promise}function _createSpec(productID){return $uibModal.open({templateUrl:"productManagement/specs/templates/productSpecCreate.modal.html",size:"md",controller:"ProductSpecCreateCtrl",controllerAs:"productSpecCreate",resolve:{ProductID:function(){return productID}}}).result}function _editSpec(spec){return $uibModal.open({templateUrl:"productManagement/specs/templates/productSpecEdit.modal.html",controller:"ProductSpecEditModalCtrl",controllerAs:"productSpecEditModal",resolve:{SelectedSpec:function(){return spec}}}).result}function _deleteSpec(specID){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+specID+"</b>?",confirmText:"Delete spec",type:"delete"}).then(function(){return OrderCloud.Specs.Delete(specID)})}function _createSpecOption(selectedSpec){return $uibModal.open({templateUrl:"productManagement/specs/templates/productSpecOptionCreate.modal.html",size:"md",controller:"ProductSpecOptionCreateCtrl",controllerAs:"productSpecOptionCreate",resolve:{ProductID:function(){return selectedSpec.ProductID},SpecID:function(){return selectedSpec.Spec.ID}}}).result}function _editSpecOption(selectedSpec,node){return $uibModal.open({templateUrl:"productManagement/specs/templates/productSpecOptionEdit.modal.html",size:"md",controller:"ProductSpecOptionEditCtrl",controllerAs:"productSpecOptionEdit",resolve:{ProductID:function(){return selectedSpec.ProductID},SpecID:function(){return selectedSpec.Spec.ID},SpecOption:function(){return node}}}).result}function _deleteSpecOption(specID,specOptionID){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+specOptionID+"</b>?",confirmText:"Delete spec option",type:"delete"}).then(function(){return OrderCloud.Specs.DeleteOption(specID,specOptionID)})}var service={ProductSpecsDetail:_productSpecsDetail,UpdateSpecListOrder:_updateSpecListOrder,UpdateSpecOptionsListOrder:_updateSpecOptionsListOrder,CreateSpec:_createSpec,EditSpec:_editSpec,DeleteSpec:_deleteSpec,CreateSpecOption:_createSpecOption,EditSpecOption:_editSpecOption,DeleteSpecOption:_deleteSpecOption};return service}ocProductsSpecsService.$inject=["$q","$uibModal","OrderCloud","ocConfirm"],angular.module("orderCloud").factory("ocProductSpecs",ocProductsSpecsService)}(),function(){"use strict";function ProductSpecsConfig($stateProvider){$stateProvider.state("productDetail.specs",{url:"/specs",templateUrl:"productManagement/specs/templates/productSpecs.html",controller:"ProductSpecsCtrl",controllerAs:"productSpecs",data:{pageTitle:"Product Specs"},resolve:{ProductSpecs:["$stateParams","ocProductSpecs",function($stateParams,ocProductSpecs){return ocProductSpecs.ProductSpecsDetail($stateParams.productid)}]}})}ProductSpecsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(ProductSpecsConfig)}(),function(){"use strict";function ProductSpecOptionCreateController($uibModalInstance,OrderCloud,ProductID,SpecID){var vm=this;vm.markupTypes=[{Label:"None",Value:"NoMarkup"},{Label:"Fixed amount per unit",Value:"AmountPerQuantity"},{Label:"Fixed amount per line item",Value:"AmountTotal"},{Label:"Percentage of line total",Value:"Percentage"}],vm.specOption={PriceMarkupType:"NoMarkup"},vm.submit=function(){vm.loading=OrderCloud.Specs.CreateOption(SpecID,vm.specOption).then(function(data){return vm.specOption.DefaultOption?OrderCloud.Specs.SaveProductAssignment({ProductID:ProductID,SpecID:SpecID,DefaultOptionID:data.ID}).then(function(){data.DefaultOption=!0,$uibModalInstance.close(data)}):(data.DefaultOption=!1,void $uibModalInstance.close(data))})},vm.cancel=function(){$uibModalInstance.dismiss()}}function ProductSpecOptionEditController($uibModalInstance,OrderCloud,ProductID,SpecID,SpecOption){var vm=this;vm.specOption=angular.copy(SpecOption),vm.specOptionValue=angular.copy(SpecOption.Value),vm.markupTypes=[{Label:"None",Value:"NoMarkup"},{Label:"Fixed amount per unit",Value:"AmountPerQuantity"},{Label:"Fixed amount per line item",Value:"AmountTotal"},{Label:"Percentage of line total",Value:"Percentage"}],vm.submit=function(){var partial=_.pick(vm.specOption,["ID","Value","IsOpenText","PriceMarkupType","PriceMarkup"]);vm.loading=OrderCloud.Specs.PatchOption(SpecID,SpecOption.ID,partial).then(function(data){return vm.specOption.DefaultOption&&vm.specOption.DefaultOption!=SpecOption.DefaultOption?OrderCloud.Specs.SaveProductAssignment({ProductID:ProductID,SpecID:SpecID,DefaultOptionID:data.ID}).then(function(){data.DefaultOption=!0,data.OriginalID=SpecOption.ID,$uibModalInstance.close(data)}):(data.DefaultOption=vm.specOption.DefaultOption,data.OriginalID=SpecOption.ID,$uibModalInstance.close(data),void 0)})},vm.cancel=function(){$uibModalInstance.dismiss()}}ProductSpecOptionCreateController.$inject=["$uibModalInstance","OrderCloud","ProductID","SpecID"],ProductSpecOptionEditController.$inject=["$uibModalInstance","OrderCloud","ProductID","SpecID","SpecOption"],angular.module("orderCloud").controller("ProductSpecOptionCreateCtrl",ProductSpecOptionCreateController).controller("ProductSpecOptionEditCtrl",ProductSpecOptionEditController)}(),function(){"use strict";function ProductSpecEditModalController($uibModalInstance,SelectedSpec,OrderCloud){var vm=this;vm.spec=angular.copy(SelectedSpec),vm.specName=SelectedSpec.Name,vm.submit=function(){""===vm.spec.DefaultValue&&(vm.spec.DefaultValue=null),vm.loading=OrderCloud.Specs.Update(SelectedSpec.ID,vm.spec).then(function(updatedSpec){$uibModalInstance.close(updatedSpec)})},vm.cancel=function(){$uibModalInstance.dismiss()}}ProductSpecEditModalController.$inject=["$uibModalInstance","SelectedSpec","OrderCloud"],angular.module("orderCloud").controller("ProductSpecEditModalCtrl",ProductSpecEditModalController)}(),function(){"use strict";function ProductShippingController(toastr,OrderCloud,ocRolesService){function updateProductShipping(product){var partial=_.pick(product,["ShipWeight","ShipHeight","ShipWidth","ShipLength","ShipFromAddressID"]);vm.productUpdateLoading=OrderCloud.Products.Patch(product.ID,partial).then(function(){vm.ProductShippingForm.$setPristine(),toastr.success(product.Name+" shipping was updated")})}function listAllAdminAddresses(search){return ocRolesService.UserIsAuthorized(["AddressAdmin"])?OrderCloud.AdminAddresses.List(search).then(function(data){vm.adminAddresses=data}):void 0}var vm=this;vm.updateProductShipping=updateProductShipping,vm.listAllAdminAddresses=listAllAdminAddresses}ProductShippingController.$inject=["toastr","OrderCloud","ocRolesService"],angular.module("orderCloud").controller("ProductShippingCtrl",ProductShippingController)}(),function(){"use strict";function ProductShippingConfig($stateProvider){$stateProvider.state("productDetail.shipping",{url:"/shipping",templateUrl:"productManagement/shipping/templates/productShipping.html",controller:"ProductShippingCtrl",controllerAs:"productShipping",data:{pageTitle:"Product Shipping"}})}ProductShippingConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(ProductShippingConfig)}(),function(){"use strict";function OrderCloudProducts($uibModal,ocConfirm,OrderCloud){function _create(){return $uibModal.open({templateUrl:"productManagement/products/templates/productCreate.modal.html",controller:"ProductCreateModalCtrl",controllerAs:"productCreateModal"}).result}function _delete(product){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+product.Name+"</b>?",confirmText:"Delete product",type:"delete"}).then(function(){return OrderCloud.Products.Delete(product.ID)})}var service={Create:_create,Delete:_delete};return service}OrderCloudProducts.$inject=["$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocProducts",OrderCloudProducts)}(),function(){"use strict";function ProductsController($state,toastr,OrderCloud,ocParameters,ocProducts,ProductList,Parameters){function filter(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))}function search(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.Products.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters).then(function(data){vm.list=data,vm.searchResults=vm.parameters.search.length>0})}function clearSearch(){vm.parameters.search=null,vm.filter(!0)}function updateSort(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)}function pageChanged(){$state.go(".",{page:vm.list.Meta.Page})}function loadMore(){return OrderCloud.Products.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})}var vm=this;vm.list=ProductList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.clearSearch=clearSearch,vm.filter=filter,vm.loadMore=loadMore,vm.pageChanged=pageChanged,vm.search=search,vm.updateSort=updateSort,vm.createProduct=function(){ocProducts.Create().then(function(newProduct){toastr.success(newProduct.Name+" was created."),$state.go("productDetail",{productid:newProduct.ID})})},vm.deleteProduct=function(scope){ocProducts.Delete(scope.product).then(function(){vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,toastr.success(scope.product.Name+" was deleted.")})}}ProductsController.$inject=["$state","toastr","OrderCloud","ocParameters","ocProducts","ProductList","Parameters"],angular.module("orderCloud").controller("ProductsCtrl",ProductsController)}(),function(){"use strict";function ProductsConfig($stateProvider){$stateProvider.state("products",{parent:"base",templateUrl:"productManagement/products/templates/products.html",controller:"ProductsCtrl",controllerAs:"products",url:"/products?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Products"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],ProductList:["OrderCloud","Parameters",function(OrderCloud,Parameters){return OrderCloud.Products.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters)}]}})}ProductsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(ProductsConfig)}(),function(){"use strict";function ProductCreateModalController($uibModalInstance,OrderCloud){function patchImage(imageXP){return OrderCloud.Products.Patch(vm.product.ID,imageXP)}function submit(){vm.loading=OrderCloud.Products.Create(vm.product).then(function(data){$uibModalInstance.close(data)})}function cancel(){return $uibModalInstance.dismiss()}var vm=this;vm.product={},vm.product.Active=!0,vm.product.QuantityMultiplier=1,vm.submit=submit,vm.cancel=cancel,vm.patchImage=patchImage}ProductCreateModalController.$inject=["$uibModalInstance","OrderCloud"],angular.module("orderCloud").controller("ProductCreateModalCtrl",ProductCreateModalController)}(),function(){"use strict";function ProductDetailController($rootScope,$state,toastr,OrderCloud,ocProducts,SelectedProduct){function patchImage(imageXP){return OrderCloud.Products.Patch(vm.product.ID,{xp:imageXP})}function updateProduct(){var partial=_.pick(vm.product,["ID","Name","Description","QuantityMultiplier","InventoryEnabled"]);vm.productUpdateLoading=OrderCloud.Products.Patch(SelectedProduct.ID,partial).then(function(data){vm.product=angular.copy(data),vm.productName=angular.copy(data.Name),vm.inventoryEnabled=angular.copy(data.InventoryEnabled),SelectedProduct=data,vm.InfoForm.$setPristine(),toastr.success(data.Name+" was updated")})}function deleteProduct(){ocProducts.Delete(SelectedProduct).then(function(){toastr.success(SelectedProduct.Name+" was deleted."),$state.go("products",{},{reload:!0})})}var vm=this;vm.product=angular.copy(SelectedProduct),vm.productName=angular.copy(SelectedProduct.Name),vm.inventoryEnabled=angular.copy(SelectedProduct.InventoryEnabled),vm.updateProduct=updateProduct,vm.deleteProduct=deleteProduct,vm.patchImage=patchImage,$rootScope.$on("ProductManagement:SpecCountChanged",function(event,action){vm.product.SpecCount+="increment"==action?1:-1})}ProductDetailController.$inject=["$rootScope","$state","toastr","OrderCloud","ocProducts","SelectedProduct"],angular.module("orderCloud").controller("ProductDetailCtrl",ProductDetailController)}(),function(){"use strict";function ProductDetailConfig($stateProvider){$stateProvider.state("productDetail",{parent:"base",url:"/products/:productid",templateUrl:"productManagement/product/templates/productDetail.html",controller:"ProductDetailCtrl",controllerAs:"productDetail",data:{pageTitle:"Product Info"},resolve:{SelectedProduct:["$stateParams","OrderCloud",function($stateParams,OrderCloud){return OrderCloud.Products.Get($stateParams.productid)}]}})}ProductDetailConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(ProductDetailConfig)}(),function(){"use strict";function ProductCreateAssignmentController($state,toastr,OrderCloud,ocProductPricing,SelectedProduct,Buyers){function addPriceBreak(){var numberExist=_.findWhere(vm.priceSchedule.PriceBreaks,{Quantity:vm.quantity});vm.quantity>vm.priceSchedule.MaxQuantity?toastr.error("Max quantity exceeded","Error"):void 0===numberExist?vm.priceSchedule.PriceBreaks.push({Price:vm.price,Quantity:vm.quantity}):toastr.error("Quantity already exists. Please delete and re-enter quantity and price to edit","Error"),ocProductPricing.PriceBreaks.DisplayQuantity(vm.priceSchedule),vm.priceSchedule=ocProductPricing.PriceBreaks.SetMinMax(vm.priceSchedule),vm.quantity=null,vm.price=null}function deletePriceBreak(index){vm.priceSchedule.PriceBreaks.splice(index,1),vm.priceSchedule=ocProductPricing.PriceBreaks.SetMinMax(vm.priceSchedule)}function getBuyerUserGroups(){vm.selectedUserGroups=null,OrderCloud.UserGroups.List(null,1,20,null,null,null,vm.selectedBuyer.ID).then(function(data){vm.buyerUserGroups=data})}function saveAssignment(){ocProductPricing.CreatePrice(vm.product,vm.priceSchedule,vm.selectedBuyer,vm.selectedUserGroups).then(function(data){toastr.success(vm.priceSchedule.ID+"was created."),$state.go("^.pricing",{pricescheduleid:data.PriceScheduleID})})["catch"](function(ex){toastr.error("An error occurred while trying to save your product assignment","Error")})}var vm=this;vm.buyers=Buyers,vm.product=SelectedProduct,vm.selectedBuyer=null,vm.priceSchedule={RestrictedQuantity:!1,PriceBreaks:[],MinQuantity:1,OrderType:"Standard"},vm.getBuyerUserGroups=getBuyerUserGroups,vm.saveAssignment=saveAssignment,vm.addPriceBreak=addPriceBreak,vm.deletePriceBreak=deletePriceBreak,vm.assignAtUserGroupLevel=!1}function PriceScheduleCreateAssignmentController($uibModalInstance,$stateParams,OrderCloud,Buyers,SelectedBuyer,BuyerUserGroups,SelectedPrice,AssignedUserGroups){var vm=this;vm.buyers={Items:[]},vm.selectedBuyer=SelectedBuyer,vm.preSelectedBuyer=null!=SelectedBuyer,vm.buyerUserGroups={Items:[]},vm.assignAtUserGroupLevel=vm.preSelectedBuyer;var assignedBuyerIDs=_.pluck(SelectedPrice.Availability,"ID");vm.preSelectedBuyer?vm.buyers=Buyers:angular.forEach(Buyers.Items,function(buyer){-1==assignedBuyerIDs.indexOf(buyer.ID)&&vm.buyers.Items.push(buyer)});var assignedUserGroupIDs=_.pluck(AssignedUserGroups,"ID");BuyerUserGroups&&angular.forEach(BuyerUserGroups.Items,function(userGroup){-1==assignedUserGroupIDs.indexOf(userGroup.ID)&&vm.buyerUserGroups.Items.push(userGroup)}),vm.getBuyerUserGroups=function(){console.log(vm.selectedBuyer),OrderCloud.UserGroups.List(null,1,20,null,null,null,vm.selectedBuyer.ID).then(function(data){vm.buyerUserGroups=data})},vm.submit=function(){function saveAssignment(){var assignment={ProductID:$stateParams.productid,PriceScheduleID:SelectedPrice.PriceSchedule.ID,BuyerID:vm.selectedBuyer.ID};vm.selectedUserGroup&&(assignment.UserGroupID=vm.selectedUserGroup.ID),OrderCloud.Products.SaveAssignment(assignment).then(function(data){data.Buyer=vm.selectedBuyer,data.UserGroup=vm.selectedUserGroup,$uibModalInstance.close(data)})}vm.selectedBuyer.Assigned&&vm.selectedUserGroup?OrderCloud.Products.DeleteAssignment($stateParams.productid,null,null,vm.selectedBuyer.ID).then(function(){saveAssignment()}):saveAssignment()},vm.cancel=function(){$uibModalInstance.dismiss()}}ProductCreateAssignmentController.$inject=["$state","toastr","OrderCloud","ocProductPricing","SelectedProduct","Buyers"],PriceScheduleCreateAssignmentController.$inject=["$uibModalInstance","$stateParams","OrderCloud","Buyers","SelectedBuyer","BuyerUserGroups","SelectedPrice","AssignedUserGroups"],angular.module("orderCloud").controller("ProductCreateAssignmentCtrl",ProductCreateAssignmentController).controller("PriceScheduleCreateAssignmentCtrl",PriceScheduleCreateAssignmentController)}(),function(){"use strict";function ocProductPricingService($q,$uibModal,OrderCloud,ocConfirm){function _assignmentList(productid){var deferred=$q.defer(),page=1,pageSize=100;return OrderCloud.Products.ListAssignments(productid,null,null,null,null,page,pageSize,null).then(function(data){var queue=[],assignments=data;if(data.Meta.TotalPages>data.Meta.Page){for(page=data.Meta.Page;page<data.Meta.TotalPages;)page+=1,queue.push(OrderCloud.Products.ListAssignments(productid,null,null,null,null,page,data.Meta.PageSize,null));return $q.all(queue).then(function(results){angular.forEach(results,function(result){assignments.Items=[].concat(assignments.Items,result.Items),assignments.Meta=result.Meta}),assignments.buyerlist=_.uniq(_.pluck(assignments.Items,"BuyerID")),deferred.resolve(assignments)})}assignments.buyerlist=_.uniq(_.pluck(assignments.Items,"BuyerID")),deferred.resolve(assignments)}),deferred.promise}function _assignmentData(assignments){function groupBy(){var results={},priceSchedules=_.groupBy(assignments.Items,"PriceScheduleID");angular.forEach(priceSchedules,function(assignments,key){results[key]={PriceSchedule:assignments[0].PriceSchedule,Buyers:[],UserGroups:[]},angular.forEach(assignments,function(details){details.BuyerID&&!details.UserGroupID?results[key].Buyers.push(details.BuyerID):details.BuyerID&&details.UserGroupID&&results[key].UserGroups.push({BuyerID:details.BuyerID,UserGroupID:details.UserGroupID})})}),deferred.resolve(results)}var deferred=$q.defer(),psQueue=[],schedules=_.uniq(_.pluck(assignments.Items,"PriceScheduleID"));return angular.forEach(schedules,function(id){psQueue.push(OrderCloud.PriceSchedules.Get(id))}),$q.all(psQueue).then(function(results){angular.forEach(results,function(ps){angular.forEach(_.where(assignments.Items,{PriceScheduleID:ps.ID}),function(p){p.PriceSchedule=ps,
displayQuantity(p.PriceSchedule)})}),groupBy()}),deferred.promise}function _assignmentDataDetail(assignmentData,priceScheduleID){function getUserGroups(){$q.all(userGroupQueue).then(function(results){deferred.resolve(result)})}function chunks(list){var i,j,listChunks=[],chunkSize=10;for(i=0,j=list.length;j>i;i+=chunkSize)listChunks.push(list.slice(i,i+chunkSize));return listChunks}var deferred=$q.defer(),data=assignmentData[priceScheduleID],result={PriceSchedule:data.PriceSchedule,Buyers:[]},buyerChunks=chunks(_.uniq(data.Buyers.concat(_.uniq(_.pluck(data.UserGroups,"BuyerID"))))),userGroupGroups=_.groupBy(data.UserGroups,"BuyerID"),userGroupChunks=[];angular.forEach(userGroupGroups,function(group){userGroupChunks=userGroupChunks.concat(chunks(group))});var buyerQueue=[],userGroupQueue=[];return angular.forEach(buyerChunks,function(chunk){buyerQueue.push(OrderCloud.Buyers.List(null,null,null,null,null,{ID:chunk.join("|")}))}),angular.forEach(userGroupChunks,function(chunk){userGroupQueue.push(function(){var d=$q.defer(),buyerID=chunk[0].BuyerID;return OrderCloud.UserGroups.List(null,null,null,null,null,{ID:_.pluck(chunk,"UserGroupID").join("|")},buyerID).then(function(data){angular.forEach(_.where(result.Buyers,{ID:buyerID}),function(buyer){buyer.UserGroups||(buyer.UserGroups=[]),buyer.UserGroups=buyer.UserGroups.concat(data.Items)}),d.resolve()}),d.promise}())}),$q.all(buyerQueue).then(function(results){angular.forEach(results,function(r){_.map(r.Items,function(buyer){buyer.Assigned=data.Buyers.indexOf(buyer.ID)>-1}),result.Buyers=result.Buyers.concat(r.Items)}),getUserGroups()}),deferred.promise}function _createAssignment(selectedPrice){return $uibModal.open({templateUrl:"productManagement/pricing/templates/priceScheduleAssignment.modal.html",size:"md",controller:"PriceScheduleCreateAssignmentCtrl",controllerAs:"priceScheduleAssignment",resolve:{Buyers:function(){return OrderCloud.Buyers.List(null,1,100)},SelectedPrice:function(){return selectedPrice},SelectedBuyer:function(){return null},BuyerUserGroups:function(){return null},AssignedUserGroups:function(){return null}}}).result}function _createUserGroupAssignment(scope,selectedPrice){return $uibModal.open({templateUrl:"productManagement/pricing/templates/priceScheduleAssignment.modal.html",size:"md",controller:"PriceScheduleCreateAssignmentCtrl",controllerAs:"priceScheduleAssignment",resolve:{Buyers:function(){return{Items:[scope.buyer]}},SelectedPrice:function(){return selectedPrice},SelectedBuyer:function(){return scope.buyer},BuyerUserGroups:function(){return OrderCloud.UserGroups.List(null,1,20,null,null,null,scope.buyer.ID)},AssignedUserGroups:function(){return scope.buyer.UserGroups}}}).result}function _createPrice(product,priceSchedule,selectedBuyer,selectedUserGroups){var deferred=$q.defer();return priceSchedule=_setMinMax(priceSchedule),OrderCloud.PriceSchedules.Create(priceSchedule).then(function(ps){var assignment={ProductID:product.ID,PriceScheduleID:ps.ID,BuyerID:selectedBuyer.ID};if(!selectedBuyer||null!=selectedUserGroups&&0!=selectedUserGroups.length){if(selectedBuyer&&selectedUserGroups.length>0){var assignmentQueue=[];angular.forEach(selectedUserGroups,function(usergroup){var userGroupAssignment=angular.copy(assignment);userGroupAssignment.UserGroupID=usergroup.ID,assignmentQueue.push(OrderCloud.Products.SaveAssignment(userGroupAssignment))}),$q.all(assignmentQueue).then(function(data){deferred.resolve(data)})["catch"](function(error){deferred.reject(error)})}}else OrderCloud.Products.SaveAssignment(assignment).then(function(data){deferred.resolve(data)})["catch"](function(error){deferred.reject(error)})})["catch"](function(ex){deferred.reject(ex)}),deferred.promise}function _editPrice(priceSchedule){return $uibModal.open({templateUrl:"productManagement/pricing/templates/priceScheduleEdit.modal.html",controller:"PriceScheduleEditModalCtrl",controllerAs:"priceScheduleEditModal",resolve:{SelectedPriceSchedule:function(){return priceSchedule}}}).result}function _deletePrice(priceSchedule){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+priceSchedule.Name+"</b>?",confirmText:"Delete price",type:"delete"}).then(function(){return OrderCloud.PriceSchedules.Delete(priceSchedule.ID)})}function _createPriceBreak(priceSchedule){return $uibModal.open({templateUrl:"productManagement/pricing/templates/priceSchedulePriceBreak.modal.html",size:"md",controller:"PriceSchedulePriceBreakCtrl",controllerAs:"priceBreak",resolve:{PriceScheduleID:function(){return priceSchedule.ID}}}).result}function _setMinMax(priceSchedule){var quantities=_.pluck(priceSchedule.PriceBreaks,"Quantity");return priceSchedule.MinQuantity=_.min(quantities),priceSchedule.RestrictedQuantity&&(priceSchedule.MaxQuantity=_.max(quantities)),priceSchedule}function _deletePriceBreak(priceSchedule,priceBreak){return ocConfirm.Confirm({message:"Are you sure you want to delete this price break?<br> <b>Quantity: "+priceBreak.Quantity+"</b>?",confirmText:"Delete price break",type:"delete"}).then(function(){return OrderCloud.PriceSchedules.DeletePriceBreak(priceSchedule.ID,priceBreak.Quantity).then(function(){return OrderCloud.PriceSchedules.Get(priceSchedule.ID).then(function(updatedPriceSchedule){return updatedPriceSchedule})})})}function _addDisplayQuantity(priceSchedule){return displayQuantity(priceSchedule),_setMinMax(priceSchedule)}function displayQuantity(priceSchedule){priceSchedule.PriceBreaks.sort(function(a,b){return a.Quantity-b.Quantity});for(var maxQuantity=Math.max.apply(Math,priceSchedule.PriceBreaks.map(function(object){return object.Quantity})),i=0;i<priceSchedule.PriceBreaks.length;i++)if(priceSchedule.PriceBreaks[i].Quantity==maxQuantity)priceSchedule.PriceBreaks[i].displayQuantity=priceSchedule.PriceBreaks[i].Quantity+"+";else{var itemQuantityRange=_.range(priceSchedule.PriceBreaks[i].Quantity,priceSchedule.PriceBreaks[i+1].Quantity);1===itemQuantityRange.length?priceSchedule.PriceBreaks[i].displayQuantity=itemQuantityRange[0]:priceSchedule.PriceBreaks[priceSchedule.PriceBreaks.length-1].Quantity-itemQuantityRange[0]<=1?priceSchedule.PriceBreaks[i].displayQuantity=itemQuantityRange[0]:priceSchedule.PriceBreaks[i].displayQuantity=itemQuantityRange[0]+" - "+itemQuantityRange[itemQuantityRange.length-1]}}var service={AssignmentList:_assignmentList,AssignmentData:_assignmentData,AssignmentDataDetail:_assignmentDataDetail,CreateAssignment:_createAssignment,CreateUserGroupAssignment:_createUserGroupAssignment,CreatePrice:_createPrice,EditPrice:_editPrice,DeletePrice:_deletePrice,PriceBreaks:{Create:_createPriceBreak,SetMinMax:_setMinMax,Delete:_deletePriceBreak,AddDisplayQuantity:_addDisplayQuantity,DisplayQuantity:displayQuantity}};return service}ocProductPricingService.$inject=["$q","$uibModal","OrderCloud","ocConfirm"],angular.module("orderCloud").factory("ocProductPricing",ocProductPricingService)}(),function(){"use strict";function ProductPricingController($q,$stateParams,$uibModal,toastr,AssignmentList,AssignmentData,ocProductPricing,ocConfirm,OrderCloud){var vm=this;vm.list=AssignmentList,vm.listAssignments=AssignmentData,vm.noPricesSet=0==_.keys(vm.listAssignments).length,vm.selectPrice=function(scope){vm.loadingPrice=ocProductPricing.AssignmentDataDetail(vm.listAssignments,scope.assignment.PriceSchedule.ID).then(function(data){vm.selectedPrice=scope.assignment,vm.selectedPrice.PriceSchedule=data.PriceSchedule,vm.selectedPrice.Availability=data.Buyers})},$stateParams.pricescheduleid&&vm.listAssignments[$stateParams.pricescheduleid]?vm.selectPrice({assignment:vm.listAssignments[$stateParams.pricescheduleid]}):_.keys(vm.listAssignments).length&&vm.selectPrice({assignment:vm.listAssignments[_.keys(vm.listAssignments)[0]]}),vm.editPrice=function(){ocProductPricing.EditPrice(vm.selectedPrice.PriceSchedule).then(function(updatedPriceSchedule){var oldAssignment=angular.copy(vm.listAssignments[vm.selectedPrice.PriceSchedule.ID]);oldAssignment.PriceSchedule=updatedPriceSchedule,oldAssignment.PriceScheduleID=updatedPriceSchedule.ID,delete vm.listAssignments[vm.selectedPrice.PriceSchedule.ID],vm.listAssignments[updatedPriceSchedule.ID]=oldAssignment,vm.selectedPrice=oldAssignment,vm.selectedPrice.PriceSchedule=updatedPriceSchedule})},vm.deletePrice=function(){ocProductPricing.DeletePrice(vm.selectedPrice.PriceSchedule).then(function(){delete vm.listAssignments[vm.selectedPrice.PriceSchedule.ID],vm.noPricesSet=0==_.keys(vm.listAssignments).length,toastr.success(vm.selectedPrice.PriceSchedule.Name+" was deleted"),vm.selectedPrice=null})},vm.createPriceBreak=function(){ocProductPricing.PriceBreaks.Create(vm.selectedPrice.PriceSchedule).then(function(updatedPriceSchedule){var oldAssignment=angular.copy(vm.listAssignments[vm.selectedPrice.PriceSchedule.ID]);oldAssignment.PriceSchedule=updatedPriceSchedule,oldAssignment.PriceScheduleID=updatedPriceSchedule.ID,delete vm.listAssignments[vm.selectedPrice.PriceSchedule.ID],vm.listAssignments[updatedPriceSchedule.ID]=oldAssignment,vm.selectedPrice=oldAssignment,ocProductPricing.PriceBreaks.DisplayQuantity(updatedPriceSchedule),vm.selectedPrice.PriceSchedule=updatedPriceSchedule})},vm.deletePriceBreak=function(scope){ocProductPricing.PriceBreaks.Delete(vm.selectedPrice.PriceSchedule,scope.pricebreak).then(function(updatedPriceSchedule){var oldAssignment=angular.copy(vm.listAssignments[vm.selectedPrice.PriceSchedule.ID]);oldAssignment.PriceSchedule=updatedPriceSchedule,oldAssignment.PriceScheduleID=updatedPriceSchedule.ID,delete vm.listAssignments[vm.selectedPrice.PriceSchedule.ID],vm.listAssignments[updatedPriceSchedule.ID]=oldAssignment,vm.selectedPrice=oldAssignment,ocProductPricing.PriceBreaks.DisplayQuantity(updatedPriceSchedule),vm.selectedPrice.PriceSchedule=updatedPriceSchedule,toastr.success("Price Break Quantity "+scope.pricebreak.Quantity+" was deleted.")})},vm.createAssignment=function(){ocProductPricing.CreateAssignment(vm.selectedPrice).then(function(assignment){assignment.UserGroup?(assignment.Buyer.Assigned=!1,assignment.Buyer.UserGroups=[assignment.UserGroup],angular.forEach(vm.listAssignments,function(val,key){angular.forEach(val.UserGroups,function(group,index){group.UserGroupID==assignment.UserGroup.ID&&group.BuyerID==assignment.Buyer.ID&&vm.listAssignments[key].UserGroups.splice(index,1)})}),vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups&&vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups.length?vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups.push({UserGroupID:assignment.UserGroup.ID,BuyerID:assignment.Buyer.ID}):vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups=[{UserGroupID:assignment.UserGroup.ID,BuyerID:assignment.Buyer.ID}]):(assignment.Buyer.Assigned=!0,angular.forEach(vm.listAssignments,function(val,key){var index=val.Buyers.indexOf(assignment.Buyer.ID);index>-1&&val.Buyers.splice(index,1),0==val.Buyers.length&&0==val.UserGroups.length&&OrderCloud.PriceSchedules.Delete(key).then(function(){delete vm.listAssignments[key],vm.noPricesSet=0==_.keys(vm.listAssignments).length})}),vm.listAssignments[assignment.PriceScheduleID].Buyers.push(assignment.Buyer.ID)),vm.selectedPrice.Availability.push(assignment.Buyer)})},vm.removeBuyerAssignment=function(scope){if(vm.availabilityLoading=[],1==vm.selectedPrice.Availability.length)ocConfirm.Confirm({message:"Removing the last buyer organization will remove this price from the product entirely. Do you wish to continue?"}).then(function(){vm.availabilityLoading[scope.$index]=OrderCloud.PriceSchedules.Delete(vm.selectedPrice.PriceSchedule.ID).then(function(){delete vm.listAssignments[vm.selectedPrice.PriceSchedule.ID],vm.noPricesSet=0==_.keys(vm.listAssignments).length,vm.selectedPrice=null})});else if(scope.buyer.Assigned)vm.availabilityLoading[scope.$index]=OrderCloud.Products.DeleteAssignment($stateParams.productid,null,null,scope.buyer.ID).then(function(){vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].Buyers=_.without(vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].Buyers,scope.buyer.ID),vm.selectedPrice.Availability.splice(scope.$index,1)});else{var queue=[];angular.forEach(scope.buyer.UserGroups,function(ug){vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups=_.filter(vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups,function(group){return!(group.UserGroupID==ug.ID&&group.BuyerID==scope.buyer.ID)}),queue.push(OrderCloud.Products.DeleteAssignment($stateParams.productid,null,ug.ID,scope.buyer.ID))}),vm.availabilityLoading[scope.$index]=$q.all(queue).then(function(){vm.selectedPrice.Availability.splice(scope.$index,1)})}},vm.addUserGroupAssignment=function(scope){ocProductPricing.CreateUserGroupAssignment(scope,vm.selectedPrice).then(function(assignment){if(scope.buyer.Assigned){vm.selectedPrice.Availability[scope.$index].Assigned=!1,vm.selectedPrice.Availability[scope.$index].UserGroups=[assignment.UserGroup];var existingBuyerIndex=vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].Buyers.indexOf(scope.buyer.ID);existingBuyerIndex>-1&&vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].Buyers.splice(existingBuyerIndex,1),angular.forEach(vm.listAssignments,function(val,key){angular.forEach(val.UserGroups,function(group,index){group.UserGroupID==assignment.UserGroup.ID&&vm.listAssignments[key].UserGroups.splice(index,1)})}),vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups.push({UserGroupID:assignment.UserGroup.ID,BuyerID:scope.buyer.ID})}else vm.selectedPrice.Availability[scope.$index].UserGroups.push(assignment.UserGroup),angular.forEach(vm.listAssignments,function(val,key){angular.forEach(val.UserGroups,function(group,index){group.UserGroupID==assignment.UserGroup.ID&&assignment.Buyer.ID==group.BuyerID&&vm.listAssignments[key].UserGroups.splice(index,1),vm.listAssignments[key].UserGroups.length||vm.listAssignments[key].Buyers.length||OrderCloud.PriceSchedules.Delete(key).then(function(){delete vm.listAssignments[key],vm.noPricesSet=0==_.keys(vm.listAssignments).length})})}),vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups.push({UserGroupID:assignment.UserGroup.ID,BuyerID:scope.buyer.ID})})},vm.selectAllUserGroups=function(scope){_.map(scope.buyer.UserGroups,function(ug){ug.selected=scope.buyer.allGroupsSelected})},vm.selectUserGroup=function(buyer,scope){scope.userGroup.selected||(buyer.allGroupsSelected=!1)},vm.removeUserGroupAssignments=function(scope){if(scope.buyer.allGroupsSelected||_.filter(scope.buyer.UserGroups,function(ug){return ug.selected}).length==scope.buyer.UserGroups.length)ocConfirm.Confirm({message:"Would you like to assign this price to the buyer <b>"+scope.buyer.Name+"</b>?",confirmText:"Yes",cancelText:"No"}).then(function(){vm.availabilityLoading=[];var queue=[];queue.push(OrderCloud.Products.SaveAssignment({ProductID:$stateParams.productid,BuyerID:scope.buyer.ID,PriceScheduleID:vm.selectedPrice.PriceSchedule.ID})),angular.forEach(_.filter(scope.buyer.UserGroups,function(ug){return ug.selected}),function(ug){queue.push(OrderCloud.Products.DeleteAssignment($stateParams.productid,null,ug.ID,scope.buyer.ID))}),vm.availabilityLoading[scope.$index]=$q.all(queue).then(function(){vm.selectedPrice.Availability[scope.$index].Assigned=!0,angular.forEach(vm.listAssignments,function(val,key){var index=val.Buyers.indexOf(scope.buyer.ID);index>-1&&val.Buyers.splice(index,1),0==val.Buyers.length&&0==val.UserGroups.length&&OrderCloud.PriceSchedules.Delete(key).then(function(){delete vm.listAssignments[key],vm.noPricesSet=0==_.keys(vm.listAssignments).length})}),vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].Buyers.push(scope.buyer.ID),delete vm.selectedPrice.Availability[scope.$index].UserGroups,vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups=[]})})["catch"](function(){vm.removeBuyerAssignment(scope)});else{vm.availabilityLoading=[];var queue=[],listAssignmentUserGroups=vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups,availabilityUserGroups=vm.selectedPrice.Availability[scope.$index].UserGroups;angular.forEach(_.filter(scope.buyer.UserGroups,function(ug){return ug.selected}),function(ug){listAssignmentUserGroups=_.filter(listAssignmentUserGroups,function(group){return!(group.UserGroupID==ug.ID&&group.BuyerID==scope.buyer.ID)}),availabilityUserGroups=_.filter(availabilityUserGroups,function(group){return group.ID!=ug.ID}),queue.push(OrderCloud.Products.DeleteAssignment($stateParams.productid,null,ug.ID,scope.buyer.ID))}),vm.availabilityLoading[scope.$index]=$q.all(queue).then(function(){vm.listAssignments[vm.selectedPrice.PriceSchedule.ID].UserGroups=listAssignmentUserGroups,vm.selectedPrice.Availability[scope.$index].UserGroups=availabilityUserGroups})}}}function PriceScheduleEditModalController($uibModalInstance,SelectedPriceSchedule,OrderCloud){var vm=this;vm.data=angular.copy(SelectedPriceSchedule),vm.priceScheduleName=SelectedPriceSchedule.Name,vm.submit=function(){vm.loading=OrderCloud.PriceSchedules.Update(SelectedPriceSchedule.ID,vm.data).then(function(updatedPriceSchdule){$uibModalInstance.close(updatedPriceSchdule)})},vm.cancel=function(){$uibModalInstance.dismiss()}}function PriceSchedulePriceBreakController($uibModalInstance,OrderCloud,PriceScheduleID){var vm=this;vm.priceBreak={Quantity:1,Price:null},vm.confirm=function(){vm.loading=OrderCloud.PriceSchedules.SavePriceBreak(PriceScheduleID,vm.priceBreak).then(function(priceSchedule){$uibModalInstance.close(priceSchedule)})},vm.cancel=function(){$uibModalInstance.dismiss()}}ProductPricingController.$inject=["$q","$stateParams","$uibModal","toastr","AssignmentList","AssignmentData","ocProductPricing","ocConfirm","OrderCloud"],PriceScheduleEditModalController.$inject=["$uibModalInstance","SelectedPriceSchedule","OrderCloud"],PriceSchedulePriceBreakController.$inject=["$uibModalInstance","OrderCloud","PriceScheduleID"],angular.module("orderCloud").controller("ProductPricingCtrl",ProductPricingController).controller("PriceScheduleEditModalCtrl",PriceScheduleEditModalController).controller("PriceSchedulePriceBreakCtrl",PriceSchedulePriceBreakController)}(),function(){"use strict";function ProductPricingConfig($stateProvider){$stateProvider.state("productDetail.pricing",{url:"/pricing",params:{pricescheduleid:void 0},templateUrl:"productManagement/pricing/templates/productPricing.html",controller:"ProductPricingCtrl",controllerAs:"productPricing",data:{pageTitle:"Product Pricing"},resolve:{AssignmentList:["ocProductPricing","$stateParams","buyerid",function(ocProductPricing,$stateParams,buyerid){return ocProductPricing.AssignmentList($stateParams.productid,buyerid)}],AssignmentData:["ocProductPricing","AssignmentList",function(ocProductPricing,AssignmentList){return ocProductPricing.AssignmentData(AssignmentList)}]}}).state("productDetail.createAssignment",{url:"/new-price",templateUrl:"productManagement/pricing/templates/productCreateAssignment.html",controller:"ProductCreateAssignmentCtrl",controllerAs:"productCreateAssignment",data:{pageTitle:"Create New Price"},resolve:{Buyers:["OrderCloud",function(OrderCloud){return OrderCloud.Buyers.List()}]}}).state("productDetail.pricing.priceScheduleDetail",{url:"/:pricescheduleid",templateUrl:"productManagement/pricing/templates/priceScheduleDetail.html",controller:"PriceScheduleDetailCtrl",controllerAs:"priceScheduleDetail",resolve:{AssignmentDataDetail:["$stateParams","ocProductPricing","AssignmentData",function($stateParams,ocProductPricing,AssignmentData){return ocProductPricing.AssignmentDataDetail(AssignmentData,$stateParams.pricescheduleid)}]}})}ProductPricingConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(ProductPricingConfig)}(),function(){"use strict";function ocProductInventoryService($q,OrderCloud){function _update(product,inventory){var inventoryResult,deferred=$q.defer(),queue=[],productPartial=_.pick(product,["InventoryNotificationPoint","AllowOrderExceedInventory"]);return queue.push(OrderCloud.Products.Patch(product.ID,productPartial)),queue.push(function(){var d=$q.defer();return OrderCloud.Products.UpdateInventory(product.ID,inventory.Available).then(function(data){inventoryResult=data,d.resolve()})["catch"](function(ex){inventoryResult=ex,d.reject()}),d.promise}()),$q.all(queue).then(function(){deferred.resolve(inventoryResult)})["catch"](function(){deferred.reject(inventoryResult)}),deferred.promise}var service={Update:_update};return service}ocProductInventoryService.$inject=["$q","OrderCloud"],angular.module("orderCloud").factory("ocProductInventory",ocProductInventoryService)}(),function(){"use strict";function ProductInventoryController(toastr,ocProductInventory,ProductInventory){function updateProductInventory(product){vm.productUpdateLoading=ocProductInventory.Update(product,vm.inventory).then(function(inventory){vm.inventory=angular.copy(inventory),vm.inventoryAvailable=angular.copy(inventory.Available),vm.ProductInventoryForm.$setPristine(),toastr.success(product.Name+" inventory was updated")})}var vm=this;vm.inventory=angular.copy(ProductInventory),vm.inventoryAvailable=angular.copy(ProductInventory.Available),vm.updateProductInventory=updateProductInventory}ProductInventoryController.$inject=["toastr","ocProductInventory","ProductInventory"],angular.module("orderCloud").controller("ProductInventoryCtrl",ProductInventoryController)}(),function(){"use strict";function ProductInventoryConfig($stateProvider){$stateProvider.state("productDetail.inventory",{url:"/inventory",templateUrl:"productManagement/inventory/templates/productInventory.html",controller:"ProductInventoryCtrl",controllerAs:"productInventory",data:{pageTitle:"Product Inventory"},resolve:{ProductInventory:["$stateParams","OrderCloud",function($stateParams,OrderCloud){return OrderCloud.Products.GetInventory($stateParams.productid)}]}})}ProductInventoryConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(ProductInventoryConfig)}(),function(){"use strict";function OrderCloudOrderShipmentsService($q,$uibModal,ocConfirm,OrderCloud){function _list(orderID,buyerID,page,pageSize){function getLineItems(data){var lineItemIDs=_.uniq(_.flatten(_.map(data.Items,function(shipment){return _.pluck(shipment.Items,"LineItemID")})));OrderCloud.LineItems.List(orderID,null,1,100,null,null,{ID:lineItemIDs.join("|")},buyerID).then(function(lineItemData){angular.forEach(data.Items,function(shipment){angular.forEach(shipment.Items,function(shipmentItem){shipmentItem.LineItem=_.findWhere(lineItemData.Items,{ID:shipmentItem.LineItemID})})}),analyzeShippingAddresses(data)})}function analyzeShippingAddresses(data){angular.forEach(data.Items,function(shipment){var shippingAddressCount=_.uniq(_.map(shipment.Items,function(item){return item.LineItem.ShippingAddress?item.LineItem.ShippingAddress.ID?item.LineItem.ShippingAddress.ID:item.LineItem.ShippingAddress.Street1:item.LineItem.ShippingAddressID})).length;shipment.ShippingAddress=1==shippingAddressCount?shipment.Items[0].LineItem.ShippingAddress:null}),deferred.resolve(data)}var deferred=$q.defer();return OrderCloud.Shipments.List(orderID,null,page,pageSize,null,null,null,buyerID).then(function(data){getLineItems(data)}),deferred.promise}function _listLineItems(orderID,buyerID,page,pageSize){function analyzeShipments(data){angular.forEach(data.Items,function(lineItem){lineItem.Selected=!1,lineItem.ShipQuantity=lineItem.Quantity-lineItem.QuantityShipped}),deferred.resolve(data)}var deferred=$q.defer();return OrderCloud.LineItems.List(orderID,null,page,pageSize,null,null,null,buyerID).then(function(data){analyzeShipments(data)}),deferred.promise}function _create(shipment,lineItems,orderID,buyerID){var deferred=$q.defer(),shipmentModel=angular.copy(shipment);return shipmentModel.Items=[],angular.forEach(lineItems,function(lineItem){lineItem.Selected&&lineItem.ShipQuantity&&lineItem.ShipQuantity>0&&shipmentModel.Items.push({LineItemID:lineItem.ID,OrderID:orderID,QuantityShipped:lineItem.ShipQuantity})}),shipmentModel.DateShipped&&"function"==typeof shipmentModel.DateShipped.getDate&&(shipmentModel.DateShipped=shipmentModel.DateShipped.toISOString()),shipmentModel.DateDelivered&&"function"==typeof shipmentModel.DateDelivered.getDate&&(shipmentModel.DateDelivered=shipmentModel.DateDelivered.toISOString()),OrderCloud.Shipments.Create(shipmentModel,buyerID).then(function(data){deferred.resolve(data)}),deferred.promise}function _edit(shipment,buyerID){return $uibModal.open({templateUrl:"orderManagement/shipments/templates/orderShipmentsEdit.modal.html",controller:"OrderShipmentsEditCtrl",controllerAs:"orderShipmentsEdit",resolve:{OrderShipment:function(){return shipment},BuyerID:function(){return buyerID}}}).result}function _delete(shipmentID,buyerID){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+shipmentID+"</b>?",confirmText:"Delete shipment",type:"delete"}).then(function(){return OrderCloud.Shipments.Delete(shipmentID,buyerID)})}function _createItems(shipment,orderID,buyerID){return $uibModal.open({templateUrl:"orderManagement/shipments/templates/orderShipmentsCreateItem.modal.html",size:"lg",controller:"OrderShipmentsCreateItemsCtrl",controllerAs:"orderShipmentsCreateItems",resolve:{ShipmentLineItems:["ocOrderShipmentsService",function(ocOrderShipmentsService){return ocOrderShipmentsService.ListLineItems(orderID,buyerID)}],Shipment:function(){return shipment},OrderID:function(){return orderID},BuyerID:function(){return buyerID}}}).result}function _editItem(item,shipmentID,buyerID){return $uibModal.open({templateUrl:"orderManagement/shipments/templates/orderShipmentsEditItem.modal.html",controller:"OrderShipmentsEditItemCtrl",controllerAs:"orderShipmentsEditItem",resolve:{ShipmentItem:function(){return item},ShipmentID:function(){return shipmentID},BuyerID:function(){return buyerID}}}).result}function _deleteItem(shipmentID,orderID,lineItemID,buyerID){return ocConfirm.Confirm({message:"Are you sure you want to delete this shipment item? <br>"+lineItemID,confirmText:"Delete shipment item"}).then(function(){return OrderCloud.Shipments.DeleteItem(shipmentID,orderID,lineItemID,buyerID)})}var service={List:_list,ListLineItems:_listLineItems,Create:_create,Edit:_edit,Delete:_delete,CreateItems:_createItems,EditItem:_editItem,DeleteItem:_deleteItem};return service}OrderCloudOrderShipmentsService.$inject=["$q","$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocOrderShipmentsService",OrderCloudOrderShipmentsService)}(),function(){"use strict";function OrderShipmentsController($exceptionHandler,$stateParams,toastr,OrderCloud,ocConfirm,ocOrderShipmentsService,OrderShipments){var vm=this;vm.list=OrderShipments,vm.orderID=$stateParams.orderid,vm.pageChanged=function(){ocOrderShipmentsService.List($stateParams.orderid,$stateParams.buyerid,vm.list.Meta.Page,vm.list.Meta.PageSize).then(function(data){vm.list=data})},vm.loadMore=function(){vm.list.Meta.Page++,ocOrderShipmentsService.List($stateParams.orderid,$stateParams.buyerid,vm.list.Meta.Page,vm.list.Meta.PageSize).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})},vm.selectShipment=function(shipment){vm.selectedShipment=angular.copy(shipment)},vm.list.Items.length&&vm.selectShipment(vm.list.Items[0]),vm.editShipment=function(){ocOrderShipmentsService.Edit(vm.selectedShipment,$stateParams.buyerid).then(function(data){vm.selectedShipment=angular.extend(vm.selectedShipment,data);var shipmentIndex=0;angular.forEach(vm.list.Items,function(shipment,index){shipment.ID==vm.selectedShipment.OriginalShipmentID&&(shipmentIndex=index)}),vm.list.Items[shipmentIndex]=data,toastr.success("Shipment was updated.")})},vm.deleteShipment=function(shipment){ocOrderShipmentsService.Delete(vm.selectedShipment.ID,$stateParams.buyerid).then(function(){var shipmentIndex=0;angular.forEach(vm.list.Items,function(shipment,index){shipment.ID==vm.selectedShipment.ID&&(shipmentIndex=index)}),vm.list.Items.splice(shipmentIndex,1),vm.selectedShipment=null,toastr.success("Shipment was deleted.")})},vm.createShipmentItems=function(){ocOrderShipmentsService.CreateItems(vm.selectedShipment,$stateParams.orderid,$stateParams.buyerid).then(function(data){vm.selectedShipment.Items=data.Items,toastr.success("Shipment item was created.")})},vm.editShipmentItem=function(item){ocOrderShipmentsService.EditItem(item,vm.selectedShipment.ID,$stateParams.buyerid).then(function(data){angular.forEach(vm.selectedShipment.Items,function(item){item.LineItemID==data.LineItemID&&(item.QuantityShipped=data.QuantityShipped)}),toastr.success("Shipment item was updated.")})},vm.deleteShipmentItem=function(item){ocOrderShipmentsService.DeleteItem(vm.selectedShipment.ID,$stateParams.orderid,item.LineItemID,$stateParams.buyerid).then(function(){var itemIndex=0;angular.forEach(vm.selectedShipment.Items,function(shipmentItem,index){shipmentItem.LineItemID==item.LineItemID&&(itemIndex=index)}),vm.selectedShipment.Items.splice(itemIndex,1),toastr.success("Shipment item was deleted.")})}}function OrderShipmentsCreateController($state,$stateParams,$timeout,toastr,ocOrderShipmentsService,ShipmentLineItems){var vm=this;vm.lineItems=ShipmentLineItems,vm.selectedLineItemPage=ShipmentLineItems.Meta.Page,_.each(vm.lineItems.Items,function(item){item.MetaPage=vm.lineItems.Meta.Page}),vm.pageChanged=function(){var cachedItems=_.filter(vm.lineItems.Items,function(item){return item.MetaPage&&item.MetaPage==vm.lineItems.Meta.Page});cachedItems.length?vm.selectedLineItemPage=vm.lineItems.Meta.Page:ocOrderShipmentsService.ListLineItems($stateParams.orderid,$stateParams.buyerid,vm.lineItems.Meta.Page,vm.lineItems.Meta.PageSize).then(function(data){vm.selectedLineItemPage=data.Meta.Page,_.each(data.Items,function(item){item.MetaPage=data.Meta.Page}),vm.lineItems.Items=vm.lineItems.Items.concat(data.Items)})},vm.loadMore=function(){vm.lineItems.Meta.Page++,ocOrderShipmentsService.ListLineItems($stateParams.orderid,$stateParams.buyerid,vm.lineItems.Meta.Page,vm.lineItems.Meta.PageSize).then(function(data){vm.lineItems.Items=vm.lineItems.Items.concat(data.Items),vm.lineItem.Meta=data.Meta})},$timeout(function(){vm.form.$setValidity("Shipment.ItemsSelected",!1)}),vm.itemChange=function(){var itemsSelected=!1;angular.forEach(vm.lineItems.Items,function(lineItem){lineItem.Selected&&lineItem.ShipQuantity>0&&(itemsSelected=!0)}),vm.form.$setValidity("Shipment.ItemsSelected",itemsSelected)},vm.submit=function(){ocOrderShipmentsService.Create(vm.shipment,vm.lineItems.Items,$stateParams.orderid,$stateParams.buyerid).then(function(){$state.go("^",{},{reload:!0}),toastr.success("Shipment was created.")})}}function OrderShipmentsEditController($uibModalInstance,OrderCloud,OrderShipment,BuyerID){var vm=this;vm.shipment=angular.copy(OrderShipment),vm.shipmentID=OrderShipment.ID,vm.shipment.DateShipped&&(vm.shipment.DateShipped=new Date(vm.shipment.DateShipped)),vm.shipment.DateDelivered&&(vm.shipment.DateDelivered=new Date(vm.shipment.DateDelivered)),vm.updateValidity=function(){vm.form.ID.$error["Shipment.UnavailableID"]&&vm.form.ID.$setValidity("Shipment.UnavailableID",!0)},vm.submit=function(){var partial=_.pick(vm.shipment,["ID","TrackingNumber","Cost","DateShipped","DateDelivered"]);partial.DateShipped&&(partial.DateShipped=new Date(partial.DateShipped)),partial.DateDelivered&&(partial.DateDelivered=new Date(partial.DateDelivered)),vm.loading=OrderCloud.Shipments.Patch(OrderShipment.ID,vm.shipment,BuyerID).then(function(data){var result=_.pick(data,["ID","TrackingNumber","Cost","DateShipped","DateDelivered"]);result.OriginalShipmentID=OrderShipment.ID,$uibModalInstance.close(result)})["catch"](function(ex){409==ex.status?(vm.form.ID.$setValidity("Shipment.UnavailableID",!1),vm.form.ID.$$element[0].focus()):$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}function OrderShipmentsCreateItemsController($q,$uibModalInstance,$exceptionHandler,$timeout,OrderCloud,ocOrderShipmentsService,ShipmentLineItems,Shipment,OrderID,BuyerID){var vm=this;
vm.lineItems=ShipmentLineItems,vm.selectedLineItemPage=ShipmentLineItems.Meta.Page;var existingShipmentsLineItemIDs=_.pluck(Shipment.Items,"LineItemID");angular.forEach(vm.lineItems.Items,function(item){item.MetaPage=vm.lineItems.Meta.Page,item.ExistingShipmentItem=existingShipmentsLineItemIDs.indexOf(item.ID)>-1}),vm.pageChanged=function(){var cachedItems=_.filter(vm.lineItems.Items,function(item){return item.MetaPage&&item.MetaPage==vm.lineItems.Meta.Page});cachedItems.length?vm.selectedLineItemPage=vm.lineItems.Meta.Page:ocOrderShipmentsService.ListLineItems(OrderID,BuyerID,vm.lineItems.Meta.Page,vm.lineItems.Meta.PageSize).then(function(data){vm.selectedLineItemPage=data.Meta.Page,angular.forEach(data.Items,function(item){item.MetaPage=data.Meta.Page,item.ExistingShipmentItem=existingShipmentsLineItemIDs.indexOf(item.ID)}),vm.lineItems.Items=vm.lineItems.Items.concat(data.Items)})},vm.loadMore=function(){vm.lineItems.Meta.Page++,ocOrderShipmentsService.ListLineItems(OrderID,BuyerID,vm.lineItems.Meta.Page,vm.lineItems.Meta.PageSize).then(function(data){vm.lineItems.Items=vm.lineItems.Items.concat(data.Items),vm.lineItem.Meta=data.Meta})},$timeout(function(){vm.form.$setValidity("ShipmentItem.ItemsSelected",!1)}),vm.itemChange=function(){var itemsSelected=!1;angular.forEach(vm.lineItems.Items,function(lineItem){lineItem.Selected&&lineItem.ShipQuantity>0&&(itemsSelected=!0)}),vm.form.$setValidity("ShipmentItem.ItemsSelected",itemsSelected)},vm.submit=function(){var queue=[];angular.forEach(vm.lineItems.Items,function(lineItem){if(lineItem.Selected&&lineItem.ShipQuantity&&lineItem.ShipQuantity>0){var shipmentItem={OrderID:OrderID,LineItemID:lineItem.ID,QuantityShipped:lineItem.ShipQuantity};queue.push(OrderCloud.Shipments.SaveItem(Shipment.ID,shipmentItem,BuyerID))}}),vm.loading=$q.all(queue).then(function(results){var lastResult=results[results.length-1];angular.forEach(lastResult.Items,function(shipmentItem){shipmentItem.LineItem=_.findWhere(vm.lineItems.Items,{ID:shipmentItem.LineItemID})}),$uibModalInstance.close(lastResult)},function(ex){$uibModalInstance.dismiss(),$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}function OrderShipmentsEditItemController($uibModalInstance,OrderCloud,ShipmentItem,ShipmentID,BuyerID){var vm=this;vm.shipmentItem=angular.copy(ShipmentItem),vm.itemID=ShipmentItem.ID,vm.submit=function(){vm.loading=OrderCloud.Shipments.SaveItem(ShipmentID,vm.shipmentItem,BuyerID).then(function(data){$uibModalInstance.close(vm.shipmentItem)})["catch"](function(ex){409==ex.status?(vm.form.ID.$setValidity("Shipment.UnavailableID",!1),vm.form.ID.$$element[0].focus()):$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}OrderShipmentsController.$inject=["$exceptionHandler","$stateParams","toastr","OrderCloud","ocConfirm","ocOrderShipmentsService","OrderShipments"],OrderShipmentsCreateController.$inject=["$state","$stateParams","$timeout","toastr","ocOrderShipmentsService","ShipmentLineItems"],OrderShipmentsEditController.$inject=["$uibModalInstance","OrderCloud","OrderShipment","BuyerID"],OrderShipmentsCreateItemsController.$inject=["$q","$uibModalInstance","$exceptionHandler","$timeout","OrderCloud","ocOrderShipmentsService","ShipmentLineItems","Shipment","OrderID","BuyerID"],OrderShipmentsEditItemController.$inject=["$uibModalInstance","OrderCloud","ShipmentItem","ShipmentID","BuyerID"],angular.module("orderCloud").controller("OrderShipmentsCtrl",OrderShipmentsController).controller("OrderShipmentsCreateCtrl",OrderShipmentsCreateController).controller("OrderShipmentsEditCtrl",OrderShipmentsEditController).controller("OrderShipmentsCreateItemsCtrl",OrderShipmentsCreateItemsController).controller("OrderShipmentsEditItemCtrl",OrderShipmentsEditItemController)}(),function(){"use strict";function OrderShipmentsConfig($stateProvider){$stateProvider.state("orderDetail.shipments",{url:"/shipments",templateUrl:"orderManagement/shipments/templates/orderShipments.html",controller:"OrderShipmentsCtrl",controllerAs:"orderShipments",data:{pageTitle:"Order Shipments"},resolve:{OrderShipments:["$stateParams","ocOrderShipmentsService",function($stateParams,ocOrderShipmentsService){return ocOrderShipmentsService.List($stateParams.orderid,$stateParams.buyerid)}]}}).state("orderDetail.shipments.create",{url:"/create",templateUrl:"orderManagement/shipments/templates/orderShipmentsCreate.html",controller:"OrderShipmentsCreateCtrl",controllerAs:"orderShipmentsCreate",data:{pageTitle:"Create Shipment"},resolve:{ShipmentLineItems:["$stateParams","ocOrderShipmentsService",function($stateParams,ocOrderShipmentsService){return ocOrderShipmentsService.ListLineItems($stateParams.orderid,$stateParams.buyerid)}]}})}OrderShipmentsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(OrderShipmentsConfig)}(),function(){"use strict";function OrderCloudOrdersService($q,$filter,OrderCloud){function _list(parameters){function convertToDate(toDate){var result=new Date(toDate);return result=result.setDate(result.getDate()+1),$filter("date")(result,"MM-dd-yyyy")}function gatherBuyerCompanies(data){var buyerIDs=_.uniq(_.pluck(data.Items,"FromCompanyID"));OrderCloud.Buyers.List(null,1,100,null,null,{ID:buyerIDs.join("|")}).then(function(buyerData){_.map(data.Items,function(order){order.FromCompany=_.findWhere(buyerData.Items,{ID:order.FromCompanyID})}),deferred.resolve(data)})}var deferred=$q.defer();parameters.fromDate&&parameters.toDate?parameters.filters.DateSubmitted=[">"+parameters.fromDate,"<"+convertToDate(parameters.toDate)]:parameters.fromDate&&!parameters.toDate?parameters.filters.DateSubmitted=[">"+parameters.fromDate]:!parameters.fromDate&&parameters.toDate&&(parameters.filters.DateSubmitted=["<"+convertToDate(parameters.toDate)]);var showSubmittedOnly=angular.extend({status:"!Unsubmitted"},parameters.filters);return OrderCloud.Orders.ListIncoming(null,null,parameters.search,parameters.page,parameters.pageSize,parameters.searchOn,parameters.sortBy,showSubmittedOnly,parameters.buyerID).then(function(data){gatherBuyerCompanies(data)}),deferred.promise}var service={List:_list};return service}OrderCloudOrdersService.$inject=["$q","$filter","OrderCloud"],angular.module("orderCloud").factory("ocOrdersService",OrderCloudOrdersService)}(),function(){"use strict";function OrdersController($state,$ocMedia,OrderCloud,ocParameters,ocOrdersService,Parameters,OrderList,BuyerCompanies){var vm=this;Parameters.fromDate&&(Parameters.fromDate=new Date(Parameters.fromDate)),Parameters.toDate&&(Parameters.toDate=new Date(Parameters.toDate)),delete Parameters.filters.DateSubmitted,vm.parameters=Parameters,vm.list=OrderList,vm.buyerCompanies=BuyerCompanies,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.orderStatuses=[{Value:"Open",Name:"Open"},{Value:"AwaitingApproval",Name:"Awaiting Approval"},{Value:"Completed",Name:"Completed"},{Value:"Declined",Name:"Declined"}],vm.filtersApplied=vm.parameters.filters||$ocMedia("max-width:767px")&&vm.sortSelection,vm.showFilters=vm.filtersApplied,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.toggleFilters=function(){vm.showFilters=!vm.showFilters},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.parameters.pageSize=Parameters.pageSize||12,vm.searchLoading=ocOrdersService.List(vm.parameters).then(function(data){vm.list=data,vm.searchResults=vm.parameters.search.length>0})},vm.clearSearch=function(){vm.searchResults=!1,vm.parameters.search=null,vm.filter(!0)},vm.clearFilters=function(){vm.parameters.filters=null,$ocMedia("max-width:767px")?vm.parameters.sortBy=null:angular.noop(),vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.reverseSort=function(){0==Parameters.sortBy.indexOf("!")?vm.parameters.sortBy=Parameters.sortBy.split("!")[1]:vm.parameters.sortBy="!"+Parameters.sortBy,vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return vm.parameters.page=vm.list.Meta.Page+1,vm.parameters.pageSize=vm.list.Meta.PageSize,ocOrdersService.List(vm.parameters).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})},vm.searchBuyerCompanies=function(search){return OrderCloud.Buyers.List(search,1,100).then(function(data){vm.buyerCompanies=data})}}OrdersController.$inject=["$state","$ocMedia","OrderCloud","ocParameters","ocOrdersService","Parameters","OrderList","BuyerCompanies"],angular.module("orderCloud").controller("OrdersCtrl",OrdersController)}(),function(){"use strict";function OrdersConfig($stateProvider){$stateProvider.state("orders",{parent:"base",url:"/orders?buyerID&fromDate&toDate&search&page&pageSize&searchOn&sortBy&filters",templateUrl:"orderManagement/orders/templates/orders.html",controller:"OrdersCtrl",controllerAs:"orders",data:{pageTitle:"Orders"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],OrderList:["ocOrdersService","OrderCloud","Parameters",function(ocOrdersService,OrderCloud,Parameters){return ocOrdersService.List(Parameters)}],BuyerCompanies:["OrderCloud",function(OrderCloud){return OrderCloud.Buyers.List(null,1,100)}]}})}OrdersConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(OrdersConfig)}(),function(){"use strict";function OrderCloudOrderPaymentsService($q,OrderCloud){function _list(orderID,buyerID,page,pageSize){function getPaymentDetails(data){var queue=[];angular.forEach(data.Items,function(payment){queue.push(function(){var d=$q.defer();return payment.Details=null,"SpendingAccount"==payment.Type?OrderCloud.SpendingAccounts.Get(payment.SpendingAccountID,buyerID).then(function(spendingAccount){payment.Details=spendingAccount,d.resolve()})["catch"](function(){d.resolve()}):"CreditCard"==payment.Type?OrderCloud.CreditCards.Get(payment.CreditCardID,buyerID).then(function(creditCard){payment.Details=creditCard,d.resolve()})["catch"](function(){payment.Details={CardholderName:"Kyle Olson",ExpirationDate:(new Date).toISOString(),CardType:"Visa",PartialAccountNumber:"1111"},d.resolve()}):"PurchaseOrder"==payment.Type?(payment.xp&&payment.xp.PONumber&&(payment.Details={PONumber:payment.xp.PONumber}),d.resolve()):d.resolve(),d.promise}())}),deferred.resolve(data)}var deferred=$q.defer();return OrderCloud.Payments.List(orderID,null,page||page,pageSize,null,null,null,buyerID).then(function(data){getPaymentDetails(data)}),deferred.promise}var service={List:_list};return service}OrderCloudOrderPaymentsService.$inject=["$q","OrderCloud"],angular.module("orderCloud").factory("ocOrderPaymentsService",OrderCloudOrderPaymentsService)}(),function(){"use strict";function OrderPaymentsController($stateParams,ocOrderPaymentsService,OrderPayments){var vm=this;vm.list=OrderPayments,vm.pageChanged=function(){ocOrderPaymentsService.List($stateParams.orderid,$stateParams.buyerid,vm.list.Meta.Page,vm.list.Meta.PageSize).then(function(data){vm.list=data})},vm.loadMore=function(){vm.list.Meta.Page++,ocOrderPaymentsService.List($stateParams.orderid,$stateParams.buyerid,vm.list.Meta.Page,vm.list.Meta.PageSize).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})}}OrderPaymentsController.$inject=["$stateParams","ocOrderPaymentsService","OrderPayments"],angular.module("orderCloud").controller("OrderPaymentsCtrl",OrderPaymentsController)}(),function(){"use strict";function OrderPaymentsConfig($stateProvider){$stateProvider.state("orderDetail.payments",{url:"/payments",templateUrl:"orderManagement/payments/templates/orderPayments.html",controller:"OrderPaymentsCtrl",controllerAs:"orderPayments",data:{pageTitle:"Order Payments"},resolve:{OrderPayments:["$stateParams","ocOrderPaymentsService",function($stateParams,ocOrderPaymentsService){return ocOrderPaymentsService.List($stateParams.orderid,$stateParams.buyerid,1,null)}]}})}OrderPaymentsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(OrderPaymentsConfig)}(),function(){"use strict";function OrderCloudOrderDetailService($q,$uibModal,$exceptionHandler,OrderCloud){function _getOrderDetails(orderID,buyerID){function getBuyerCompany(data){OrderCloud.Buyers.Get(data.FromCompanyID).then(function(buyer){data.FromCompany=buyer,deferred.resolve(data)})["catch"](function(ex){$exceptionHandler(ex),deferred.resolve(data)})}var deferred=$q.defer();return OrderCloud.Orders.Get(orderID,buyerID).then(function(data){getBuyerCompany(data)}),deferred.promise}function _editLineItem(buyerID,orderID,lineItem){return $uibModal.open({templateUrl:"orderManagement/order/templates/orderDetail.lineItemEdit.modal.html",controller:"OrderLineItemEditModalCtrl",controllerAs:"orderLineItemEditModal",size:"md",resolve:{BuyerID:function(){return buyerID},OrderID:function(){return orderID},LineItem:function(){return lineItem}}}).result}var service={GetOrderDetails:_getOrderDetails,EditLineItem:_editLineItem};return service}OrderCloudOrderDetailService.$inject=["$q","$uibModal","$exceptionHandler","OrderCloud"],angular.module("orderCloud").factory("ocOrderDetailService",OrderCloudOrderDetailService)}(),function(){"use strict";function OrderLineItemEditModalController($uibModalInstance,OrderCloud,BuyerID,OrderID,LineItem){var vm=this;vm.lineItem=angular.copy(LineItem),vm.lineItemID=LineItem.ID,vm.lineItem.DateNeeded&&(vm.lineItem.DateNeeded=new Date(vm.lineItem.DateNeeded)),vm.updateValidity=function(){vm.form.ID.$error["LineItem.UnavailableID"]&&vm.form.ID.$setValidity("LineItem.UnavailableID",!0)},vm.submit=function(){var partial=_.pick(vm.lineItem,["ID","Quantity","UnitPrice","DateNeeded"]);partial.DateNeeded&&(partial.DateNeeded=new Date(partial.DateNeeded)),vm.loading=OrderCloud.LineItems.Patch(OrderID,LineItem.ID,partial,BuyerID).then(function(data){data.OriginalID=LineItem.ID,$uibModalInstance.close(data)})["catch"](function(ex){409==ex.status?(vm.form.ID.$setValidity("LineItem.UnavailableID",!1),vm.form.ID.$$element[0].focus()):$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}OrderLineItemEditModalController.$inject=["$uibModalInstance","OrderCloud","BuyerID","OrderID","LineItem"],angular.module("orderCloud").controller("OrderLineItemEditModalCtrl",OrderLineItemEditModalController)}(),function(){"use strict";function OrderController($stateParams,toastr,OrderCloud,ocOrderDetailService,SelectedOrder,OrderLineItems){var vm=this;vm.order=SelectedOrder,vm.lineItems=OrderLineItems,vm.pageChanged=function(){OrderCloud.LineItems.List($stateParams.orderid,null,vm.lineItems.Meta.Page,vm.lineItems.Meta.PageSize,null,null,null,$stateParams.buyerid).then(function(data){vm.lineItems=data})},vm.loadMore=function(){vm.lineItems.Meta.Page++,OrderCloud.LineItems.List($stateParams.orderid,null,vm.lineItems.Meta.Page,vm.lineItems.Meta.PageSize,null,null,null,$stateParams.buyerid).then(function(data){vm.lineItems.Items=vm.lineItems.Items.concat(data.Items),vm.lineItem.Meta=data.Meta})},vm.editLineItem=function(lineItem){ocOrderDetailService.EditLineItem(vm.order.FromCompanyID,vm.order.ID,lineItem).then(function(data){var itemIndex=0;angular.forEach(vm.lineItems.Items,function(item,index){item.ID==data.OriginalID&&(itemIndex=index)}),vm.lineItems.Items[itemIndex]=data,OrderCloud.Orders.Get($stateParams.orderid,$stateParams.buyerid).then(function(orderData){vm.order=angular.extend(vm.order,_.pick(orderData,["Subtotal","TaxCost","ShippingCost","Total"])),toastr.success("Line item updated.")})})}}OrderController.$inject=["$stateParams","toastr","OrderCloud","ocOrderDetailService","SelectedOrder","OrderLineItems"],angular.module("orderCloud").controller("OrderCtrl",OrderController)}(),function(){"use strict";function OrderConfig($stateProvider){$stateProvider.state("orderDetail",{parent:"base",url:"/order/:buyerid/:orderid",templateUrl:"orderManagement/order/templates/orderDetail.html",controller:"OrderCtrl",controllerAs:"orderDetail",data:{pageTitle:"Order"},resolve:{SelectedOrder:["$stateParams","ocOrderDetailService",function($stateParams,ocOrderDetailService){return ocOrderDetailService.GetOrderDetails($stateParams.orderid,$stateParams.buyerid)}],OrderLineItems:["$stateParams","OrderCloud",function($stateParams,OrderCloud){return OrderCloud.LineItems.List($stateParams.orderid,null,1,null,null,null,null,$stateParams.buyerid)}]}})}OrderConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(OrderConfig)}(),function(){"use strict";function OrderCloudApprovalsService($q,OrderCloud){function _list(orderID,buyerID,page,pageSize){function getApprovingUserGroups(data){var userGroupIDs=_.pluck(data.Items,"ApprovingGroupID");OrderCloud.UserGroups.List(null,1,100,null,null,{ID:userGroupIDs.join("|")},buyerID).then(function(userGroupData){angular.forEach(data.Items,function(approval){approval.ApprovingUserGroup=_.findWhere(userGroupData.Items,{ID:approval.ApprovingGroupID})}),getApprovalRules(data)})["catch"](function(){getApprovalRules(data)})}function getApprovalRules(data){var approvalRuleIDs=_.pluck(data.Items,"ApprovalRuleID");OrderCloud.ApprovalRules.List(null,1,100,null,null,{ID:approvalRuleIDs.join("|")},buyerID).then(function(approvalRuleData){angular.forEach(data.Items,function(approval){approval.ApprovalRule=_.findWhere(approvalRuleData.Items,{ID:approval.ApprovalRuleID})}),deferred.resolve(data)})["catch"](function(){deferred.resolve(data)})}var deferred=$q.defer();return OrderCloud.Orders.ListApprovals(orderID,null,page,pageSize,null,"Status",null,buyerID).then(function(data){getApprovingUserGroups(data)}),deferred.promise}var service={List:_list};return service}OrderCloudApprovalsService.$inject=["$q","OrderCloud"],angular.module("orderCloud").factory("ocOrderApprovalsService",OrderCloudApprovalsService)}(),function(){"use strict";function OrderApprovalsController(OrderApprovals){var vm=this;vm.list=OrderApprovals,vm.pageChanged=function(){ocOrderApprovalsService.List($stateParams.orderid,$stateParams.buyerid,vm.list.Meta.Page,vm.list.Meta.PageSize).then(function(data){vm.list=data})},vm.loadMore=function(){vm.list.Meta.Page++,ocOrderApprovalsService.List($stateParams.orderid,$stateParams.buyerid,vm.list.Meta.Page,vm.list.Meta.PageSize).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})}}OrderApprovalsController.$inject=["OrderApprovals"],angular.module("orderCloud").controller("OrderApprovalsCtrl",OrderApprovalsController)}(),function(){"use strict";function OrderApprovalsConfig($stateProvider){$stateProvider.state("orderDetail.approvals",{url:"/approvals",templateUrl:"orderManagement/approvals/templates/orderApprovals.html",controller:"OrderApprovalsCtrl",controllerAs:"orderApprovals",data:{pageTitle:"Order Approvals"},resolve:{OrderApprovals:["$stateParams","ocOrderApprovalsService",function($stateParams,ocOrderApprovalsService){return ocOrderApprovalsService.List($stateParams.orderid,$stateParams.buyerid,1,100)}]}})}OrderApprovalsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(OrderApprovalsConfig)}(),function(){"use strict";function OrderCloudUsers($q,$uibModal,ocConfirm,OrderCloud){function _create(buyerid){return $uibModal.open({templateUrl:"buyerManagement/users/templates/userCreate.modal.html",controller:"UserCreateModalCtrl",controllerAs:"userCreateModal",resolve:{SelectedBuyerID:function(){return buyerid}}}).result}function _edit(user,buyerid){return $uibModal.open({templateUrl:"buyerManagement/users/templates/userEdit.modal.html",controller:"UserEditModalCtrl",controllerAs:"userEditModal",resolve:{SelectedBuyerID:function(){return buyerid},SelectedUser:function(){return user}}}).result}function _delete(user,buyerid){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+user.Username+"</b>?",confirmText:"Delete user",type:"delete"}).then(function(){return OrderCloud.Users.Delete(user.ID,buyerid)})}function _getAssignments(buyerid,usergroupid){return OrderCloud.UserGroups.ListUserAssignments(usergroupid,null,null,100,buyerid).then(function(data1){for(var df=$q.defer(),queue=[],totalPages=angular.copy(data1.Meta.TotalPages),currentPage=angular.copy(data1.Meta.Page);totalPages>=currentPage;)currentPage++,queue.push(OrderCloud.UserGroups.ListUserAssignments(usergroupid,null,currentPage,100,buyerid));return $q.all(queue).then(function(results){angular.forEach(results,function(r){data1.Items=data1.Items.concat(r.Items)}),df.resolve(data1.Items)}),df.promise})}function _mapAssignments(allAssignments,userList){return userList.Items=_.map(userList.Items,function(user){return user.Assigned=!1,angular.forEach(allAssignments,function(assignment){user.ID==assignment.UserID&&(user.Assigned=!0)}),user}),userList}function _compareAssignments(allAssignments,userList,userGroupID){var changedAssignments=[];return angular.forEach(userList.Items,function(user){var existingAssignment=_.where(allAssignments,{UserID:user.ID})[0];existingAssignment&&!user.Assigned?changedAssignments.push({old:existingAssignment,"new":null}):!existingAssignment&&user.Assigned&&changedAssignments.push({old:null,"new":{UserGroupID:userGroupID,UserID:user.ID}})}),changedAssignments}function _updateAssignments(allAssignments,changedAssignments,buyerid){var df=$q.defer(),assignmentQueue=[],errors=[];return angular.forEach(changedAssignments,function(diff){!diff.old&&diff["new"]?assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.UserGroups.SaveUserAssignment(diff["new"],buyerid).then(function(){allAssignments.push(diff["new"]),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}()):diff.old&&!diff["new"]&&assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.UserGroups.DeleteUserAssignment(diff.old.UserGroupID,diff.old.UserID,buyerid).then(function(){allAssignments.splice(allAssignments.indexOf(diff.old),1),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}())}),$q.all(assignmentQueue).then(function(){df.resolve({UpdatedAssignments:allAssignments,Errors:errors})}),df.promise}var service={Create:_create,Edit:_edit,Delete:_delete,Assignments:{Get:_getAssignments,Map:_mapAssignments,Compare:_compareAssignments,Update:_updateAssignments}};return service}OrderCloudUsers.$inject=["$q","$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocUsers",OrderCloudUsers)}(),function(){"use strict";function UsersController($state,$stateParams,toastr,$ocMedia,OrderCloud,ocUsers,ocParameters,UserList,Parameters){var vm=this;vm.list=UserList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.Users.List(null,vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.list=data,vm.searchResults=vm.parameters.search.length>0})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.clearFilters=function(){vm.parameters.filters=null,vm.parameters.from=null,vm.parameters.to=null,$ocMedia("max-width:767px")?vm.parameters.sortBy=null:angular.noop(),vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.Users.List(null,Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})},vm.editUser=function(scope){ocUsers.Edit(scope.user,$stateParams.buyerid).then(function(updatedUser){vm.list.Items[scope.$index]=updatedUser,toastr.success(updatedUser.Username+" was updated.")})},vm.createUser=function(){ocUsers.Create($stateParams.buyerid).then(function(newUser){vm.list.Items.push(newUser),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(newUser.Username+" was created.")})},vm.deleteUser=function(scope){ocUsers.Delete(scope.user,$stateParams.buyerid).then(function(){toastr.success(scope.user.Username+" was deleted."),vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--})}}UsersController.$inject=["$state","$stateParams","toastr","$ocMedia","OrderCloud","ocUsers","ocParameters","UserList","Parameters"],angular.module("orderCloud").controller("UsersCtrl",UsersController)}(),function(){"use strict";function UsersConfig($stateProvider){$stateProvider.state("users",{parent:"buyer",templateUrl:"buyerManagement/users/templates/users.html",controller:"UsersCtrl",controllerAs:"users",url:"/users?userGroupID&search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Buyer Users"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],UserList:["OrderCloud","Parameters",function(OrderCloud,Parameters){return OrderCloud.Users.List(Parameters.userGroupID,Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid)}]}}).state("userGroup.users",{url:"/users?search&page&pageSize&searchOn&sortBy&filters",templateUrl:"buyerManagement/users/templates/userGroupUsers.html",controller:"UserGroupUsersCtrl",controllerAs:"userGroupUsers",data:{pageTitle:"User Group Members"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$stateParams","ocUsers",function($stateParams,ocUsers){return ocUsers.Assignments.Get($stateParams.buyerid,$stateParams.usergroupid)}],UserList:["Parameters","CurrentAssignments","ocUsers","OrderCloud",function(Parameters,CurrentAssignments,ocUsers,OrderCloud){return OrderCloud.Users.List(null,Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){return ocUsers.Assignments.Map(CurrentAssignments,data)})}]}})}UsersConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(UsersConfig)}(),function(){"use strict";function UserGroupUsersController($exceptionHandler,$filter,$state,$stateParams,toastr,ocUsers,OrderCloud,ocParameters,UserList,CurrentAssignments,Parameters){function selectedCheck(){vm.allItemsSelected=_.where(vm.list.Items,{Assigned:!0}).length==vm.list.Items.length}function changedCheck(){vm.changedAssignments=ocUsers.Assignments.Compare(CurrentAssignments,vm.list,$stateParams.usergroupid)}var vm=this;vm.list=UserList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go("userGroup.users",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.Users.List(null,vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.changedAssignments=[],vm.list=ocUsers.Assignments.Map(CurrentAssignments,data),vm.searchResults=vm.parameters.search.length>0,selectedCheck()})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.Users.List(null,Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){var mappedData=ocUsers.Assignments.Map(CurrentAssignments,data);vm.list.Items=vm.list.Items.concat(mappedData.Items),vm.list.Meta=mappedData.Meta,selectedCheck()})},selectedCheck(),vm.selectAllItems=function(){vm.allItemsSelected=!vm.allItemsSelected,_.map(vm.list.Items,function(i){i.Assigned=vm.allItemsSelected}),changedCheck()},vm.selectItem=function(scope){scope.user.Assigned||(vm.allItemsSelected=!1),vm.selectedCount=$filter("filter")(vm.list.Items,{Assigned:!0}).length,changedCheck()},vm.resetAssignments=function(){vm.list=ocUsers.Assignments.Map(CurrentAssignments,vm.list),vm.changedAssignments=[],selectedCheck()},vm.updateAssignments=function(){vm.searchLoading=ocUsers.Assignments.Update(CurrentAssignments,vm.changedAssignments,$stateParams.buyerid).then(function(data){angular.forEach(data.Errors,function(ex){$exceptionHandler(ex)}),CurrentAssignments=data.UpdatedAssignments,changedCheck(),selectedCheck(),toastr.success("User assignments updated.")})},vm.createUser=function(){function _updateList(n){vm.list.Items.push(n),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(n.Username+" was created.")}ocUsers.Create($stateParams.buyerid).then(function(newUser){var newAssignment={UserID:newUser.ID,UserGroupID:$stateParams.usergroupid};vm.searchLoading=OrderCloud.UserGroups.SaveUserAssignment(newAssignment,$stateParams.buyerid).then(function(){newUser.Assigned=!0,CurrentAssignments.push(newAssignment),_updateList(newUser)})["catch"](function(){newUser.Assigned=!1,_updateList(newUser)})})},vm.editUser=function(scope){ocUsers.Edit(scope.user,$stateParams.buyerid).then(function(updatedUser){updatedUser.Assigned=vm.list.Items[scope.$index].Assigned,vm.list.Items[scope.$index]=updatedUser,updatedUser.ID!=scope.user.ID&&(_.map(CurrentAssignments,function(assignment){return assignment.UserID==scope.user.ID&&(assignment.UserID=updatedUser.ID),assignment}),changedCheck()),toastr.success(updatedUser.Username+" was updated.")})},vm.deleteUser=function(scope){ocUsers.Delete(scope.user,$stateParams.buyerid).then(function(){toastr.success(scope.user.Username+" was deleted."),vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,changedCheck()})}}UserGroupUsersController.$inject=["$exceptionHandler","$filter","$state","$stateParams","toastr","ocUsers","OrderCloud","ocParameters","UserList","CurrentAssignments","Parameters"],angular.module("orderCloud").controller("UserGroupUsersCtrl",UserGroupUsersController)}(),function(){"use strict";function UserEditModalController($exceptionHandler,$uibModalInstance,OrderCloud,SelectedUser,SelectedBuyerID){var vm=this;vm.user=angular.copy(SelectedUser),vm.username=SelectedUser.Username,vm.fullName=SelectedUser.FirstName?SelectedUser.FirstName+(SelectedUser.LastName?" "+SelectedUser.LastName:""):SelectedUser.LastName?SelectedUser.LastName:null,null!=vm.user.TermsAccepted&&(vm.TermsAccepted=!0),vm.submit=function(){var today=new Date;vm.user.TermsAccepted=today,vm.loading={backdrop:!1},vm.loading.promise=OrderCloud.Users.Update(SelectedUser.ID,vm.user,SelectedBuyerID).then(function(updatedUser){$uibModalInstance.close(updatedUser)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){
$uibModalInstance.dismiss()}}UserEditModalController.$inject=["$exceptionHandler","$uibModalInstance","OrderCloud","SelectedUser","SelectedBuyerID"],angular.module("orderCloud").controller("UserEditModalCtrl",UserEditModalController)}(),function(){"use strict";function UserCreateModalController($exceptionHandler,$uibModalInstance,OrderCloud,SelectedBuyerID){var vm=this;vm.user={Email:"",Password:"",Active:!1},vm.submit=function(){vm.user.TermsAccepted=new Date,vm.loading={backdrop:!1},vm.loading.promise=OrderCloud.Users.Create(vm.user,SelectedBuyerID).then(function(newUser){$uibModalInstance.close(newUser)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}UserCreateModalController.$inject=["$exceptionHandler","$uibModalInstance","OrderCloud","SelectedBuyerID"],angular.module("orderCloud").controller("UserCreateModalCtrl",UserCreateModalController)}(),function(){"use strict";function OrderCloudUserGroups($uibModal,ocConfirm,OrderCloud){function _create(buyerid){return $uibModal.open({templateUrl:"buyerManagement/userGroups/templates/userGroupCreate.modal.html",controller:"UserGroupCreateModalCtrl",controllerAs:"userGroupCreateModal",resolve:{SelectedBuyerID:function(){return buyerid}}}).result}function _delete(userGroup,buyerid){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+userGroup.Name+"</b>?",confirmText:"Delete user group",type:"delete"}).then(function(){return OrderCloud.UserGroups.Delete(userGroup.ID,buyerid)})}var service={Create:_create,Delete:_delete};return service}OrderCloudUserGroups.$inject=["$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocUserGroups",OrderCloudUserGroups)}(),function(){"use strict";function UserGroupsController($state,$stateParams,toastr,ocUserGroups,OrderCloud,ocParameters,UserGroupList,Parameters){var vm=this;vm.list=UserGroupList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.UserGroups.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.list=data,vm.searchResults=vm.parameters.search.length>0})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.UserGroups.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})},vm.createGroup=function(){ocUserGroups.Create($stateParams.buyerid).then(function(newUserGroup){toastr.success(newUserGroup.Name+" was created."),$state.go("userGroup",{usergroupid:newUserGroup.ID})})},vm.deleteGroup=function(scope){ocUserGroups.Delete(scope.userGroup,$stateParams.buyerid).then(function(){toastr.success(scope.userGroup.Name+" was deleted."),vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--})}}UserGroupsController.$inject=["$state","$stateParams","toastr","ocUserGroups","OrderCloud","ocParameters","UserGroupList","Parameters"],angular.module("orderCloud").controller("UserGroupsCtrl",UserGroupsController)}(),function(){"use strict";function UserGroupsConfig($stateProvider){$stateProvider.state("userGroups",{parent:"buyer",url:"/user-groups?search&page&pageSize&searchOn&sortBy&filters",templateUrl:"buyerManagement/userGroups/templates/userGroups.html",controller:"UserGroupsCtrl",controllerAs:"userGroups",data:{pageTitle:"Buyer User Groups"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],UserGroupList:["OrderCloud","Parameters",function(OrderCloud,Parameters){return OrderCloud.UserGroups.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid)}]}}).state("userGroup",{parent:"buyer",url:"/user-groups/:usergroupid",templateUrl:"buyerManagement/userGroups/templates/userGroup.html",controller:"UserGroupCtrl",controllerAs:"userGroup",data:{pageTitle:"Buyer User Group"},resolve:{SelectedUserGroup:["$stateParams","OrderCloud",function($stateParams,OrderCloud){return OrderCloud.UserGroups.Get($stateParams.usergroupid,$stateParams.buyerid)}]}})}UserGroupsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(UserGroupsConfig)}(),function(){"use strict";function UserGroupCreateModalController($uibModalInstance,$exceptionHandler,OrderCloud,SelectedBuyerID){var vm=this;vm.submit=function(){vm.loading=OrderCloud.UserGroups.Create(vm.userGroup,SelectedBuyerID).then(function(data){$uibModalInstance.close(data)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}UserGroupCreateModalController.$inject=["$uibModalInstance","$exceptionHandler","OrderCloud","SelectedBuyerID"],angular.module("orderCloud").controller("UserGroupCreateModalCtrl",UserGroupCreateModalController)}(),function(){"use strict";function UserGroupController($state,$stateParams,toastr,OrderCloud,ocUserGroups,SelectedUserGroup){var vm=this;vm.group=SelectedUserGroup,vm.model=angular.copy(SelectedUserGroup),vm.update=function(){OrderCloud.UserGroups.Update(vm.group.ID,vm.model,$stateParams.buyerid).then(function(updatedUserGroup){updatedUserGroup.ID!=vm.group.ID&&$state.go(".",{usergroupid:updatedUserGroup.ID},{notify:!1}),vm.group=updatedUserGroup,vm.model=angular.copy(updatedUserGroup),SelectedUserGroup=angular.copy(updatedUserGroup),toastr.success(vm.group.Name+" was updated.")})},vm["delete"]=function(){ocUserGroups.Delete(vm.group,$stateParams.buyerid).then(function(){toastr.success(vm.group.Name+" was deleted."),$state.go("userGroups")})}}UserGroupController.$inject=["$state","$stateParams","toastr","OrderCloud","ocUserGroups","SelectedUserGroup"],angular.module("orderCloud").controller("UserGroupCtrl",UserGroupController)}(),function(){"use strict";function OrderCloudSpendingAccounts($q,$uibModal,ocConfirm,OrderCloud){function _create(buyerid){return $uibModal.open({templateUrl:"buyerManagement/spendingAccounts/templates/spendingAccountCreate.modal.html",controller:"SpendingAccountCreateModalCtrl",controllerAs:"spendingAccountCreateModal",resolve:{SelectedBuyerID:function(){return buyerid}}}).result}function _edit(spendingAccount,buyerid){return $uibModal.open({templateUrl:"buyerManagement/spendingAccounts/templates/spendingAccountEdit.modal.html",controller:"SpendingAccountEditModalCtrl",controllerAs:"spendingAccountEditModal",bindToController:!0,resolve:{SelectedSpendingAccount:function(){return spendingAccount},SelectedBuyerID:function(){return buyerid}}}).result}function _delete(spendingAccount,buyerid){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+spendingAccount.Name+"</b>?",confirmText:"Delete spending account",type:"delete"}).then(function(){return OrderCloud.SpendingAccounts.Delete(spendingAccount.ID,buyerid)})}function _getAssignments(level,buyerid,usergroupid){return OrderCloud.SpendingAccounts.ListAssignments(null,null,usergroupid,level,null,100,buyerid).then(function(data1){for(var df=$q.defer(),queue=[],totalPages=angular.copy(data1.Meta.TotalPages),currentPage=angular.copy(data1.Meta.Page);totalPages>=currentPage;)currentPage++,queue.push(OrderCloud.SpendingAccounts.ListAssignments(null,null,usergroupid,level,currentPage,100,buyerid));return $q.all(queue).then(function(results){angular.forEach(results,function(r){data1.Items=data1.Items.concat(r.Items)}),df.resolve(data1.Items)}),df.promise})}function _mapAssignments(allAssignments,spendingAccountList){return spendingAccountList.Items=_.map(spendingAccountList.Items,function(spendingAccount){return spendingAccount.Assigned=!1,angular.forEach(allAssignments,function(assignment){spendingAccount.ID==assignment.SpendingAccountID&&(spendingAccount.Assigned=!0)}),spendingAccount}),spendingAccountList}function _compareAssignments(allAssignments,spendingAccountList,userGroupID){var changedAssignments=[];return angular.forEach(spendingAccountList.Items,function(spendingAccount){var existingAssignment=_.where(allAssignments,{SpendingAccountID:spendingAccount.ID})[0];existingAssignment&&!spendingAccount.Assigned?changedAssignments.push({old:existingAssignment,"new":null}):!existingAssignment&&spendingAccount.Assigned&&changedAssignments.push({old:null,"new":{UserGroupID:userGroupID,SpendingAccountID:spendingAccount.ID}})}),changedAssignments}function _updateAssignments(allAssignments,changedAssignments,buyerid){var df=$q.defer(),assignmentQueue=[],errors=[];return angular.forEach(changedAssignments,function(diff){!diff.old&&diff["new"]?assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.SpendingAccounts.SaveAssignment(diff["new"],buyerid).then(function(){allAssignments.push(diff["new"]),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}()):diff.old&&!diff["new"]&&assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.SpendingAccounts.DeleteAssignment(diff.old.SpendingAccountID,null,diff.old.UserGroupID,buyerid).then(function(){allAssignments.splice(allAssignments.indexOf(diff.old),1),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}())}),$q.all(assignmentQueue).then(function(){df.resolve({UpdatedAssignments:allAssignments,Errors:errors})}),df.promise}var service={Create:_create,Edit:_edit,Delete:_delete,Assignments:{Get:_getAssignments,Map:_mapAssignments,Compare:_compareAssignments,Update:_updateAssignments}};return service}OrderCloudSpendingAccounts.$inject=["$q","$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocSpendingAccounts",OrderCloudSpendingAccounts)}(),function(){"use strict";function SpendingAccountsController($exceptionHandler,$state,$stateParams,toastr,OrderCloud,ocParameters,ocSpendingAccounts,CurrentAssignments,SpendingAccountList,Parameters){function selectedCheck(){vm.allItemsSelected=_.where(vm.list.Items,{Assigned:!0}).length==vm.list.Items.length}function changedCheck(){vm.changedAssignments=ocSpendingAccounts.Assignments.Compare(CurrentAssignments,vm.list,$stateParams.usergroupid)}var vm=this;vm.list=SpendingAccountList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.userGroupID=$stateParams.usergroupid,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.SpendingAccounts.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.changedAssignments=[],vm.list=ocSpendingAccounts.Assignments.Map(CurrentAssignments,data),vm.searchResults=vm.parameters.search.length>0,selectedCheck()})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.SpendingAccounts.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){var mappedData=ocSpendingAccounts.Assignments.Map(CurrentAssignments,data);vm.list.Items=vm.list.Items.concat(mappedData.Items),vm.list.Meta=mappedData.Meta,selectedCheck()})},selectedCheck(),vm.selectAllItems=function(){vm.allItemsSelected=!vm.allItemsSelected,_.map(vm.list.Items,function(i){i.Assigned=vm.allItemsSelected}),changedCheck()},vm.selectItem=function(scope){scope.spendingAccount.Assigned||(vm.allItemsSelected=!1),vm.selectedCount=_.where(vm.list.Items,{Assigned:!0}).length,changedCheck()},vm.resetAssignments=function(){vm.list=ocSpendingAccounts.Assignments.Map(CurrentAssignments,vm.list),vm.changedAssignments=[],selectedCheck()},vm.updateAssignments=function(){vm.searchLoading=ocSpendingAccounts.Assignments.Update(CurrentAssignments,vm.changedAssignments,$stateParams.buyerid).then(function(data){angular.forEach(data.Errors,function(ex){$exceptionHandler(ex)}),CurrentAssignments=data.UpdatedAssignments,changedCheck(),selectedCheck(),toastr.success("Spending account assignments updated.")})},vm.createSpendingAccount=function(){function _updateList(n){vm.list.Items.push(n),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(n.Name+" was created.")}ocSpendingAccounts.Create($stateParams.buyerid).then(function(newSpendingAccount){if($stateParams.usergroupid){var newAssignment={SpendingAccountID:newSpendingAccount.ID,UserGroupID:$stateParams.usergroupid};vm.searchLoading=OrderCloud.SpendingAccounts.SaveAssignment(newAssignment,$stateParams.buyerid).then(function(){newSpendingAccount.Assigned=!0,CurrentAssignments.push(newAssignment),_updateList(newSpendingAccount)})["catch"](function(){newSpendingAccount.Assigned=!1,_updateList(newSpendingAccount)})}else newSpendingAccount.Assigned=!1,_updateList(newSpendingAccount)})},vm.editSpendingAccount=function(scope){ocSpendingAccounts.Edit(scope.spendingAccount,$stateParams.buyerid).then(function(updatedSpendingAccount){updatedSpendingAccount.Assigned=vm.list.Items[scope.$index].Assigned,vm.list.Items[scope.$index]=updatedSpendingAccount,updatedSpendingAccount.ID!=scope.spendingAccount.ID&&(_.map(CurrentAssignments,function(assignment){return assignment.SpendingAccountID==scope.spendingAccount.ID&&(assignment.SpendingAccountID=updatedSpendingAccount.ID),assignment}),changedCheck()),toastr.success(updatedSpendingAccount.Name+" was updated.")})},vm.deleteSpendingAccount=function(scope){ocSpendingAccounts.Delete(scope.spendingAccount,$stateParams.buyerid).then(function(){toastr.success(scope.spendingAccount.Name+" was deleted."),vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,changedCheck()})}}SpendingAccountsController.$inject=["$exceptionHandler","$state","$stateParams","toastr","OrderCloud","ocParameters","ocSpendingAccounts","CurrentAssignments","SpendingAccountList","Parameters"],angular.module("orderCloud").controller("SpendingAccountsCtrl",SpendingAccountsController)}(),function(){"use strict";function SpendingAccountsConfig($stateProvider){$stateProvider.state("spendingAccounts",{parent:"buyer",templateUrl:"buyerManagement/spendingAccounts/templates/spendingAccounts.html",controller:"SpendingAccountsCtrl",controllerAs:"spendingAccounts",url:"/spending-accounts?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Buyer Spending Accounts"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$q","ocSpendingAccounts","$stateParams",function($q,ocSpendingAccounts,$stateParams){return ocSpendingAccounts.Assignments.Get("company",$stateParams.buyerid)}],SpendingAccountList:["OrderCloud","Parameters","CurrentAssignments","ocSpendingAccounts",function(OrderCloud,Parameters,CurrentAssignments,ocSpendingAccounts){var parameters=angular.copy(Parameters);return parameters.filters=angular.extend(parameters.filters||{},{RedemptionCode:"!*"}),OrderCloud.SpendingAccounts.List(parameters.search,parameters.page,parameters.pageSize,parameters.searchOn,parameters.sortBy,parameters.filters,parameters.buyerid).then(function(data){return ocSpendingAccounts.Assignments.Map(CurrentAssignments,data)})}]}}).state("userGroup.spendingAccounts",{templateUrl:"buyerManagement/spendingAccounts/templates/spendingAccounts.html",controller:"SpendingAccountsCtrl",controllerAs:"spendingAccounts",url:"/spending-accounts?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"User Group Spending Accounts"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$q","ocSpendingAccounts","$stateParams",function($q,ocSpendingAccounts,$stateParams){return ocSpendingAccounts.Assignments.Get("group",$stateParams.buyerid,$stateParams.usergroupid)}],SpendingAccountList:["OrderCloud","Parameters","CurrentAssignments","ocSpendingAccounts",function(OrderCloud,Parameters,CurrentAssignments,ocSpendingAccounts){var parameters=angular.copy(Parameters);return parameters.filters=angular.extend(parameters.filters||{},{RedemptionCode:"!*"}),OrderCloud.SpendingAccounts.List(parameters.search,parameters.page,parameters.pageSize,parameters.searchOn,parameters.sortBy,parameters.filters,parameters.buyerid).then(function(data){return ocSpendingAccounts.Assignments.Map(CurrentAssignments,data)})}]}})}SpendingAccountsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(SpendingAccountsConfig)}(),function(){"use strict";function SpendingAccountEditModalController($uibModalInstance,OrderCloud,SelectedSpendingAccount,SelectedBuyerID){var vm=this;vm.spendingAccount=angular.copy(SelectedSpendingAccount),vm.spendingAccountName=SelectedSpendingAccount.Name,vm.spendingAccount.StartDate&&(vm.spendingAccount.StartDate=new Date(vm.spendingAccount.StartDate)),vm.spendingAccount.EndDate&&(vm.spendingAccount.EndDate=new Date(vm.spendingAccount.EndDate)),vm.submit=function(){vm.loading=OrderCloud.SpendingAccounts.Update(SelectedSpendingAccount.ID,vm.spendingAccount,SelectedBuyerID).then(function(updatedSpendingAccount){$uibModalInstance.close(updatedSpendingAccount)})},vm.cancel=function(){$uibModalInstance.dismiss()}}SpendingAccountEditModalController.$inject=["$uibModalInstance","OrderCloud","SelectedSpendingAccount","SelectedBuyerID"],angular.module("orderCloud").controller("SpendingAccountEditModalCtrl",SpendingAccountEditModalController)}(),function(){"use strict";function SpendingAccountCreateModalController($uibModalInstance,OrderCloud,SelectedBuyerID){var vm=this;vm.spendingAccount={},vm.submit=function(){vm.loading=OrderCloud.SpendingAccounts.Create(vm.spendingAccount,SelectedBuyerID).then(function(newSpendingAccount){$uibModalInstance.close(newSpendingAccount)})},vm.cancel=function(){$uibModalInstance.dismiss()}}SpendingAccountCreateModalController.$inject=["$uibModalInstance","OrderCloud","SelectedBuyerID"],angular.module("orderCloud").controller("SpendingAccountCreateModalCtrl",SpendingAccountCreateModalController)}(),function(){"use strict";function OrderCloudApprovalRules($q,$uibModal,ocConfirm,OrderCloud){function _create(buyerid){return $uibModal.open({templateUrl:"buyerManagement/approvalRules/templates/approvalRuleCreate.modal.html",controller:"ApprovalRuleCreateModalCtrl",controllerAs:"approvalRuleCreateModal",resolve:{SelectedBuyerID:function(){return buyerid}}}).result}function _edit(approvalRule,buyerid){return $uibModal.open({templateUrl:"buyerManagement/approvalRules/templates/approvalRuleEdit.modal.html",controller:"ApprovalRuleEditModalCtrl",controllerAs:"approvalRuleEditModal",resolve:{SelectedBuyerID:function(){return buyerid},SelectedApprovalRule:function(){return approvalRule}}}).result}function _delete(approvalRule,buyerid){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+approvalRule.Name+"</b>?",confirmText:"Delete approval rule",type:"delete"}).then(function(){return OrderCloud.ApprovalRules.Delete(approvalRule.ID,buyerid)})}var service={Create:_create,Edit:_edit,Delete:_delete};return service}OrderCloudApprovalRules.$inject=["$q","$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocApprovalRules",OrderCloudApprovalRules)}(),function(){"use strict";function ApprovalRulesController($state,$stateParams,toastr,$ocMedia,OrderCloud,ocApprovalRules,ocParameters,ApprovalRuleList,Parameters){var vm=this;vm.list=ApprovalRuleList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.ApprovalRules.List(null,vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.list=data,vm.searchResults=vm.parameters.search.length>0})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.clearFilters=function(){vm.parameters.filters=null,vm.parameters.from=null,vm.parameters.to=null,$ocMedia("max-width:767px")?vm.parameters.sortBy=null:angular.noop(),vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.ApprovalRules.List(null,Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})},vm.editApprovalRule=function(scope){ocApprovalRules.Edit(scope.approvalRule,$stateParams.buyerid).then(function(updatedApprovalRule){vm.list.Items[scope.$index]=updatedApprovalRule,toastr.success(updatedApprovalRule.Name+" was updated.")})},vm.createApprovalRule=function(){ocApprovalRules.Create($stateParams.buyerid).then(function(newApprovalRule){vm.list.Items.push(newApprovalRule),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(newApprovalRule.Name+" was created.")})},vm.deleteApprovalRule=function(scope){ocApprovalRules.Delete(scope.approvalRule,$stateParams.buyerid).then(function(){toastr.success(scope.approvalRule.Name+" was deleted."),vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--})}}ApprovalRulesController.$inject=["$state","$stateParams","toastr","$ocMedia","OrderCloud","ocApprovalRules","ocParameters","ApprovalRuleList","Parameters"],angular.module("orderCloud").controller("ApprovalRulesCtrl",ApprovalRulesController)}(),function(){"use strict";function ApprovalRulesConfig($stateProvider){$stateProvider.state("approvalRules",{parent:"buyer",templateUrl:"buyerManagement/approvalRules/templates/approvalRules.html",controller:"ApprovalRulesCtrl",controllerAs:"approvalRules",url:"/approval-rules?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Buyer Approval Rules"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],ApprovalRuleList:["OrderCloud","Parameters",function(OrderCloud,Parameters){return OrderCloud.ApprovalRules.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid)}]}})}ApprovalRulesConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(ApprovalRulesConfig)}(),function(){"use strict";function ApprovalRuleEditModalController($exceptionHandler,$uibModalInstance,OrderCloud,SelectedApprovalRule,SelectedBuyerID){var vm=this;vm.approvalRule=angular.copy(SelectedApprovalRule),vm.approvalRuleName=SelectedApprovalRule.Name,vm.searchGroups=function(term){return OrderCloud.UserGroups.List(term,1,6,null,null,null,SelectedBuyerID).then(function(data){return data.Items})},vm.submit=function(){vm.loading={backdrop:!1},vm.loading.promise=OrderCloud.ApprovalRules.Update(SelectedApprovalRule.ID,vm.approvalRule,SelectedBuyerID).then(function(updatedApprovalRule){$uibModalInstance.close(updatedApprovalRule)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}ApprovalRuleEditModalController.$inject=["$exceptionHandler","$uibModalInstance","OrderCloud","SelectedApprovalRule","SelectedBuyerID"],angular.module("orderCloud").controller("ApprovalRuleEditModalCtrl",ApprovalRuleEditModalController)}(),function(){"use strict";function ApprovalRuleCreateModalController($exceptionHandler,$uibModalInstance,OrderCloud,SelectedBuyerID){var vm=this;vm.approvalRule={},vm.searchGroups=function(term){return OrderCloud.UserGroups.List(term,1,6,null,null,null,SelectedBuyerID).then(function(data){return data.Items})},vm.submit=function(){vm.loading={backdrop:!1},vm.loading.promise=OrderCloud.ApprovalRules.Create(vm.approvalRule,SelectedBuyerID).then(function(newApprovalRule){$uibModalInstance.close(newApprovalRule)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}ApprovalRuleCreateModalController.$inject=["$exceptionHandler","$uibModalInstance","OrderCloud","SelectedBuyerID"],angular.module("orderCloud").controller("ApprovalRuleCreateModalCtrl",ApprovalRuleCreateModalController)}(),function(){"use strict";function OrderCloudPromotions($q,$uibModal,ocConfirm,OrderCloud){function _create(buyerid){return $uibModal.open({templateUrl:"buyerManagement/promotions/templates/promotionCreate.modal.html",controller:"PromotionCreateModalCtrl",controllerAs:"promotionCreateModal",resolve:{SelectedBuyerID:function(){return buyerid}}}).result}function _edit(promotion,buyerid){return $uibModal.open({templateUrl:"buyerManagement/promotions/templates/promotionEdit.modal.html",controller:"PromotionEditModalCtrl",controllerAs:"promotionEditModal",bindToController:!0,resolve:{SelectedPromotion:function(){return promotion},SelectedBuyerID:function(){return buyerid}}}).result}function _delete(promotion,buyerid){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+(promotion.Name?promotion.Name:promotion.Code)+"</b>?",confirmText:"Delete promotion",type:"delete"}).then(function(){return OrderCloud.Promotions.Delete(promotion.ID,buyerid)})}function _getAssignments(level,buyerid,usergroupid){return OrderCloud.Promotions.ListAssignments(null,null,usergroupid,level,null,100,buyerid).then(function(data1){for(var df=$q.defer(),queue=[],totalPages=angular.copy(data1.Meta.TotalPages),currentPage=angular.copy(data1.Meta.Page);totalPages>=currentPage;)currentPage++,queue.push(OrderCloud.Promotions.ListAssignments(null,null,usergroupid,level,currentPage,100,buyerid));return $q.all(queue).then(function(results){angular.forEach(results,function(r){data1.Items=data1.Items.concat(r.Items)}),df.resolve(data1.Items)}),df.promise})}function _mapAssignments(allAssignments,promotionList,buyerID){return promotionList.Items=_.map(promotionList.Items,function(promotion){return promotion.Assigned=!1,angular.forEach(allAssignments,function(assignment){promotion.ID==assignment.PromotionID&&buyerID==assignment.BuyerID&&(promotion.Assigned=!0)}),promotion}),promotionList}function _compareAssignments(allAssignments,promotionList,userGroupID,buyerID){var changedAssignments=[];return angular.forEach(promotionList.Items,function(promotion){var existingAssignment=_.where(allAssignments,{PromotionID:promotion.ID,BuyerID:buyerID})[0];existingAssignment&&!promotion.Assigned?changedAssignments.push({old:existingAssignment,"new":null}):!existingAssignment&&promotion.Assigned&&changedAssignments.push({old:null,"new":{BuyerID:buyerID,UserGroupID:userGroupID,PromotionID:promotion.ID}})}),changedAssignments}function _updateAssignments(allAssignments,changedAssignments){var df=$q.defer(),assignmentQueue=[],errors=[];return angular.forEach(changedAssignments,function(diff){!diff.old&&diff["new"]?assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.Promotions.SaveAssignment(diff["new"]).then(function(){allAssignments.push(diff["new"]),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}()):diff.old&&!diff["new"]&&assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.Promotions.DeleteAssignment(diff.old.PromotionID,null,diff.old.UserGroupID,diff.old.BuyerID).then(function(){allAssignments.splice(allAssignments.indexOf(diff.old),1),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}())}),$q.all(assignmentQueue).then(function(){df.resolve({UpdatedAssignments:allAssignments,Errors:errors})}),df.promise}var service={Create:_create,Edit:_edit,Delete:_delete,Assignments:{Get:_getAssignments,Map:_mapAssignments,Compare:_compareAssignments,Update:_updateAssignments}};return service}OrderCloudPromotions.$inject=["$q","$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocPromotions",OrderCloudPromotions)}(),function(){"use strict";function PromotionsController($exceptionHandler,$state,$stateParams,toastr,OrderCloud,ocParameters,ocPromotions,CurrentAssignments,PromotionList,Parameters){function selectedCheck(){vm.allItemsSelected=_.where(vm.list.Items,{Assigned:!0}).length==vm.list.Items.length}function changedCheck(){vm.changedAssignments=ocPromotions.Assignments.Compare(CurrentAssignments,vm.list,$stateParams.usergroupid,$stateParams.buyerid)}var vm=this;vm.list=PromotionList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.userGroupID=$stateParams.usergroupid,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.Promotions.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.changedAssignments=[],vm.list=ocPromotions.Assignments.Map(CurrentAssignments,data),vm.searchResults=vm.parameters.search.length>0,selectedCheck()})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.Promotions.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){var mappedData=ocPromotions.Assignments.Map(CurrentAssignments,data,$stateParams.buyerid);vm.list.Items=vm.list.Items.concat(mappedData.Items),vm.list.Meta=mappedData.Meta,selectedCheck()})},selectedCheck(),vm.selectAllItems=function(){vm.allItemsSelected=!vm.allItemsSelected,_.map(vm.list.Items,function(i){i.Assigned=vm.allItemsSelected}),changedCheck()},vm.selectItem=function(scope){scope.promotion.Assigned||(vm.allItemsSelected=!1),vm.selectedCount=_.where(vm.list.Items,{Assigned:!0}).length,changedCheck()},vm.resetAssignments=function(){
vm.list=ocPromotions.Assignments.Map(CurrentAssignments,vm.list,$stateParams.buyerid),vm.changedAssignments=[],selectedCheck()},vm.updateAssignments=function(){vm.searchLoading=ocPromotions.Assignments.Update(CurrentAssignments,vm.changedAssignments).then(function(data){angular.forEach(data.Errors,function(ex){$exceptionHandler(ex)}),CurrentAssignments=data.UpdatedAssignments,changedCheck(),selectedCheck(),toastr.success("Promotion assignments updated.")})},vm.createPromotion=function(){function _updateList(n){vm.list.Items.push(n),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(n.Code+" was created.")}ocPromotions.Create($stateParams.buyerid).then(function(newPromotion){if($stateParams.usergroupid){var newAssignment={BuyerID:$stateParams.buyerid,PromotionID:newPromotion.ID,UserGroupID:$stateParams.usergroupid};vm.searchLoading=OrderCloud.Promotions.SaveAssignment(newAssignment).then(function(){newPromotion.Assigned=!0,CurrentAssignments.push(newAssignment),_updateList(newPromotion)})["catch"](function(){newPromotion.Assigned=!1,_updateList(newPromotion)})}else newPromotion.Assigned=!1,_updateList(newPromotion)})},vm.editPromotion=function(scope){ocPromotions.Edit(scope.promotion,$stateParams.buyerid).then(function(updatedPromotion){updatedPromotion.Assigned=vm.list.Items[scope.$index].Assigned,vm.list.Items[scope.$index]=updatedPromotion,updatedPromotion.ID!=scope.promotion.ID&&(_.map(CurrentAssignments,function(assignment){return assignment.PromotionID==scope.promotion.ID&&(assignment.PromotionID=updatedPromotion.ID),assignment}),changedCheck()),toastr.success(updatedPromotion.Code+" was updated.")})},vm.deletePromotion=function(scope){ocPromotions.Delete(scope.promotion,$stateParams.buyerid).then(function(){toastr.success(scope.promotion.Code+" was deleted."),vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,changedCheck()})}}PromotionsController.$inject=["$exceptionHandler","$state","$stateParams","toastr","OrderCloud","ocParameters","ocPromotions","CurrentAssignments","PromotionList","Parameters"],angular.module("orderCloud").controller("PromotionsCtrl",PromotionsController)}(),function(){"use strict";function PromotionsConfig($stateProvider){$stateProvider.state("promotions",{parent:"buyer",templateUrl:"buyerManagement/promotions/templates/promotions.html",controller:"PromotionsCtrl",controllerAs:"promotions",url:"/promotions?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Buyer Promotions"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$q","ocPromotions","$stateParams",function($q,ocPromotions,$stateParams){return ocPromotions.Assignments.Get("company",$stateParams.buyerid)}],PromotionList:["OrderCloud","Parameters","CurrentAssignments","ocPromotions",function(OrderCloud,Parameters,CurrentAssignments,ocPromotions){return OrderCloud.Promotions.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters).then(function(data){return ocPromotions.Assignments.Map(CurrentAssignments,data,Parameters.buyerid)})}]}}).state("userGroup.promotions",{templateUrl:"buyerManagement/promotions/templates/promotions.html",controller:"PromotionsCtrl",controllerAs:"promotions",url:"/promotions?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"User Group Promotions"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$q","ocPromotions","$stateParams",function($q,ocPromotions,$stateParams){return ocPromotions.Assignments.Get("group",$stateParams.buyerid,$stateParams.usergroupid)}],PromotionList:["OrderCloud","Parameters","CurrentAssignments","ocPromotions",function(OrderCloud,Parameters,CurrentAssignments,ocPromotions){return OrderCloud.Promotions.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters).then(function(data){return ocPromotions.Assignments.Map(CurrentAssignments,data,Parameters.buyerid)})}]}})}PromotionsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(PromotionsConfig)}(),function(){"use strict";function PromotionEditModalController($uibModalInstance,OrderCloud,SelectedPromotion,SelectedBuyerID){var vm=this;vm.promotion=angular.copy(SelectedPromotion),vm.promotionName=SelectedPromotion.Name?SelectedPromotion.Name:SelectedPromotion.Code,vm.promotion.StartDate&&(vm.promotion.StartDate=new Date(vm.promotion.StartDate)),vm.promotion.ExpirationDate&&(vm.promotion.ExpirationDate=new Date(vm.promotion.ExpirationDate)),vm.submit=function(){vm.loading=OrderCloud.Promotions.Update(SelectedPromotion.ID,vm.promotion,SelectedBuyerID).then(function(updatedPromotion){$uibModalInstance.close(updatedPromotion)})},vm.cancel=function(){$uibModalInstance.dismiss()}}PromotionEditModalController.$inject=["$uibModalInstance","OrderCloud","SelectedPromotion","SelectedBuyerID"],angular.module("orderCloud").controller("PromotionEditModalCtrl",PromotionEditModalController)}(),function(){"use strict";function PromotionCreateModalController($uibModalInstance,OrderCloud,SelectedBuyerID){var vm=this;vm.promotion={},vm.submit=function(){vm.loading=OrderCloud.Promotions.Create(vm.promotion,SelectedBuyerID).then(function(newPromotion){$uibModalInstance.close(newPromotion)})},vm.cancel=function(){$uibModalInstance.dismiss()}}PromotionCreateModalController.$inject=["$uibModalInstance","OrderCloud","SelectedBuyerID"],angular.module("orderCloud").controller("PromotionCreateModalCtrl",PromotionCreateModalController)}(),function(){"use strict";function OrderCloudCreditCards($q,$uibModal,ocConfirm,OrderCloud,ocAuthNet){function _create(buyerID){return $uibModal.open({templateUrl:"buyerManagement/creditCards/templates/creditCardCreate.modal.html",controller:"CreditCardCreateModalCtrl",controllerAs:"creditCardCreateModal",resolve:{SelectedBuyerID:function(){return buyerID}}}).result}function _edit(creditCard,buyerid){return $uibModal.open({templateUrl:"buyerManagement/creditCards/templates/creditCardEdit.modal.html",controller:"CreditCardEditModalCtrl",controllerAs:"creditCardEditModal",bindToController:!0,resolve:{SelectedCreditCard:function(){return creditCard},SelectedBuyerID:function(){return buyerid}}}).result}function _delete(creditCard,buyerid){return creditCard.Shared=!0,ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>xxxx-xxxx-xxxx-"+creditCard.PartialAccountNumber+"</b>?",confirmText:"Delete admin user group",type:"delete"}).then(function(){return ocAuthNet.DeleteCreditCard(creditCard,buyerid)})}function _getAssignments(level,buyerid,usergroupid){return OrderCloud.CreditCards.ListAssignments(null,null,usergroupid,level,null,100,buyerid).then(function(data1){for(var df=$q.defer(),queue=[],totalPages=angular.copy(data1.Meta.TotalPages),currentPage=angular.copy(data1.Meta.Page);totalPages>=currentPage;)currentPage++,queue.push(OrderCloud.CreditCards.ListAssignments(null,null,usergroupid,level,currentPage,100,buyerid));return $q.all(queue).then(function(results){angular.forEach(results,function(r){data1.Items=data1.Items.concat(r.Items)}),df.resolve(data1.Items)}),df.promise})}function _mapAssignments(allAssignments,creditCardList){return creditCardList.Items=_.map(creditCardList.Items,function(creditCard){return creditCard.Assigned=!1,angular.forEach(allAssignments,function(assignment){creditCard.ID==assignment.CreditCardID&&(creditCard.Assigned=!0)}),creditCard}),creditCardList}function _compareAssignments(allAssignments,creditCardList,userGroupID){var changedAssignments=[];return angular.forEach(creditCardList.Items,function(creditCard){var existingAssignment=_.where(allAssignments,{CreditCardID:creditCard.ID})[0];existingAssignment&&!creditCard.Assigned?changedAssignments.push({old:existingAssignment,"new":null}):!existingAssignment&&creditCard.Assigned&&changedAssignments.push({old:null,"new":{UserGroupID:userGroupID,CreditCardID:creditCard.ID}})}),changedAssignments}function _updateAssignments(allAssignments,changedAssignments,buyerid){var df=$q.defer(),assignmentQueue=[],errors=[];return angular.forEach(changedAssignments,function(diff){!diff.old&&diff["new"]?assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.CreditCards.SaveAssignment(diff["new"],buyerid).then(function(){allAssignments.push(diff["new"]),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}()):diff.old&&!diff["new"]&&assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.CreditCards.DeleteAssignment(diff.old.CreditCardID,null,diff.old.UserGroupID,buyerid).then(function(){allAssignments.splice(allAssignments.indexOf(diff.old),1),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}())}),$q.all(assignmentQueue).then(function(){df.resolve({UpdatedAssignments:allAssignments,Errors:errors})}),df.promise}var service={Create:_create,Edit:_edit,Delete:_delete,Assignments:{Get:_getAssignments,Map:_mapAssignments,Compare:_compareAssignments,Update:_updateAssignments}};return service}OrderCloudCreditCards.$inject=["$q","$uibModal","ocConfirm","OrderCloud","ocAuthNet"],angular.module("orderCloud").factory("ocCreditCards",OrderCloudCreditCards)}(),function(){"use strict";function CreditCardsController($state,$stateParams,$exceptionHandler,toastr,OrderCloud,ocParameters,ocCreditCards,CreditCardList,CurrentAssignments,Parameters){function selectedCheck(){vm.allItemsSelected=_.where(vm.list.Items,{Assigned:!0}).length==vm.list.Items.length}function changedCheck(){vm.changedAssignments=ocCreditCards.Assignments.Compare(CurrentAssignments,vm.list,$stateParams.usergroupid)}var vm=this;vm.list=CreditCardList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.userGroupID=$stateParams.usergroupid,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.CreditCards.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.changedAssignments=[],vm.list=ocCreditCards.Assignments.Map(CurrentAssignments,data),vm.searchResults=vm.parameters.search.length>0,selectedCheck()})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.CreditCards.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){var mappedData=ocCreditCards.Assignments.Map(CurrentAssignments,data);vm.list.Items=vm.list.Items.concat(mappedData.Items),vm.list.Meta=mappedData.Meta,selectedCheck()})},selectedCheck(),vm.selectAllItems=function(){vm.allItemsSelected=!vm.allItemsSelected,_.map(vm.list.Items,function(i){i.Assigned=vm.allItemsSelected}),changedCheck()},vm.selectItem=function(scope){scope.creditCard.Assigned||(vm.allItemsSelected=!1),vm.selectedCount=_.where(vm.list.Items,{Assigned:!0}).length,changedCheck()},vm.resetAssignments=function(){vm.list=ocCreditCards.Assignments.Map(CurrentAssignments,vm.list),vm.changedAssignments=[],selectedCheck()},vm.updateAssignments=function(){vm.searchLoading=ocCreditCards.Assignments.Update(CurrentAssignments,vm.changedAssignments,$stateParams.buyerid).then(function(data){angular.forEach(data.Errors,function(ex){$exceptionHandler(ex)}),CurrentAssignments=data.UpdatedAssignments,changedCheck(),selectedCheck(),toastr.success("Credit card assignments updated.")})},vm.createCreditCard=function(){function _updateList(n){vm.list.Items.push(n),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success("Credit card ending in "+n.PartialAccountNumber+" was created.")}ocCreditCards.Create($stateParams.buyerid).then(function(creditCard){if($stateParams.usergroupid){var newAssignment={CreditCardID:creditCard.ID,UserGroupID:$stateParams.usergroupid};vm.searchLoading=OrderCloud.CreditCards.SaveAssignment(newAssignment,$stateParams.buyerid).then(function(){creditCard.Assigned=!0,CurrentAssignments.push(newAssignment),_updateList(creditCard)})["catch"](function(){creditCard.Assigned=!1,_updateList(creditCard)})}else creditCard.Assigned=!1,_updateList(creditCard)})},vm.editCreditCard=function(scope){ocCreditCards.Edit(scope.creditCard,$stateParams.buyerid).then(function(updatedCreditCard){updatedCreditCard.Assigned=vm.list.Items[scope.$index].Assigned,vm.list.Items[scope.$index]=updatedCreditCard,updatedCreditCard.ID!=scope.creditCard.ID&&(_.map(CurrentAssignments,function(assignment){return assignment.CreditCardID==scope.creditCard.ID&&(assignment.CreditCardID=updatedCreditCard.ID),assignment}),changedCheck()),toastr.success("Credit card ending in "+updatedCreditCard.PartialAccountNumber+" was updated.")})},vm.deleteCreditCard=function(scope){ocCreditCards.Delete(scope.creditCard,$stateParams.buyerid).then(function(){toastr.success("Credit card ending in "+scope.creditCard.PartialAccountNumber+" was deleted."),vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,changedCheck()})}}CreditCardsController.$inject=["$state","$stateParams","$exceptionHandler","toastr","OrderCloud","ocParameters","ocCreditCards","CreditCardList","CurrentAssignments","Parameters"],angular.module("orderCloud").controller("CreditCardsCtrl",CreditCardsController)}(),function(){"use strict";function CreditCardsConfig($stateProvider){$stateProvider.state("creditCards",{parent:"buyer",templateUrl:"buyerManagement/creditCards/templates/creditCards.html",controller:"CreditCardsCtrl",controllerAs:"creditCards",url:"/credit-cards?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Buyer Credit Cards"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["ocCreditCards","$stateParams",function(ocCreditCards,$stateParams){return ocCreditCards.Assignments.Get("company",$stateParams.buyerid)}],CreditCardList:["OrderCloud","Parameters","CurrentAssignments","ocCreditCards",function(OrderCloud,Parameters,CurrentAssignments,ocCreditCards){return OrderCloud.CreditCards.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){return ocCreditCards.Assignments.Map(CurrentAssignments,data)})}]}}).state("userGroup.creditCards",{templateUrl:"buyerManagement/creditCards/templates/creditCards.html",controller:"CreditCardsCtrl",controllerAs:"creditCards",url:"/credit-cards?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"User Group Credit Cards"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$q","ocCreditCards","$stateParams",function($q,ocCreditCards,$stateParams){return ocCreditCards.Assignments.Get("group",$stateParams.buyerid,$stateParams.usergroupid)}],CreditCardList:["OrderCloud","Parameters","CurrentAssignments","ocCreditCards",function(OrderCloud,Parameters,CurrentAssignments,ocCreditCards){return OrderCloud.CreditCards.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){return ocCreditCards.Assignments.Map(CurrentAssignments,data)})}]}})}CreditCardsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(CreditCardsConfig)}(),function(){"use strict";function CreditCardEditModalController($uibModalInstance,$filter,ocAuthNet,ocCreditCardUtility,SelectedCreditCard,SelectedBuyerID){var vm=this;vm.creditCard=angular.copy(SelectedCreditCard),vm.creditCard.UpdatedCreditCardID=angular.copy(SelectedCreditCard.ID),vm.creditCardInfo=ocCreditCardUtility,vm.creditCard.ExpirationMonth=$filter("date")(vm.creditCard.ExpirationDate,"MM"),vm.creditCard.ExpirationYear=+$filter("date")(vm.creditCard.ExpirationDate,"yyyy"),-1==vm.creditCardInfo.ExpirationYears.indexOf(vm.creditCard.ExpirationYear)&&vm.creditCardInfo.ExpirationYears.unshift(vm.creditCard.ExpirationYear),vm.submit=function(){vm.creditCard.Shared=!0,vm.creditCard.CardNumber=vm.creditCard.PartialAccountNumber,vm.loading=ocAuthNet.UpdateCreditCard(vm.creditCard,SelectedBuyerID).then(function(creditCard){$uibModalInstance.close(creditCard)})["catch"](function(ex){$uibModalInstance.dismiss(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}CreditCardEditModalController.$inject=["$uibModalInstance","$filter","ocAuthNet","ocCreditCardUtility","SelectedCreditCard","SelectedBuyerID"],angular.module("orderCloud").controller("CreditCardEditModalCtrl",CreditCardEditModalController)}(),function(){"use strict";function CreditCardCreateModalController($uibModalInstance,ocAuthNet,ocCreditCardUtility,SelectedBuyerID){var vm=this;vm.creditCardInfo=ocCreditCardUtility,vm.submit=function(){vm.creditCard.Shared=!0,vm.loading=ocAuthNet.CreateCreditCard(vm.creditCard,SelectedBuyerID).then(function(creditCard){$uibModalInstance.close(creditCard)})["catch"](function(ex){$uibModalInstance.dismiss(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}CreditCardCreateModalController.$inject=["$uibModalInstance","ocAuthNet","ocCreditCardUtility","SelectedBuyerID"],angular.module("orderCloud").controller("CreditCardCreateModalCtrl",CreditCardCreateModalController)}(),function(){"use strict";function OrderCloudCostCenters($q,$uibModal,ocConfirm,OrderCloud){function _create(buyerid){return $uibModal.open({templateUrl:"buyerManagement/costCenters/templates/costCenterCreate.modal.html",controller:"CostCenterCreateModalCtrl",controllerAs:"costCenterCreateModal",resolve:{SelectedBuyerID:function(){return buyerid}}}).result}function _edit(costCenter,buyerid){return $uibModal.open({templateUrl:"buyerManagement/costCenters/templates/costCenterEdit.modal.html",controller:"CostCenterEditModalCtrl",controllerAs:"costCenterEditModal",bindToController:!0,resolve:{SelectedCostCenter:function(){return costCenter},SelectedBuyerID:function(){return buyerid}}}).result}function _delete(costCenter,buyerid){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+costCenter.Name+"</b>?",confirmText:"Delete cost center",type:"delete"}).then(function(){return OrderCloud.CostCenters.Delete(costCenter.ID,buyerid)})}function _getAssignments(level,buyerid,usergroupid){return OrderCloud.CostCenters.ListAssignments(null,null,usergroupid,level,null,100,buyerid).then(function(data1){for(var df=$q.defer(),queue=[],totalPages=angular.copy(data1.Meta.TotalPages),currentPage=angular.copy(data1.Meta.Page);totalPages>=currentPage;)currentPage++,queue.push(OrderCloud.CostCenters.ListAssignments(null,null,usergroupid,level,currentPage,100,buyerid));return $q.all(queue).then(function(results){angular.forEach(results,function(r){data1.Items=data1.Items.concat(r.Items)}),df.resolve(data1.Items)}),df.promise})}function _mapAssignments(allAssignments,costCenterList){return costCenterList.Items=_.map(costCenterList.Items,function(costCenter){return costCenter.Assigned=!1,angular.forEach(allAssignments,function(assignment){costCenter.ID==assignment.CostCenterID&&(costCenter.Assigned=!0)}),costCenter}),costCenterList}function _compareAssignments(allAssignments,costCenterList,userGroupID){var changedAssignments=[];return angular.forEach(costCenterList.Items,function(costCenter){var existingAssignment=_.where(allAssignments,{CostCenterID:costCenter.ID})[0];existingAssignment&&!costCenter.Assigned?changedAssignments.push({old:existingAssignment,"new":null}):!existingAssignment&&costCenter.Assigned&&changedAssignments.push({old:null,"new":{UserGroupID:userGroupID,CostCenterID:costCenter.ID}})}),changedAssignments}function _updateAssignments(allAssignments,changedAssignments,buyerid){var df=$q.defer(),assignmentQueue=[],errors=[];return angular.forEach(changedAssignments,function(diff){!diff.old&&diff["new"]?assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.CostCenters.SaveAssignment(diff["new"],buyerid).then(function(){allAssignments.push(diff["new"]),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}()):diff.old&&!diff["new"]&&assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.CostCenters.DeleteAssignment(diff.old.CostCenterID,null,diff.old.UserGroupID,buyerid).then(function(){allAssignments.splice(allAssignments.indexOf(diff.old),1),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}())}),$q.all(assignmentQueue).then(function(){df.resolve({UpdatedAssignments:allAssignments,Errors:errors})}),df.promise}var service={Create:_create,Edit:_edit,Delete:_delete,Assignments:{Get:_getAssignments,Map:_mapAssignments,Compare:_compareAssignments,Update:_updateAssignments}};return service}OrderCloudCostCenters.$inject=["$q","$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocCostCenters",OrderCloudCostCenters)}(),function(){"use strict";function CostCentersController($exceptionHandler,$state,$stateParams,toastr,OrderCloud,ocParameters,ocCostCenters,CurrentAssignments,CostCentersList,Parameters){function selectedCheck(){vm.allItemsSelected=_.where(vm.list.Items,{Assigned:!0}).length==vm.list.Items.length}function changedCheck(){vm.changedAssignments=ocCostCenters.Assignments.Compare(CurrentAssignments,vm.list,$stateParams.usergroupid)}var vm=this;vm.list=CostCentersList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.userGroupID=$stateParams.usergroupid,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.CostCenters.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.changedAssignments=[],vm.list=ocCostCenters.Assignments.Map(CurrentAssignments,data),vm.searchResults=vm.parameters.search.length>0,selectedCheck()})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.CostCenters.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){var mappedData=ocCostCenters.Assignments.Map(CurrentAssignments,data);vm.list.Items=vm.list.Items.concat(mappedData.Items),vm.list.Meta=mappedData.Meta,selectedCheck()})},selectedCheck(),vm.selectAllItems=function(){vm.allItemsSelected=!vm.allItemsSelected,_.map(vm.list.Items,function(i){i.Assigned=vm.allItemsSelected}),changedCheck()},vm.selectItem=function(scope){scope.costCenter.Assigned||(vm.allItemsSelected=!1),vm.selectedCount=_.where(vm.list.Items,{Assigned:!0}).length,changedCheck()},vm.resetAssignments=function(){vm.list=ocCostCenters.Assignments.Map(CurrentAssignments,vm.list),vm.changedAssignments=[],selectedCheck()},vm.updateAssignments=function(){vm.searchLoading=ocCostCenters.Assignments.Update(CurrentAssignments,vm.changedAssignments,$stateParams.buyerid).then(function(data){angular.forEach(data.Errors,function(ex){$exceptionHandler(ex)}),CurrentAssignments=data.UpdatedAssignments,changedCheck(),selectedCheck(),toastr.success("Cost center assignments updated.")})},vm.createCostCenter=function(){function _updateList(n){vm.list.Items.push(n),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(n.Name+" was created.")}ocCostCenters.Create($stateParams.buyerid).then(function(newCostCenter){if($stateParams.usergroupid){var newAssignment={CostCenterID:newCostCenter.ID,UserGroupID:$stateParams.usergroupid};vm.searchLoading=OrderCloud.CostCenters.SaveAssignment(newAssignment,$stateParams.buyerid).then(function(){newCostCenter.Assigned=!0,CurrentAssignments.push(newAssignment),_updateList(newCostCenter)})["catch"](function(){newCostCenter.Assigned=!1,_updateList(newCostCenter)})}else newCostCenter.Assigned=!1,_updateList(newCostCenter)})},vm.editCostCenter=function(scope){ocCostCenters.Edit(scope.costCenter,$stateParams.buyerid).then(function(updatedCostCenter){updatedCostCenter.Assigned=vm.list.Items[scope.$index].Assigned,vm.list.Items[scope.$index]=updatedCostCenter,updatedCostCenter.ID!=scope.costCenter.ID&&(_.map(CurrentAssignments,function(assignment){return assignment.CostCenterID==scope.costCenter.ID&&(assignment.CostCenterID=updatedCostCenter.ID),assignment}),changedCheck()),toastr.success(updatedCostCenter.Name+" was updated.")})},vm.deleteCostCenter=function(scope){ocCostCenters.Delete(scope.costCenter,$stateParams.buyerid).then(function(){toastr.success(scope.costCenter.Name+" was deleted."),vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,changedCheck()})}}CostCentersController.$inject=["$exceptionHandler","$state","$stateParams","toastr","OrderCloud","ocParameters","ocCostCenters","CurrentAssignments","CostCentersList","Parameters"],angular.module("orderCloud").controller("CostCentersCtrl",CostCentersController)}(),function(){"use strict";function CostCentersConfig($stateProvider){$stateProvider.state("costCenters",{parent:"buyer",templateUrl:"buyerManagement/costCenters/templates/costCenters.html",controller:"CostCentersCtrl",controllerAs:"costCenters",url:"/costcenters?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Buyer Cost Centers"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$q","ocCostCenters","$stateParams",function($q,ocCostCenters,$stateParams){return ocCostCenters.Assignments.Get("company",$stateParams.buyerid)}],CostCentersList:["OrderCloud","ocCostCenters","Parameters","CurrentAssignments",function(OrderCloud,ocCostCenters,Parameters,CurrentAssignments){return OrderCloud.CostCenters.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){return ocCostCenters.Assignments.Map(CurrentAssignments,data)})}]}}).state("userGroup.costCenters",{templateUrl:"buyerManagement/costCenters/templates/costCenters.html",controller:"CostCentersCtrl",controllerAs:"costCenters",url:"/costcenters?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"User Group Cost Centers"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$q","ocCostCenters","$stateParams",function($q,ocCostCenters,$stateParams){return ocCostCenters.Assignments.Get("group",$stateParams.buyerid,$stateParams.usergroupid)}],CostCentersList:["OrderCloud","ocCostCenters","Parameters","CurrentAssignments",function(OrderCloud,ocCostCenters,Parameters,CurrentAssignments){return OrderCloud.CostCenters.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){return ocCostCenters.Assignments.Map(CurrentAssignments,data)})}]}})}CostCentersConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(CostCentersConfig)}(),function(){"use strict";function CostCenterEditModalController($uibModalInstance,OrderCloud,SelectedCostCenter,SelectedBuyerID){var vm=this;vm.costCenter=angular.copy(SelectedCostCenter),vm.costCenterName=SelectedCostCenter.Name,vm.submit=function(){vm.loading=OrderCloud.CostCenters.Update(SelectedCostCenter.ID,vm.costCenter,SelectedBuyerID).then(function(updatedCostCenter){$uibModalInstance.close(updatedCostCenter)})},vm.cancel=function(){$uibModalInstance.dismiss()}}CostCenterEditModalController.$inject=["$uibModalInstance","OrderCloud","SelectedCostCenter","SelectedBuyerID"],angular.module("orderCloud").controller("CostCenterEditModalCtrl",CostCenterEditModalController)}(),function(){"use strict";function CostCenterCreateModalController($uibModalInstance,OrderCloud,SelectedBuyerID){var vm=this;vm.costCenter={},vm.submit=function(){vm.loading=OrderCloud.CostCenters.Create(vm.costCenter,SelectedBuyerID).then(function(newCostCenter){$uibModalInstance.close(newCostCenter)})},vm.cancel=function(){$uibModalInstance.dismiss()}}CostCenterCreateModalController.$inject=["$uibModalInstance","OrderCloud","SelectedBuyerID"],angular.module("orderCloud").controller("CostCenterCreateModalCtrl",CostCenterCreateModalController)}(),function(){"use strict";function BuyersService($uibModal,ocConfirm,OrderCloud){function _create(){return $uibModal.open({templateUrl:"buyerManagement/buyers/templates/buyerCreate.modal.html",controller:"BuyerCreateModalCtrl",controllerAs:"buyerCreateModal",bindToController:!0}).result}function _delete(buyer){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+buyer.Name+"</b>? <br><br> This will delete all of the buyer's data.",confirmText:"Delete buyer organization",type:"delete"}).then(function(){return OrderCloud.Buyers.Delete(buyer.ID)})}var service={Create:_create,Delete:_delete};return service}BuyersService.$inject=["$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocBuyers",BuyersService)}(),function(){"use strict";function BuyersController($exceptionHandler,$state,toastr,ocBuyers,OrderCloud,ocParameters,Parameters,BuyerList){var vm=this;vm.list=BuyerList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.Buyers.List(vm.parameters.search,1,vm.parameters.pageSize).then(function(data){vm.list=data,vm.searchResults=vm.parameters.search.length>0})},vm.clearSearch=function(){vm.searchResults=!1,vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.Buyers.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})},vm.createBuyer=function(){ocBuyers.Create().then(function(data){toastr.success(data.Name+" was created."),$state.go("buyer",{buyerid:data.ID})})},vm.deleteBuyer=function(scope){ocBuyers.Delete(scope.buyer).then(function(){
vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,toastr.success(scope.buyer.Name+" was deleted.")})["catch"](function(ex){$exceptionHandler(ex)})}}BuyersController.$inject=["$exceptionHandler","$state","toastr","ocBuyers","OrderCloud","ocParameters","Parameters","BuyerList"],angular.module("orderCloud").controller("BuyersCtrl",BuyersController)}(),function(){"use strict";function BuyersConfig($stateProvider){$stateProvider.state("buyers",{parent:"base",url:"/buyers?search&page&pageSize&searchOn&sortBy&filters",templateUrl:"buyerManagement/buyers/templates/buyers.html",controller:"BuyersCtrl",controllerAs:"buyers",data:{pageTitle:"Buyer Organizations"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],BuyerList:["OrderCloud","Parameters",function(OrderCloud,Parameters){return OrderCloud.Buyers.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters)}]}})}BuyersConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(BuyersConfig)}(),function(){"use strict";function BuyerCreateModalController($uibModalInstance,$exceptionHandler,OrderCloud){function updateValidity(){vm.form.ID.$error["Buyer.UnavailableID"]&&vm.form.ID.$setValidity("Buyer.UnavailableID",!0)}function submit(){vm.loading=OrderCloud.Buyers.Create(vm.buyer).then(function(data){$uibModalInstance.close(data)})["catch"](function(ex){409==ex.status?(vm.form.ID.$setValidity("Buyer.UnavailableID",!1),vm.form.ID.$$element[0].focus()):$exceptionHandler(ex)})}function cancel(){$uibModalInstance.dismiss()}var vm=this;vm.submit=submit,vm.cancel=cancel,vm.updateValidity=updateValidity}BuyerCreateModalController.$inject=["$uibModalInstance","$exceptionHandler","OrderCloud"],angular.module("orderCloud").controller("BuyerCreateModalCtrl",BuyerCreateModalController)}(),function(){"use strict";function BuyerController($state,$exceptionHandler,toastr,OrderCloud,ocBuyers,SelectedBuyer){var vm=this;vm.selectedBuyer=SelectedBuyer,vm.settings=angular.copy(SelectedBuyer),vm.updateValidity=function(){vm.settingsForm.buyerIDinput.$error["Buyer.UnavailableID"]&&vm.settingsForm.buyerIDinput.$setValidity("Buyer.UnavailableID",!0)},vm.updateBuyer=function(){vm.updateLoading=OrderCloud.Buyers.Update(vm.settings,SelectedBuyer.ID).then(function(data){vm.selectedBuyer=data,vm.settings=angular.copy(data),toastr.success(data.Name+" was updated"),vm.settingsForm.$setPristine()})["catch"](function(ex){409==ex.status?(vm.settingsForm.buyerIDinput.$setValidity(ex.data.Errors[0].ErrorCode,!1),vm.settingsForm.buyerIDinput.$$element[0].focus()):$exceptionHandler(ex)})},vm.deleteBuyer=function(){ocBuyers.Delete(vm.selectedBuyer).then(function(){toastr.success(vm.selectedBuyer.Name+" was deleted."),$state.go("buyers")})},vm.createBuyer=function(){ocBuyers.Create().then(function(data){toastr.success(data.Name+" was created."),$state.go("buyer.settings",{buyerid:data.ID})})}}BuyerController.$inject=["$state","$exceptionHandler","toastr","OrderCloud","ocBuyers","SelectedBuyer"],angular.module("orderCloud").controller("BuyerCtrl",BuyerController)}(),function(){"use strict";function BuyerConfig($stateProvider){$stateProvider.state("buyer",{parent:"base",url:"/buyers/:buyerid",templateUrl:"buyerManagement/buyer/templates/buyer.html",controller:"BuyerCtrl",controllerAs:"buyer",data:{pageTitle:"Buyer Settings"},resolve:{SelectedBuyer:["$stateParams","OrderCloud",function($stateParams,OrderCloud){return OrderCloud.Buyers.Get($stateParams.buyerid)}]}})}BuyerConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(BuyerConfig)}(),function(){"use strict";function OrderCloudAddresses($q,$uibModal,ocConfirm,OrderCloud){function _create(buyerid){return $uibModal.open({templateUrl:"buyerManagement/addresses/templates/addressCreate.modal.html",controller:"AddressCreateModalCtrl",controllerAs:"addressCreateModal",resolve:{SelectedBuyerID:function(){return buyerid}}}).result}function _edit(address,buyerid){return $uibModal.open({templateUrl:"buyerManagement/addresses/templates/addressEdit.modal.html",controller:"AddressEditModalCtrl",controllerAs:"addressEditModal",bindToController:!0,resolve:{SelectedAddress:function(){return address},SelectedBuyerID:function(){return buyerid}}}).result}function _delete(address,buyerid){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+(address.AddressName?address.AddressName:address.ID)+"</b>?",confirmText:"Delete address",type:"delete"}).then(function(){return OrderCloud.Addresses.Delete(address.ID,buyerid)})}function _getAssignments(level,buyerid,usergroupid){return OrderCloud.Addresses.ListAssignments(null,null,usergroupid,level,null,null,null,100,buyerid).then(function(data1){for(var df=$q.defer(),queue=[],totalPages=angular.copy(data1.Meta.TotalPages),currentPage=angular.copy(data1.Meta.Page);totalPages>=currentPage;)currentPage++,queue.push(OrderCloud.Addresses.ListAssignments(null,null,usergroupid,level,null,null,currentPage,100,buyerid));return $q.all(queue).then(function(results){angular.forEach(results,function(r){data1.Items=data1.Items.concat(r.Items)}),df.resolve(data1.Items)}),df.promise})}function _mapAssignments(allAssignments,addressList){return addressList.Items=_.map(addressList.Items,function(address){return angular.forEach(allAssignments,function(assignment){address.ID==assignment.AddressID&&(address.shipping=assignment.IsShipping,address.billing=assignment.IsBilling)}),address}),addressList}function _compareAssignments(allAssignments,addressList,userGroupID){var changedAssignments=[];return angular.forEach(addressList.Items,function(address){var existingAssignment=_.where(allAssignments,{AddressID:address.ID})[0];!existingAssignment||existingAssignment.IsShipping==address.shipping&&existingAssignment.IsBilling==address.billing?existingAssignment||!address.shipping&&!address.billing||changedAssignments.push({old:null,"new":{UserGroupID:userGroupID,AddressID:address.ID,IsShipping:address.shipping,IsBilling:address.billing}}):changedAssignments.push({old:existingAssignment,"new":{UserGroupID:existingAssignment.UserGroupID,AddressID:existingAssignment.AddressID,IsShipping:address.shipping,IsBilling:address.billing}})}),changedAssignments}function _updateAssignments(allAssignments,changedAssignments,buyerid){var df=$q.defer(),assignmentQueue=[],errors=[];return angular.forEach(changedAssignments,function(diff){diff.old?diff["new"].IsBilling||diff["new"].IsShipping?assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.Addresses.SaveAssignment(diff["new"],buyerid).then(function(){allAssignments[allAssignments.indexOf(diff.old)]=diff["new"],d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}()):assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.Addresses.DeleteAssignment(diff["new"].AddressID,diff["new"].UserID,diff["new"].UserGroupID,buyerid).then(function(){allAssignments.splice(allAssignments.indexOf(diff.old),1),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}()):assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.Addresses.SaveAssignment(diff["new"],buyerid).then(function(){allAssignments.push(diff["new"]),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}())}),$q.all(assignmentQueue).then(function(){df.resolve({UpdatedAssignments:allAssignments,Errors:errors})}),df.promise}var service={Create:_create,Edit:_edit,Delete:_delete,Assignments:{Get:_getAssignments,Map:_mapAssignments,Compare:_compareAssignments,Update:_updateAssignments}};return service}OrderCloudAddresses.$inject=["$q","$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocAddresses",OrderCloudAddresses)}(),function(){"use strict";function AddressesController($exceptionHandler,$state,$stateParams,$ocMedia,toastr,OrderCloud,ocParameters,ocAddresses,CurrentAssignments,AddressList,Parameters){function selectedCheck(){vm.allShippingSelected=_.where(vm.list.Items,{shipping:!0}).length==vm.list.Items.length,vm.allBillingSelected=_.where(vm.list.Items,{billing:!0}).length==vm.list.Items.length}function changedCheck(){vm.changedAssignments=ocAddresses.Assignments.Compare(CurrentAssignments,vm.list,$stateParams.usergroupid)}var vm=this;vm.list=AddressList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.changedAssignments=[],vm.userGroupID=$stateParams.usergroupid,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.Addresses.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.changedAssignments=[],vm.list=ocAddresses.Assignments.Map(CurrentAssignments,data),vm.searchResults=vm.parameters.search.length>0,selectedCheck()})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.clearFilters=function(){vm.parameters.filters=null,vm.parameters.from=null,vm.parameters.to=null,$ocMedia("max-width: 767px")?vm.parameters.sortBy=null:angular.noop(),vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.Addresses.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.filters).then(function(data){var mappedData=ocAddresses.Assignments.Map(CurrentAssignments,data);vm.list.Items=vm.list.Items.concat(mappedData.Items),vm.list.Meta=mappedData.Meta,selectedCheck()})},selectedCheck(),vm.selectAllItems=function(type){switch(type){case"shipping":vm.allShippingSelected=!vm.allShippingSelected,_.map(vm.list.Items,function(a){a.shipping=vm.allShippingSelected});break;case"billing":vm.allBillingSelected=!vm.allBillingSelected,_.map(vm.list.Items,function(a){a.billing=vm.allBillingSelected})}changedCheck()},vm.selectItem=function(scope,type){switch(type){case"shipping":scope.address.shipping||(vm.allShippingSelected=!1);break;case"billing":scope.address.billing||(vm.allBillingSelected=!1)}changedCheck()},vm.resetAssignments=function(){vm.list=ocAddresses.Assignments.Map(CurrentAssignments,vm.list),vm.changedAssignments=[],selectedCheck()},vm.updateAssignments=function(){vm.searchLoading=ocAddresses.Assignments.Update(CurrentAssignments,vm.changedAssignments,$stateParams.buyerid).then(function(data){angular.forEach(data.Errors,function(ex){$exceptionHandler(ex)}),CurrentAssignments=data.UpdatedAssignments,changedCheck(),selectedCheck(),toastr.success("Address assignments updated.")})},vm.createAddress=function(){ocAddresses.Create($stateParams.buyerid).then(function(newAddress){vm.list.Items.push(newAddress),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(newAddress.AddressName+" was created.")})},vm.editAddress=function(scope){ocAddresses.Edit(scope.address,$stateParams.buyerid).then(function(updatedAddress){updatedAddress.shipping=vm.list.Items[scope.$index].shipping,updatedAddress.billing=vm.list.Items[scope.$index].billing,updatedAddress.userGroupID=vm.list.Items[scope.$index].userGroupID,vm.list.Items[scope.$index]=updatedAddress,updatedAddress.ID!=scope.address.ID&&(_.map(CurrentAssignments,function(assignment){return assignment.AddressID==scope.address.ID&&(assignment.AddressID=updatedAddress.ID),assignment}),vm.changedAssignments=ocAddresses.Assignments.Compare(CurrentAssignments,vm.list,$stateParams.usergroupid)),toastr.success(updatedAddress.AddressName+" was updated.")})},vm.deleteAddress=function(scope){ocAddresses.Delete(scope.address,$stateParams.buyerid).then(function(){vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,toastr.success(scope.address.AddressName+" was deleted."),vm.changedAssignments=ocAddresses.Assignments.Compare(CurrentAssignments,vm.list,$stateParams.usergroupid)})}}AddressesController.$inject=["$exceptionHandler","$state","$stateParams","$ocMedia","toastr","OrderCloud","ocParameters","ocAddresses","CurrentAssignments","AddressList","Parameters"],angular.module("orderCloud").controller("AddressesCtrl",AddressesController)}(),function(){"use strict";function AddressesConfig($stateProvider){$stateProvider.state("addresses",{parent:"buyer",templateUrl:"buyerManagement/addresses/templates/addresses.html",controller:"AddressesCtrl",controllerAs:"addresses",url:"/addresses?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Buyer Addresses"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$q","ocAddresses","$stateParams",function($q,ocAddresses,$stateParams){return ocAddresses.Assignments.Get("company",$stateParams.buyerid)}],AddressList:["ocAddresses","OrderCloud","Parameters","CurrentAssignments",function(ocAddresses,OrderCloud,Parameters,CurrentAssignments){return OrderCloud.Addresses.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){return ocAddresses.Assignments.Map(CurrentAssignments,data)})}]}}).state("userGroup.addresses",{templateUrl:"buyerManagement/addresses/templates/addresses.html",controller:"AddressesCtrl",controllerAs:"addresses",url:"/addresses?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"User Group Addresses"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$q","ocAddresses","$stateParams",function($q,ocAddresses,$stateParams){return ocAddresses.Assignments.Get("group",$stateParams.buyerid,$stateParams.usergroupid)}],AddressList:["ocAddresses","OrderCloud","Parameters","CurrentAssignments",function(ocAddresses,OrderCloud,Parameters,CurrentAssignments){return OrderCloud.Addresses.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters,Parameters.buyerid).then(function(data){return ocAddresses.Assignments.Map(CurrentAssignments,data)})}]}})}AddressesConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(AddressesConfig)}(),function(){"use strict";function AddressEditModalController($timeout,$uibModalInstance,$exceptionHandler,$scope,OrderCloud,ocGeography,SelectedAddress,SelectedBuyerID){var vm=this;vm.address=angular.copy(SelectedAddress),vm.addressName=SelectedAddress.AddressName,vm.countries=ocGeography.Countries,vm.states=ocGeography.States,$scope.$watch(function(){return vm.address.Country},function(n,o){n&&n!=o&&(vm.address.State=null,$timeout(function(){vm.form.State.$$element.focus()},100))}),vm.submit=function(){vm.loading=OrderCloud.Addresses.Update(SelectedAddress.ID,vm.address,SelectedBuyerID).then(function(updatedAddress){$uibModalInstance.close(updatedAddress)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}AddressEditModalController.$inject=["$timeout","$uibModalInstance","$exceptionHandler","$scope","OrderCloud","ocGeography","SelectedAddress","SelectedBuyerID"],angular.module("orderCloud").controller("AddressEditModalCtrl",AddressEditModalController)}(),function(){"use strict";function AddressCreateModalController($timeout,$uibModalInstance,$exceptionHandler,$scope,OrderCloud,ocGeography,SelectedBuyerID){var vm=this;vm.address={Country:"US"},vm.countries=ocGeography.Countries,vm.states=ocGeography.States,$scope.$watch(function(){return vm.address.Country},function(n,o){n&&n!=o&&(vm.address.State=null),$timeout(function(){vm.form.State.$$element.focus()},100)}),vm.submit=function(){vm.loading=OrderCloud.Addresses.Create(vm.address,SelectedBuyerID).then(function(newAddress){$uibModalInstance.close(newAddress)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}AddressCreateModalController.$inject=["$timeout","$uibModalInstance","$exceptionHandler","$scope","OrderCloud","ocGeography","SelectedBuyerID"],angular.module("orderCloud").controller("AddressCreateModalCtrl",AddressCreateModalController)}(),function(){"use strict";function SecurityController($exceptionHandler,$stateParams,toastr,Assignments,AvailableProfiles,OrderCloud){var vm=this;vm.assignments=Assignments,vm.profiles=AvailableProfiles,vm.buyerid=$stateParams.buyerid,vm.usergroupid=$stateParams.usergroupid,vm.adminusergroupid=$stateParams.adminusergroupid,vm.isAdmin=!(vm.buyerid||vm.usergroupid||vm.adminusergroupid),vm.updateAssignment=function(scope){scope.profile.selected?OrderCloud.SecurityProfiles.SaveAssignment({SecurityProfileID:scope.profile.ID,BuyerID:$stateParams.buyerid,UserGroupID:$stateParams.usergroupid||$stateParams.adminusergroupid}).then(function(){toastr.success(scope.profile.Name+" was enabled.")})["catch"](function(ex){scope.profile.selected=!1,$exceptionHandler(ex)}):OrderCloud.SecurityProfiles.DeleteAssignment(scope.profile.ID,null,$stateParams.usergroupid||$stateParams.adminusergroupid,$stateParams.buyerid).then(function(){toastr.success(scope.profile.Name+" was disabled.")})["catch"](function(ex){scope.profile.selected=!0,$exceptionHandler(ex)})}}SecurityController.$inject=["$exceptionHandler","$stateParams","toastr","Assignments","AvailableProfiles","OrderCloud"],angular.module("orderCloud").controller("SecurityCtrl",SecurityController)}(),function(){"use strict";function SecurityConfig($stateProvider){$stateProvider.state("security",{parent:"base",url:"/security",templateUrl:"security/templates/security.html",controller:"SecurityCtrl",controllerAs:"security",data:{pageTitle:"Admin Security"},resolve:{Assignments:["OrderCloud",function(OrderCloud){return OrderCloud.SecurityProfiles.ListAssignments(null,null,null,"company",null,100,null)}],AvailableProfiles:["$q","OrderCloud","Assignments",function($q,OrderCloud,Assignments){return OrderCloud.SecurityProfiles.List(null,null,100,null,null,{IsDevProfile:!1}).then(function(data){return _.map(data.Items,function(sp){return sp.selected=_.pluck(_.filter(Assignments.Items,{BuyerID:null}),"SecurityProfileID").indexOf(sp.ID)>-1,sp})})}]}}).state("adminUserGroup.security",{url:"/security",templateUrl:"security/templates/security.html",controller:"SecurityCtrl",controllerAs:"security",data:{pageTitle:"Admin User Group Security"},resolve:{Assignments:["$stateParams","OrderCloud",function($stateParams,OrderCloud){return OrderCloud.SecurityProfiles.ListAssignments(null,null,$stateParams.adminusergroupid,"group",null,100,null)}],AvailableProfiles:["$q","OrderCloud","Assignments",function($q,OrderCloud,Assignments){return OrderCloud.SecurityProfiles.List(null,null,100,null,null,{IsDevProfile:!1}).then(function(data){return _.map(data.Items,function(sp){return sp.selected=_.pluck(Assignments.Items,"SecurityProfileID").indexOf(sp.ID)>-1,sp})})}]}}).state("buyerSecurity",{parent:"buyer",url:"/security",templateUrl:"security/templates/security.html",controller:"SecurityCtrl",controllerAs:"security",data:{pageTitle:"Buyer Security"},resolve:{Assignments:["$stateParams","OrderCloud",function($stateParams,OrderCloud){return OrderCloud.SecurityProfiles.ListAssignments(null,null,null,"company",null,100,$stateParams.buyerid)}],AvailableProfiles:["$q","OrderCloud","Assignments",function($q,OrderCloud,Assignments){return OrderCloud.SecurityProfiles.List(null,null,100,null,null,{IsDevProfile:!1}).then(function(data){return _.map(data.Items,function(sp){return sp.selected=_.pluck(Assignments.Items,"SecurityProfileID").indexOf(sp.ID)>-1,sp})})}]}}).state("userGroup.security",{url:"/security",templateUrl:"security/templates/security.html",controller:"SecurityCtrl",controllerAs:"security",data:{pageTitle:"User Group Security"},resolve:{Assignments:["$stateParams","OrderCloud",function($stateParams,OrderCloud){return OrderCloud.SecurityProfiles.ListAssignments(null,null,$stateParams.usergroupid,"group",null,100,$stateParams.buyerid)}],AvailableProfiles:["$q","OrderCloud","Assignments",function($q,OrderCloud,Assignments){return OrderCloud.SecurityProfiles.List(null,null,100,null,null,{IsDevProfile:!1}).then(function(data){return _.map(data.Items,function(sp){return sp.selected=_.pluck(Assignments.Items,"SecurityProfileID").indexOf(sp.ID)>-1,sp})})}]}})}SecurityConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(SecurityConfig)}(),function(){"use strict";function LoginService($q,$window,$state,$cookies,toastr,OrderCloud,ocRolesService,clientid){function _sendVerificationCode(email){var deferred=$q.defer(),passwordResetRequest={Email:email,ClientID:clientid,URL:encodeURIComponent($window.location.href)+"{0}"};return OrderCloud.PasswordResets.SendVerificationCode(passwordResetRequest).then(function(){deferred.resolve()})["catch"](function(ex){deferred.reject(ex)}),deferred.promise}function _resetPassword(resetPasswordCredentials,verificationCode){var deferred=$q.defer(),passwordReset={ClientID:clientid,Username:resetPasswordCredentials.ResetUsername,Password:resetPasswordCredentials.NewPassword};return OrderCloud.PasswordResets.ResetPassword(verificationCode,passwordReset).then(function(){deferred.resolve()})["catch"](function(ex){deferred.reject(ex)}),deferred.promise}function _logout(){angular.forEach($cookies.getAll(),function(val,key){$cookies.remove(key)}),ocRolesService.Remove(),$state.go("login",{},{reload:!0})}function _rememberMe(){var availableRefreshToken=OrderCloud.Refresh.ReadToken()||null;availableRefreshToken?OrderCloud.Refresh.GetToken(availableRefreshToken).then(function(data){OrderCloud.Auth.SetToken(data.access_token),$state.go("home")})["catch"](function(){toastr.error("Your token has expired, please log in again."),_logout()}):_logout()}return{SendVerificationCode:_sendVerificationCode,ResetPassword:_resetPassword,RememberMe:_rememberMe,Logout:_logout}}LoginService.$inject=["$q","$window","$state","$cookies","toastr","OrderCloud","ocRolesService","clientid"],angular.module("orderCloud").factory("LoginService",LoginService)}(),function(){"use strict";function LoginController($state,$stateParams,$exceptionHandler,OrderCloud,LoginService){var vm=this;vm.credentials={Username:null,Password:null},vm.token=$stateParams.token,vm.form=vm.token?"reset":"login",vm.setForm=function(form){vm.form=form},vm.rememberStatus=!1,vm.submit=function(){vm.loading=OrderCloud.Auth.GetToken(vm.credentials).then(function(data){vm.rememberStatus?OrderCloud.Refresh.SetToken(data.refresh_token):angular.noop(),OrderCloud.Auth.SetToken(data.access_token),$state.go("home")})["catch"](function(ex){$exceptionHandler(ex)})},vm.forgotPassword=function(){vm.loading=LoginService.SendVerificationCode(vm.credentials.Email).then(function(){vm.setForm("verificationCodeSuccess"),vm.credentials.Email=null})["catch"](function(ex){$exceptionHandler(ex)})},vm.resetPassword=function(){vm.loading=LoginService.ResetPassword(vm.credentials,vm.token).then(function(){vm.setForm("resetSuccess"),vm.token=null,vm.credentials.ResetUsername=null,vm.credentials.NewPassword=null,vm.credentials.ConfirmPassword=null})["catch"](function(ex){$exceptionHandler(ex),vm.credentials.ResetUsername=null,vm.credentials.NewPassword=null,vm.credentials.ConfirmPassword=null})}}LoginController.$inject=["$state","$stateParams","$exceptionHandler","OrderCloud","LoginService"],angular.module("orderCloud").controller("LoginCtrl",LoginController)}(),function(){"use strict";function LoginConfig($stateProvider){$stateProvider.state("login",{url:"/login/:token",templateUrl:"login/templates/login.tpl.html",controller:"LoginCtrl",controllerAs:"login",data:{pageTitle:"Login"}})}LoginConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(LoginConfig)}(),function(){"use strict";angular.module("orderCloud").factory("ocStateLoading",["$rootScope","$ocMedia","$exceptionHandler","defaultstate","$q",function($rootScope,$ocMedia,$exceptionHandler,defaultstate,$q){function _init(){$rootScope.$on("$stateChangeStart",function(e,toState){var parent=toState.parent||toState.name.split(".")[0];stateLoading[parent]=$q.defer(),$ocMedia("max-width:767px")&&$("#GlobalNav").offcanvas("hide")}),$rootScope.$on("$stateChangeSuccess",function(){document.body.scrollTop=document.documentElement.scrollTop=0,_end()}),$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){toState.name==defaultstate&&event.preventDefault(),$exceptionHandler(error.data?error:{message:error}),_end()})}function _watch(key){return stateLoading[key]}function _end(){angular.forEach(stateLoading,function(val,key){stateLoading[key].promise&&!stateLoading[key].promise.$cgBusyFulfilled&&stateLoading[key].resolve()})}var stateLoading={},service={Init:_init,Watch:_watch};return service}])}(),function(){"use strict";function OrderCloudRolesService($window,OrderCloud){function base64Decode(string){var output=string.replace(/-/g,"+").replace(/_/g,"/");switch(output.length%4){case 0:break;case 2:output+="==";break;case 3:output+="=";break;default:return void console.warn("Illegal base64url string")}return $window.decodeURIComponent(escape($window.atob(output)))}function _set(token){if(token){var tokenParts=token.split(".");if(3!=tokenParts.length)return void console.warn("ocRoles","Token is not valid");var decodedToken=base64Decode(tokenParts[1]);if(!decodedToken)return void console.warn("ocRoles","Cannot decode token");var decodedTokenObject=JSON.parse(decodedToken);return roles=decodedTokenObject.role,"string"==typeof roles&&(roles=[roles]),roles||[]}}function _get(){return roles||_set(OrderCloud.Auth.ReadToken())}function _remove(){roles=null}function _userIsAuthorized(requiredRoles,any){var userRoles=_get();if(userRoles)return userRoles.indexOf("FullAccess")>-1?!0:any?_.intersection(requiredRoles,userRoles).length>0:0==_.difference(requiredRoles,userRoles).length}var roles,service={Set:_set,Get:_get,Remove:_remove,UserIsAuthorized:_userIsAuthorized};return service}function OrderCloudRolesProvider(){var roleGroups={};return{$get:function(){return{GetRoleGroups:function(){return roleGroups}}},AddRoleGroup:function(roleGroup){if(!roleGroup.Name)throw"ocRoles: RoleGroup must have a Name value";if(!roleGroup.Roles||!roleGroup.Roles.length)throw"ocRoles: RoleGroup must have Roles";if(!angular.isArray(roleGroup.Roles))throw"ocRoles: RoleGroup Roles must be an array";if(!roleGroup.Type||-1==["All","Any"].indexOf(roleGroup.Type))throw"ocRoles: RoleGroup Type must be 'All' or 'Any'";roleGroups[roleGroup.Name]=roleGroup}}}OrderCloudRolesService.$inject=["$window","OrderCloud"],angular.module("orderCloud").factory("ocRolesService",OrderCloudRolesService).provider("ocRoles",OrderCloudRolesProvider)}(),function(){"use strict";function OrderCloudParametersService($filter){function _get(stateParams,suffix){var suffixParams,parameters=angular.copy(stateParams);return parameters.filters?parameters.filters=JSON.parse(parameters.filters):parameters.filters={},parameters.from?parameters.from=new Date(parameters.from):angular.noop(),parameters.to?parameters.to=new Date(parameters.to):angular.noop(),suffix&&(suffixParams={},angular.forEach(parameters,function(val,key){suffixParams[key.split(suffix)[0]]=val})),suffixParams||parameters}function _create(params,resetPage,suffix){var suffixParams,parameters=angular.copy(params);return resetPage?parameters.page=null:angular.noop(),parameters.filters&&(""==parameters.filters.orderType?delete parameters.filters.orderType:angular.noop(),""==parameters.filters.type?delete parameters.filters.type:angular.noop(),null==parameters.filters.status||""==parameters.filters.status?delete parameters.filters.status:angular.noop(),parameters.filters=JSON.stringify(parameters.filters),"{}"==parameters.filters?parameters.filters=null:angular.noop()),parameters.fromDate&&(parameters.fromDate=$filter("date")(parameters.fromDate,"MM-dd-yyyy")),parameters.toDate&&(parameters.toDate=$filter("date")(parameters.toDate,"MM-dd-yyyy")),suffix&&(suffixParams={},angular.forEach(parameters,function(val,key){suffixParams[key+suffix]=val})),suffixParams||parameters}var service={Get:_get,Create:_create};return service}OrderCloudParametersService.$inject=["$filter"],angular.module("orderCloud").factory("ocParameters",OrderCloudParametersService)}(),function(){"use strict";function MEDIA_CONSTANT(){return{sm:"(max-width: 600px)","gt-sm":"(min-width: 600px)",md:"(min-width: 600px) and (max-width: 960px)","gt-md":"(min-width: 960px)",lg:"(min-width: 960px) and (max-width: 1200px)","gt-lg":"(min-width: 1200px)"}}function MEDIA_PRIORITY_CONSTANT(){return["gt-lg","lg","gt-md","md","gt-sm","sm"]}function ocMediaFactory(MEDIA,MEDIA_PRIORITY,$rootScope,$window){function $ocMedia(query){var validated=queries[query];angular.isUndefined(validated)&&(validated=queries[query]=validate(query));var result=results[validated];return angular.isUndefined(result)&&(result=add(validated)),result}function validate(query){return MEDIA[query]||("("!==query.charAt(0)?"("+query+")":query)}function add(query){var result=mqls[query]=$window.matchMedia(query);return result.addListener(onQueryChange),results[result.media]=!!result.matches}function onQueryChange(query){$rootScope.$evalAsync(function(){results[query.media]=!!query.matches})}function getQuery(name){return mqls[name]}function getResponsiveAttribute(attrs,attrName){for(var i=0;i<MEDIA_PRIORITY.length;i++){var mediaName=MEDIA_PRIORITY[i];if(mqls[queries[mediaName]].matches){var normalizedName=getNormalizedName(attrs,attrName+"-"+mediaName);if(attrs[normalizedName])return attrs[normalizedName]}}return attrs[getNormalizedName(attrs,attrName)]}function watchResponsiveAttributes(attrNames,attrs,watchFn){var unwatchFns=[];return attrNames.forEach(function(attrName){var normalizedName=getNormalizedName(attrs,attrName);attrs[normalizedName]&&unwatchFns.push(attrs.$observe(normalizedName,angular.bind(void 0,watchFn,null)));for(var mediaName in MEDIA){if(normalizedName=getNormalizedName(attrs,attrName+"-"+mediaName),!attrs[normalizedName])return;unwatchFns.push(attrs.$observe(normalizedName,angular.bind(void 0,watchFn,mediaName)))}}),function(){unwatchFns.forEach(function(fn){fn()})}}function getNormalizedName(attrs,attrName){return normalizeCache[attrName]||(normalizeCache[attrName]=attrs.$normalize(attrName))}var queries={},mqls={},results={},normalizeCache={};return $ocMedia.getResponsiveAttribute=getResponsiveAttribute,$ocMedia.getQuery=getQuery,$ocMedia.watchResponsiveAttributes=watchResponsiveAttributes,$ocMedia}ocMediaFactory.$inject=["MEDIA","MEDIA_PRIORITY","$rootScope","$window"],angular.module("orderCloud").factory("$ocMedia",ocMediaFactory).constant("MEDIA",MEDIA_CONSTANT).constant("MEDIA_PRIORITY",MEDIA_PRIORITY_CONSTANT)}(),function(){"use strict";function OrderCloudGeography(){var _countries=[{label:"United States of America",value:"US"},{label:"Afghanistan",value:"AF"},{label:"Åland Islands",value:"AX"},{label:"Albania",value:"AL"},{label:"Algeria",value:"DZ"},{label:"American Samoa",value:"AS"},{label:"Andorra",value:"AD"},{label:"Angola",value:"AO"},{label:"Anguilla",value:"AI"},{label:"Antarctica",value:"AQ"},{label:"Antigua and Barbuda",value:"AG"},{label:"Argentina",value:"AR"},{label:"Armenia",value:"AM"},{label:"Aruba",value:"AW"},{label:"Australia",value:"AU"},{label:"Austria",value:"AT"},{label:"Azerbaijan",value:"AZ"},{label:"Bahamas",value:"BS"},{label:"Bahrain",value:"BH"},{label:"Bangladesh",value:"BD"},{label:"Barbados",value:"BB"
},{label:"Belarus",value:"BY"},{label:"Belgium",value:"BE"},{label:"Belize",value:"BZ"},{label:"Benin",value:"BJ"},{label:"Bermuda",value:"BM"},{label:"Bhutan",value:"BT"},{label:"Bolivia",value:"BO"},{label:"Bosnia and Herzegovina",value:"BA"},{label:"Botswana",value:"BW"},{label:"Bouvet Island",value:"BV"},{label:"Brazil",value:"BR"},{label:"British Indian Ocean Territory",value:"IO"},{label:"Brunei Darussalam",value:"BN"},{label:"Bulgaria",value:"BG"},{label:"Burkina Faso",value:"BF"},{label:"Burundi",value:"BI"},{label:"Cambodia",value:"KH"},{label:"Cameroon",value:"CM"},{label:"Canada",value:"CA"},{label:"Cape Verde",value:"CV"},{label:"Cayman Islands",value:"KY"},{label:"Central African Republic",value:"CF"},{label:"Chad",value:"TD"},{label:"Chile",value:"CL"},{label:"China",value:"CN"},{label:"Christmas Island Australia",value:"CX"},{label:"Cocos Keeling Islands",value:"CC"},{label:"Colombia",value:"CO"},{label:"Comoros",value:"KM"},{label:"Congo",value:"CG"},{label:"Congo, D.R.",value:"CD"},{label:"Cook Islands",value:"CK"},{label:"Costa Rica",value:"CR"},{label:"Cote D'Ivoire Ivory Coast",value:"CI"},{label:"Croatia Hrvatska",value:"HR"},{label:"Cuba",value:"CU"},{label:"Cyprus",value:"CY"},{label:"Czech Republic",value:"CZ"},{label:"Denmark",value:"DK"},{label:"Djibouti",value:"DJ"},{label:"Dominica",value:"DM"},{label:"Dominican Republic",value:"DO"},{label:"Ecuador",value:"EC"},{label:"Egypt",value:"EG"},{label:"El Salvador",value:"SV"},{label:"Equatorial Guinea",value:"GQ"},{label:"Eritrea",value:"ER"},{label:"Estonia",value:"EE"},{label:"Ethiopia",value:"ET"},{label:"Faeroe Islands",value:"FO"},{label:"Falkland Islands Malvinas",value:"FK"},{label:"Fiji",value:"FJ"},{label:"Finland",value:"FI"},{label:"France",value:"FR"},{label:"France, Metropolitan",value:"FX"},{label:"French Guiana",value:"GF"},{label:"French Polynesia",value:"PF"},{label:"French Southern Territories",value:"TF"},{label:"Gabon",value:"GA"},{label:"Gambia",value:"GM"},{label:"Georgia",value:"GE"},{label:"Germany",value:"DE"},{label:"Ghana",value:"GH"},{label:"Gibraltar",value:"GI"},{label:"Greece",value:"GR"},{label:"Greenland",value:"GL"},{label:"Grenada",value:"GD"},{label:"Guadeloupe",value:"GP"},{label:"Guam",value:"GU"},{label:"Guatemala",value:"GT"},{label:"Guinea",value:"GN"},{label:"Guinea Bissau",value:"GW"},{label:"Guyana",value:"GY"},{label:"Haiti",value:"HT"},{label:"Heard and McDonald Is.",value:"HM"},{label:"Honduras",value:"HN"},{label:"Hong Kong",value:"HK"},{label:"Hungary",value:"HU"},{label:"Iceland",value:"IS"},{label:"India",value:"IN"},{label:"Indonesia",value:"ID"},{label:"Iran",value:"IR"},{label:"Iraq",value:"IQ"},{label:"Isle of Man",value:"IM"},{label:"Ireland",value:"IE"},{label:"Israel",value:"IL"},{label:"Italy",value:"IT"},{label:"Jamaica",value:"JM"},{label:"Japan",value:"JP"},{label:"Jersey",value:"JE"},{label:"Jordan",value:"JO"},{label:"Kazakhstan",value:"KZ"},{label:"Kenya",value:"KE"},{label:"Kiribati",value:"KI"},{label:"Korea North",value:"KP"},{label:"Korea South",value:"KR"},{label:"Kuwait",value:"KW"},{label:"Kyrgyzstan",value:"KG"},{label:"Lao P.Dem.R.",value:"LA"},{label:"Latvia",value:"LV"},{label:"Lebanon",value:"LB"},{label:"Lesotho",value:"LS"},{label:"Liberia",value:"LR"},{label:"Libyan Arab Jamahiriya",value:"LY"},{label:"Liechtenstein",value:"LI"},{label:"Lithuania",value:"LT"},{label:"Luxembourg",value:"LU"},{label:"Macau",value:"MO"},{label:"Macedonia",value:"MK"},{label:"Madagascar",value:"MG"},{label:"Malawi",value:"MW"},{label:"Malaysia",value:"MY"},{label:"Maldives",value:"MV"},{label:"Mali",value:"ML"},{label:"Malta",value:"MT"},{label:"Marshall Islands",value:"MH"},{label:"Martinique",value:"MQ"},{label:"Mauritania",value:"MR"},{label:"Mauritius",value:"MU"},{label:"Mayotte",value:"YT"},{label:"Mexico",value:"MX"},{label:"Micronesia",value:"FM"},{label:"Moldova",value:"MD"},{label:"Monaco",value:"MC"},{label:"Mongolia",value:"MN"},{label:"Montenegro",value:"ME"},{label:"Montserrat",value:"MS"},{label:"Morocco",value:"MA"},{label:"Mozambique",value:"MZ"},{label:"Myanmar",value:"MM"},{label:"Namibia",value:"NA"},{label:"Nauru",value:"NR"},{label:"Nepal",value:"NP"},{label:"Netherlands",value:"NL"},{label:"Netherlands Antilles",value:"AN"},{label:"New Caledonia",value:"NC"},{label:"New Zealand",value:"NZ"},{label:"Nicaragua",value:"NI"},{label:"Niger",value:"NE"},{label:"Nigeria",value:"NG"},{label:"Niue",value:"NU"},{label:"Norfolk Island",value:"NF"},{label:"Northern Mariana Islands",value:"MP"},{label:"Norway",value:"NO"},{label:"Oman",value:"OM"},{label:"Pakistan",value:"PK"},{label:"Palau",value:"PW"},{label:"Palestinian Territory, Occupied",value:"PS"},{label:"Panama",value:"PA"},{label:"Papua New Guinea",value:"PG"},{label:"Paraguay",value:"PY"},{label:"Peru",value:"PE"},{label:"Philippines",value:"PH"},{label:"Pitcairn",value:"PN"},{label:"Poland",value:"PL"},{label:"Portugal",value:"PT"},{label:"Puerto Rico",value:"PR"},{label:"Qatar",value:"QA"},{label:"Reunion",value:"RE"},{label:"Romania",value:"RO"},{label:"Russian Federation",value:"RU"},{label:"Rwanda",value:"RW"},{label:"Saint Helena",value:"SH"},{label:"Saint Kitts and Nevis",value:"KN"},{label:"Saint Lucia",value:"LC"},{label:"Saint Pierre and Miquelon",value:"PM"},{label:"Saint Vincent and the Grenadines",value:"VC"},{label:"Samoa",value:"WS"},{label:"San Marino",value:"SM"},{label:"Sao Tome and Principe",value:"ST"},{label:"Saudi Arabia",value:"SA"},{label:"Senegal",value:"SN"},{label:"Serbia",value:"RS"},{label:"Seychelles",value:"SC"},{label:"Sierra Leone",value:"SL"},{label:"Singapore",value:"SG"},{label:"Slovakia",value:"SK"},{label:"Slovenia",value:"SI"},{label:"Solomon Islands",value:"SB"},{label:"Somalia",value:"SO"},{label:"South Africa",value:"ZA"},{label:"S. Georgia &amp; S. Sandwich Is.",value:"GS"},{label:"Spain",value:"ES"},{label:"Sri Lanka",value:"LK"},{label:"Sudan",value:"SD"},{label:"Suriname",value:"SR"},{label:"Svalbard &amp; Jan Mayen Is.",value:"SJ"},{label:"Swaziland",value:"SZ"},{label:"Sweden",value:"SE"},{label:"Switzerland",value:"CH"},{label:"Syrian Arab Rep.",value:"SY"},{label:"Taiwan",value:"TW"},{label:"Tajikistan",value:"TJ"},{label:"Tanzania",value:"TZ"},{label:"Thailand",value:"TH"},{label:"Timor-Leste",value:"TG"},{label:"Togo",value:"TG"},{label:"Tokelau",value:"TK"},{label:"Tonga",value:"TO"},{label:"Trinidad and Tobago",value:"TT"},{label:"Tunisia",value:"TN"},{label:"Turkey",value:"TR"},{label:"Turkmenistan",value:"TM"},{label:"Turks and Caicos Islands",value:"TC"},{label:"Tuvalu",value:"TU"},{label:"Uganda",value:"UG"},{label:"Ukraine",value:"UA"},{label:"United Kingdom",value:"GB"},{label:"United Arab Emirates",value:"AE"},{label:"US Minor Outlying Is.",value:"UM"},{label:"Uruguay",value:"UY"},{label:"Uzbekistan",value:"UZ"},{label:"Vanuatu",value:"VU"},{label:"Vatican City State",value:"VC"},{label:"Venezuela",value:"VE"},{label:"Viet Nam",value:"VN"},{label:"Virgin Islands British",value:"VG"},{label:"Virgin Islands US",value:"VI"},{label:"Wallis and Futuna Islnds",value:"WF"},{label:"Western Sahara",value:"EH"},{label:"Yemen",value:"YE"},{label:"Yugoslavia",value:"YU"},{label:"Zambia",value:"ZM"},{label:"Zimbabwe",value:"ZW"}],_states=[{label:"Alabama",value:"AL",country:"US"},{label:"Alaska",value:"AK",country:"US"},{label:"Arizona",value:"AZ",country:"US"},{label:"Arkansas",value:"AR",country:"US"},{label:"California",value:"CA",country:"US"},{label:"Colorado",value:"CO",country:"US"},{label:"Connecticut",value:"CT",country:"US"},{label:"Delaware",value:"DE",country:"US"},{label:"District of Columbia",value:"DC",country:"US"},{label:"Florida",value:"FL",country:"US"},{label:"Georgia",value:"GA",country:"US"},{label:"Hawaii",value:"HI",country:"US"},{label:"Idaho",value:"ID",country:"US"},{label:"Illinois",value:"IL",country:"US"},{label:"Indiana",value:"IN",country:"US"},{label:"Iowa",value:"IA",country:"US"},{label:"Kansas",value:"KS",country:"US"},{label:"Kentucky",value:"KY",country:"US"},{label:"Louisiana",value:"LA",country:"US"},{label:"Maine",value:"ME",country:"US"},{label:"Maryland",value:"MD",country:"US"},{label:"Massachusetts",value:"MA",country:"US"},{label:"Michigan",value:"MI",country:"US"},{label:"Minnesota",value:"MN",country:"US"},{label:"Mississippi",value:"MS",country:"US"},{label:"Missouri",value:"MO",country:"US"},{label:"Montana",value:"MT",country:"US"},{label:"Nebraska",value:"NE",country:"US"},{label:"Nevada",value:"NV",country:"US"},{label:"New Hampshire",value:"NH",country:"US"},{label:"New Jersey",value:"NJ",country:"US"},{label:"New Mexico",value:"NM",country:"US"},{label:"New York",value:"NY",country:"US"},{label:"North Carolina",value:"NC",country:"US"},{label:"North Dakota",value:"ND",country:"US"},{label:"Ohio",value:"OH",country:"US"},{label:"Oklahoma",value:"OK",country:"US"},{label:"Oregon",value:"OR",country:"US"},{label:"Pennsylvania",value:"PA",country:"US"},{label:"Rhode Island",value:"RI",country:"US"},{label:"South Carolina",value:"SC",country:"US"},{label:"South Dakota",value:"SD",country:"US"},{label:"Tennessee",value:"TN",country:"US"},{label:"Texas",value:"TX",country:"US"},{label:"Utah",value:"UT",country:"US"},{label:"Vermont",value:"VT",country:"US"},{label:"Virginia",value:"VA",country:"US"},{label:"Washington",value:"WA",country:"US"},{label:"West Virginia",value:"WV",country:"US"},{label:"Wisconsin",value:"WI",country:"US"},{label:"Wyoming",value:"WY",country:"US"},{label:"Armed Forces Americas (AA)",value:"AA",country:"US"},{label:"Armed Forces Africa/Canada/Europe/Middle East (AE)",value:"AE",country:"US"},{label:"Armed Forces Pacific (AP)",value:"AP",country:"US"},{label:"American Samoa",value:"AS",country:"US"},{label:"Federated States of Micronesia",value:"FM",country:"US"},{label:"Guam",value:"GU",country:"US"},{label:"Marshall Islands",value:"MH",country:"US"},{label:"Northern Mariana Islands",value:"MP",country:"US"},{label:"Palau",value:"PW",country:"US"},{label:"Puerto Rico",value:"PR",country:"US"},{label:"Virgin Islands",value:"VI",country:"US"},{label:"Drenthe",value:"Drenthe",country:"NL"},{label:"Flevoland",value:"Flevoland",country:"NL"},{label:"Friesland",value:"Friesland",country:"NL"},{label:"Gelderland",value:"Gelderland",country:"NL"},{label:"Groningen",value:"Groningen",country:"NL"},{label:"Limburg",value:"Limburg",country:"NL"},{label:"Noord-Brabant",value:"Noord-Brabant",country:"NL"},{label:"Noord-Holland",value:"Noord-Holland",country:"NL"},{label:"Overijssel",value:"Overijssel",country:"NL"},{label:"Utrecht",value:"Utrecht",country:"NL"},{label:"Zeeland",value:"Zeeland",country:"NL"},{label:"Zuid-Holland",value:"Zuid-Holland",country:"NL"},{label:"Alberta",value:"AB",country:"CA"},{label:"British Columbia",value:"BC",country:"CA"},{label:"Manitoba",value:"MB",country:"CA"},{label:"New Brunswick",value:"NB",country:"CA"},{label:"Newfoundland and Labrador",value:"NL",country:"CA"},{label:"Northwest Territories",value:"NT",country:"CA"},{label:"Nova Scotia",value:"NS",country:"CA"},{label:"Nunavut",value:"NU",country:"CA"},{label:"Ontario",value:"ON",country:"CA"},{label:"Prince Edward Island",value:"PE",country:"CA"},{label:"Quebec",value:"QC",country:"CA"},{label:"Saskatchewan",value:"SK",country:"CA"},{label:"Yukon",value:"YT",country:"CA"}];return{Countries:_countries,States:_states}}angular.module("orderCloud").factory("ocGeography",OrderCloudGeography)}(),function(){"use strict";function OrderCloudFilesService($q){function randomString(){for(var chars="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",string_length=15,randomstring="",i=0;string_length>i;i++){var rnum=Math.floor(Math.random()*chars.length);randomstring+=chars.substring(rnum,rnum+1)}return randomstring}function _get(fileKey){var deferred=$q.defer(),s3=new AWS.S3,params={Bucket:"marketplace-application-test",Key:fileKey};return s3.getObject(params,function(err,data){err?console.log(err):console.log(data),deferred.resolve(data)}),deferred.promise}function _upload(file){var deferred=$q.defer(),s3=new AWS.S3,params={Bucket:"marketplace-application-test",Key:randomString(),ContentType:file.type,Body:file};return s3.upload(params,function(err,data){err?console.log(err):console.log(data),deferred.resolve(data)}),deferred.promise}function _delete(fileKey){var deferred=$q.defer(),s3=new AWS.S3,params={Bucket:"marketplace-application-test",Key:fileKey};return s3.deleteObject(params,function(err,data){err?console.log(err):console.log(data),deferred.resolve(data)}),deferred.promise}var service={Get:_get,Upload:_upload,Delete:_delete};return AWS.config.region="us-west-2",AWS.config.update({accessKeyId:"AKIAJDDM5ZWWOIH4AZZQ",secretAccessKey:"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"}),service}OrderCloudFilesService.$inject=["$q"],angular.module("orderCloud").factory("ocFilesService",OrderCloudFilesService)}(),function(){"use strict";function OrderCloudFileReader($q){function onLoad(reader,deferred,scope){return function(){scope.$apply(function(){deferred.resolve(reader)})}}function onError(reader,deferred,scope){return function(){scope.$apply(function(){deferred.reject(reader)})}}function onProgress(reader,scope){return function(event){scope.$broadcast("fileProgress",{total:event.total,loaded:event.loaded})}}function getReader(deferred,scope){var reader=new FileReader;return reader.onload=onLoad(reader,deferred,scope),reader.onerror=onError(reader,deferred,scope),reader.onprogress=onProgress(reader,scope),reader}function _readAsDataURL(file,scope){var deferred=$q.defer(),reader=getReader(deferred,scope);return reader.readAsDataURL(file),deferred.promise}var service={ReadAsDataUrl:_readAsDataURL};return service}OrderCloudFileReader.$inject=["$q"],angular.module("orderCloud").factory("ocFileReader",OrderCloudFileReader)}(),function(){"use strict";function CreditCardUtility(){function convertYearToString(year){return Year=year.toString().substring(2,4)}function _ccExpireYears(){var today=new Date;today=today.getFullYear();for(var x=today;today+21>x;x++)creditCardUtility.ExpirationYears.push(x);return creditCardUtility.ExpirationYears}var ExpirationDate,Year,creditCardUtility={ExpirationMonths:[{number:1,string:"01"},{number:2,string:"02"},{number:3,string:"03"},{number:4,string:"04"},{number:5,string:"05"},{number:6,string:"06"},{number:7,string:"07"},{number:8,string:"08"},{number:9,string:"09"},{number:10,string:"10"},{number:11,string:"11"},{number:12,string:"12"}],ExpirationYears:[],isLeapYear:function(year){return year%4==0&&year%100!=0||year%400==0},CreditCardTypes:["MasterCard","American Express","Discover","Visa"],ExpirationDateFormat:function(month,year){return ExpirationDate=month.concat(convertYearToString(year))}};return _ccExpireYears(),creditCardUtility}angular.module("orderCloud").factory("ocCreditCardUtility",CreditCardUtility)}(),function(){"use strict";function OrderCloudConfirmService($uibModal){function _confirm(options){return $uibModal.open({backdrop:"static",templateUrl:"common/templates/confirm.modal.html",controller:"ConfirmModalCtrl",controllerAs:"confirmModal",size:options.size||"confirm",resolve:{ConfirmOptions:function(){return options}}}).result}var service={Confirm:_confirm};return service}function ConfirmModalController($uibModalInstance,ConfirmOptions){var vm=this;vm.message=ConfirmOptions.message,vm.confirmText=ConfirmOptions.confirmText,vm.cancelText=ConfirmOptions.cancelText,vm.type=ConfirmOptions.type,vm.confirm=function(){$uibModalInstance.close()},vm.cancel=function(){$uibModalInstance.dismiss()}}OrderCloudConfirmService.$inject=["$uibModal"],ConfirmModalController.$inject=["$uibModalInstance","ConfirmOptions"],angular.module("orderCloud").factory("ocConfirm",OrderCloudConfirmService).controller("ConfirmModalCtrl",ConfirmModalController)}(),function(){"use strict";function AuthorizeNet($q,$resource,OrderCloud,apiurl,ocCreditCardUtility){function _createCreateCard(creditCard,buyerID){var ExpirationDate=ocCreditCardUtility.ExpirationDateFormat(creditCard.ExpirationMonth,creditCard.ExpirationYear);return _makeApiCall("POST",{BuyerID:buyerID?buyerID:OrderCloud.BuyerID.Get(),TransactionType:"createCreditCard",CardDetails:{CreditCardID:creditCard.ID,CardholderName:creditCard.CardholderName,CardType:creditCard.CardType,CardNumber:creditCard.CardNumber,ExpirationDate:ExpirationDate,CardCode:creditCard.CardCode,Shared:creditCard.Shared}})}function _updateCreditCard(creditCard,buyerID){var ExpirationDate=ocCreditCardUtility.ExpirationDateFormat(creditCard.ExpirationMonth,creditCard.ExpirationYear);return _makeApiCall("POST",{BuyerID:buyerID?buyerID:OrderCloud.BuyerID.Get(),TransactionType:"updateCreditCard",CardDetails:{UpdatedCreditCardID:creditCard.UpdatedCreditCardID,CreditCardID:creditCard.ID,CardholderName:creditCard.CardholderName,CardType:creditCard.CardType,CardNumber:"XXXX"+creditCard.PartialAccountNumber,ExpirationDate:ExpirationDate,Shared:creditCard.Shared}})}function _deleteCreditCard(creditCard,buyerID){return _makeApiCall("POST",{BuyerID:buyerID?buyerID:OrderCloud.BuyerID.Get(),TransactionType:"deleteCreditCard",CardDetails:{CreditCardID:creditCard.ID,Shared:creditCard.Shared}})}function _makeApiCall(method,requestBody){var apiUrl=apiurl+"/v1/integrationproxy/authorizenet",d=$q.defer();return $resource(apiUrl,null,{callApi:{method:method,headers:{Authorization:"Bearer "+OrderCloud.Auth.ReadToken()}}}).callApi(requestBody).$promise.then(function(data){d.resolve(data.ResponseBody.Result?data.ResponseBody.Result:data.ResponseBody)})["catch"](function(ex){d.reject(ex)}),d.promise}var service={CreateCreditCard:_createCreateCard,UpdateCreditCard:_updateCreditCard,DeleteCreditCard:_deleteCreditCard};return service}AuthorizeNet.$inject=["$q","$resource","OrderCloud","apiurl","ocCreditCardUtility"],angular.module("orderCloud").factory("ocAuthNet",AuthorizeNet)}(),function(){"use strict";function prettySubmit(){return{restrict:"A",link:function(scope,element){var el=document.createElement("div");el.setAttribute("ongesturestart","return;");var isTouch="function"==typeof el.ongesturestart;isTouch&&($(element).attr("action","."),$(element).submit(function(event){event.preventDefault(),$(document.activeElement).blur()}))}}}angular.module("orderCloud").directive("prettySubmit",prettySubmit)}(),function(){"use strict";function OrderCloudReadonlyRoles(ocRoles,ocRolesService){var directive={restrict:"A",controller:function($scope,$attrs,$element){function analyzeRoles(requiredRoles,any){ocRolesService.UserIsAuthorized(requiredRoles,any)?$element.removeClass("oc-read-only"):(vm.Authorized=!1,$element.addClass("oc-read-only"))}var vm=this;vm.Authorized=!0;var attrValue=$attrs.ocReadonlyRoles,roleGroups=ocRoles.GetRoleGroups();if(attrValue&&!/[^a-z]/i.test(attrValue))if(roleGroups[attrValue]){var roleGroup=roleGroups[attrValue];analyzeRoles(roleGroup.Roles,"Any"==roleGroup.Type)}else analyzeRoles([attrValue]);else if(attrValue.split(" || ").length>1)analyzeRoles(attrValue.split(" || "),!0);else{var value=JSON.parse($attrs.ocReadonlyRoles.replace(/'/g,'"'));angular.isArray(value)&&value.length&&"string"==typeof value[0]&&analyzeRoles(value)}}};return directive}function OrderCloudReadonlyRolesInput(){function link(scope,element,attr,ctrl){var ocReadonlyRolesCtrl=ctrl[0];if(ocReadonlyRolesCtrl){var authorized=ocReadonlyRolesCtrl.Authorized;authorized||("checkbox"==element.attr("type")||attr.uibDatepickerPopup?element.attr("disabled",!0):element.attr("readonly",!0))}}var directive={restrict:"E",priority:-1e3,require:["^?ocReadonlyRoles"],link:link};return directive}function OrderCloudReadonlyRolesTextArea(){function link(scope,element,attr,ctrl){var ocReadonlyRolesCtrl=ctrl[0];if(ocReadonlyRolesCtrl){var authorized=ocReadonlyRolesCtrl.Authorized;authorized||element.attr("readonly",!0)}}var directive={restrict:"E",priority:-1e3,require:["^?ocReadonlyRoles"],link:link};return directive}function OrderCloudReadonlyRolesSelect(){function link(scope,element,attr,ctrl){var ocReadonlyRolesCtrl=ctrl[0];if(ocReadonlyRolesCtrl){var authorized=ocReadonlyRolesCtrl.Authorized;authorized||element.attr("disabled",!0)}}var directive={restrict:"E",require:["^?ocReadonlyRoles"],link:link};return directive}function OrderCloudReadonlyRolesButton(){function link(scope,element,attr,ctrl){var ocReadonlyRolesCtrl=ctrl[0];if(ocReadonlyRolesCtrl){var authorized=ocReadonlyRolesCtrl.Authorized;authorized||element.attr("ng-disabled")||element.hasClass("close")||element.attr("disabled",!0)}}var directive={restrict:"E",priority:-1e3,require:["^?ocReadonlyRoles"],link:link};return directive}OrderCloudReadonlyRoles.$inject=["ocRoles","ocRolesService"],angular.module("orderCloud").directive("ocReadonlyRoles",OrderCloudReadonlyRoles).directive("input",OrderCloudReadonlyRolesInput).directive("textarea",OrderCloudReadonlyRolesTextArea).directive("select",OrderCloudReadonlyRolesSelect).directive("button",OrderCloudReadonlyRolesButton)}(),function(){"use strict";function OrderCloudIfRoles(ocRolesService,ocRoles){function link(scope,element,attr,ctrl){function analyzeRoles(requiredRoles,any){ocRolesService.UserIsAuthorized(requiredRoles,any)||removeElement()}function removeElement(){element.before("<!-- ocIfPermissions: "+attr.ocIfRoles+" -->"),element.remove()}var attrValue=attr.ocIfRoles,roleGroups=ocRoles.GetRoleGroups();if(attrValue&&!/[^a-z]/i.test(attrValue))if(roleGroups[attrValue]){var roleGroup=roleGroups[attrValue];analyzeRoles(roleGroup.Roles,"Any"==roleGroup.Type)}else analyzeRoles([attrValue]);else attrValue.split(" || ").length>1?analyzeRoles(attrValue.split(" || "),!0):scope.$watch(attr.ocIfRoles,function(value){angular.isArray(value)&&value.length&&"string"==typeof value[0]&&analyzeRoles(value)})}var directive={multiElement:!0,restrict:"A",priority:599,link:link};return directive}OrderCloudIfRoles.$inject=["ocRolesService","ocRoles"],angular.module("orderCloud").directive("ocIfRoles",OrderCloudIfRoles)}(),function(){"use strict";function ordercloudFileUpload($parse,ocFileReader,ocFilesService){function link(scope,element,attrs){function afterSelection(file,fileName){ocFilesService.Upload(file,fileName).then(function(fileData){scope.model.xp||(scope.model.xp={}),scope.model.xp.image={},scope.model.xp.image.URL=fileData.Location,scope.patch&&scope.patch({xp:scope.model.xp})})}function updateModel(event){switch(event.target.name){case"upload":if(null==event.target.files[0])return;var fileName=event.target.files[0].name,valid=!0;if((allowed.Extensions.length||allowed.Types.length)&&fileName){var ext=fileName.split(".").pop().toLowerCase();valid=-1!=allowed.Extensions.indexOf(ext)||allowed.Types.indexOf(event.target.files[0].type.split("/")[0])>-1}valid?scope.$apply(function(){ocFileReader.ReadAsDataUrl(event.target.files[0],scope).then(function(){afterSelection(event.target.files[0],fileName)}),file_input.assign(scope,event.target.files[0])}):scope.$apply(function(){scope.invalidExtension=!0;var input;event.target.files[0]=null,el.find("input").replaceWith(input=el.find("input").clone(!0)),scope.model.xp.image||(scope.model.xp.image={}),scope.model.xp.image.URL=null})}}var file_input=$parse("file"),el=element;scope.invalidExtension=!1,scope.upload=function(){$("#orderCloudUpload").click()},scope.remove=function(){delete scope.model.xp.image.URL};var allowed={Extensions:[],Types:[]};if(scope.extensions){var items=_.map(scope.extensions.split(","),function(ext){return ext.replace(/ /g,"").replace(/\./g,"").toLowerCase()});angular.forEach(items,function(item){item.indexOf("/")>-1?item.indexOf("*")>-1?allowed.Types.push(item.split("/")[0]):allowed.Extensions.push(item.split("/")[1]):allowed.Extensions.push(item)})}element.bind("change",updateModel)}var directive={scope:{model:"=",extensions:"@",invalidExtension:"@",patch:"&"},restrict:"E",templateUrl:"common/templates/fileUpload.html",replace:!0,link:link};return directive}ordercloudFileUpload.$inject=["$parse","ocFileReader","ocFilesService"],angular.module("orderCloud").directive("ocFileUpload",ordercloudFileUpload)}(),function(){"use strict";function confirmpassword(){return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ngModel){if(ngModel){scope.$watch(attrs.ngModel,function(){validate()}),attrs.$observe("confirmpassword",function(val){validate()});var validate=function(){var val1=ngModel.$viewValue,val2=attrs.confirmpassword;val1&&val2&&val1!==val2?ngModel.$setValidity("confirmpassword",!1):ngModel.$setValidity("confirmpassword",!0)}}}}}angular.module("orderCloud").directive("confirmpassword",confirmpassword)}(),function(){"use strict";function ocCachedList(){return function(items,page){if(items&&page){var results=[];return angular.forEach(items,function(item){item.MetaPage&&item.MetaPage==page&&results.push(item)}),results}}}angular.module("orderCloud").filter("ocCachedList",ocCachedList)}(),function(){"use strict";function AddressFilter(){return function(address,option){if(!address)return null;if("full"===option){var result=[];return address.AddressName&&result.push("<b>"+address.AddressName+"</b>"),(address.FirstName||address.LastName)&&result.push(address.FirstName&&!address.LastName?address.FirstName:!address.FirstName&&address.LastName?address.LastName:address.FirstName+" "+address.LastName),address.CompanyName&&result.push(address.CompanyName),result.push(address.Street1),address.Street2&&result.push(address.Street2),result.push(address.City+", "+address.State+" "+address.Zip),address.Phone&&result.push(address.Phone),result.join("<br/>")}return"fullOneLine"==option?address.Street1+(address.Street2?", "+address.Street2:"")+" "+address.City+", "+address.State+" "+address.Zip:address.Street1+(address.Street2?", "+address.Street2:"")}}angular.module("orderCloud").filter("address",AddressFilter)}(),function(){"use strict";function humanize(){return function(string){return string?string.replace(/([A-Z])/g," $1").replace(/^./,function(str){return str.toUpperCase()}).trim():void 0}}angular.module("orderCloud").filter("humanize",humanize)}(),function(){"use strict";function faCreditCard(){return function(type){var result="fa-credit-card-alt";if(!type)return result;switch(type.toLowerCase()){case"visa":result="fa-cc-visa";break;case"mastercard":result="fa-cc-mastercard";break;case"american express":result="fa-cc-amex";break;case"diners club":result="fa-cc-diners-club";break;case"discover":result="fa-cc-discover";break;case"jcb":result="fa-cc-jcb";break;default:result="fa-credit-card-alt"}return result}}angular.module("orderCloud").filter("faCreditCard",faCreditCard)}(),function(){"use strict";angular.module("orderCloud").config(["$uibModalProvider",function($uibModalProvider){$uibModalProvider.options.backdrop="static"}])}(),function(){"use strict";angular.module("orderCloud").config(["uibDatepickerConfig","uibDatepickerPopupConfig",function(uibDatepickerConfig,uibDatepickerPopupConfig){uibDatepickerConfig.showWeeks=!1,uibDatepickerPopupConfig.onOpenFocus=!1,uibDatepickerPopupConfig.showButtonBar=!1}])}(),function(){"use strict";angular.module("orderCloud").config(["toastrConfig",function(toastrConfig){angular.extend(toastrConfig,{containerId:"toast-container",maxOpened:5,newestOnTop:!0,positionClass:"toast-top-right",preventDuplicates:!1,preventOpenDuplicates:!0,progressBar:!0,tapToClose:!0,target:"body",extendedTimeOut:1e3,timeOut:4e3,iconClasses:{error:"alert-danger",info:"alert-info",success:"alert-success",warning:"alert-warning"},toastClass:"alert alert-dismissable",closeButton:!0,closeHtml:'<button type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>'})}])}(),function(){"use strict";angular.module("orderCloud").config(["$urlMatcherFactoryProvider","$locationProvider","$urlRouterProvider","defaultstate","html5mode",function($urlMatcherFactoryProvider,$locationProvider,$urlRouterProvider,defaultstate,html5mode){$urlMatcherFactoryProvider.strictMode(!1),$locationProvider.html5Mode(html5mode),$urlRouterProvider.otherwise(function($injector){$injector.get("$state").go(defaultstate)})}])}(),function(){"use strict";angular.module("orderCloud").value("ocIsTouchDevice",!1).config(["$provide",function($provide){$provide.decorator("ocIsTouchDevice",function(){var el=document.createElement("div");return el.setAttribute("ongesturestart","return;"),"function"==typeof el.ongesturestart})}])}(),function(){"use strict";angular.module("orderCloud").config(["ocRolesProvider",function(ocRolesProvider){var roleGroups=[{Name:"BuyerRoles",Type:"Any",Roles:["BuyerReader","BuyerAdmin"]},{Name:"ProductRoles",Type:"Any",Roles:["ProductReader","ProductAdmin"]},{Name:"OrderRoles",Type:"Any",Roles:["OrderReader","OrderAdmin"]},{Name:"AdminUserRoles",Type:"Any",Roles:["AdminUserReader","AdminUserAdmin"]},{Name:"AdminUserGroupRoles",Type:"Any",Roles:["AdminUserGroupReader","AdminUserGroupAdmin"]},{Name:"BuyerUserRoles",Type:"Any",Roles:["BuyerUserReader","BuyerUserAdmin"]},{Name:"UserGroupRoles",Type:"Any",Roles:["UserGroupReader","UserGroupAdmin"]},{Name:"CategoryRoles",Type:"Any",Roles:["CategoryReader","CategoryAdmin"]},{Name:"AddressRoles",Type:"Any",Roles:["AddressReader","AddressAdmin"]},{Name:"CreditCardRoles",Type:"Any",Roles:["CreditCardReader","CreditCardAdmin"]},{Name:"SpendingAccountRoles",Type:"Any",Roles:["SpendingAccountReader","SpendingAccountAdmin"]},{Name:"CostCenterRoles",Type:"Any",Roles:["CostCenterReader","CostCenterAdmin"]},{Name:"ApprovalRuleRoles",Type:"Any",Roles:["ApprovalRuleReader","ApprovalRuleAdmin"]},{Name:"PromotionRoles",Type:"Any",Roles:["PromotionReader","PromotionAdmin"]}];angular.forEach(roleGroups,function(roleGroup){ocRolesProvider.AddRoleGroup(roleGroup)})}])}(),function(){"use strict";angular.module("orderCloud").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$injector",function($q,$injector){return{responseError:function(rejection){return rejection.config.url.indexOf("ordercloud.io")>-1&&401==rejection.status&&$injector.get("LoginService").RememberMe(),rejection.config.url.indexOf("ordercloud.io")>-1&&403==rejection.status&&(rejection.data.Errors[0].Message="You do not have permission to do this."),$q.reject(rejection)}}}])}])}(),function(){"use strict";function LocalForage($localForageProvider){$localForageProvider.config({version:1,name:"OrderCloud",storeName:"four51",description:"Four51 OrderCloud Local Storage"})}LocalForage.$inject=["$localForageProvider"],angular.module("orderCloud").config(LocalForage)}(),function(){"use strict";angular.module("orderCloud").config(["$qProvider","$provide",function($qProvider,$provide){function handler($delegate,$injector){return function(ex,cause){ex&&($delegate(ex,cause),$injector.get("toastr").error(ex.data?ex.data.error||(ex.data.Errors?ex.data.Errors[0].Message:ex.data):ex.message,"Error"))}}handler.$inject=["$delegate","$injector"],$provide.value("ocErrorMessages",{customPassword:"Password must be at least eight characters long and include at least one letter and one number",positiveInteger:"Please enter a positive integer",ID_Name:"Only Alphanumeric characters, hyphens and underscores are allowed",confirmpassword:"Your passwords do not match",noSpecialChars:"Only Alphanumeric characters are allowed","Buyer.UnavailableID":"This ID is already in use.","LineItem.UnavailableID":"This ID is already in use.","User.UsernameMustBeUnique":"This username is already in use."}),$provide.decorator("$exceptionHandler",handler),$qProvider.errorOnUnhandledRejections(!1)}])}(),function(){"use strict";angular.module("orderCloud").config(["angularBusyDefaults",function(angularBusyDefaults){angular.extend(angularBusyDefaults,{templateUrl:"common/templates/view.loading.tpl.html",message:null,wrapperClass:"indicator-container"})}])}(),function(){"use strict";function HomeController(){}angular.module("orderCloud").controller("HomeCtrl",HomeController)}(),function(){"use strict";function HomeConfig($stateProvider){$stateProvider.state("home",{parent:"base",url:"/home",templateUrl:"home/templates/home.tpl.html",
controller:"HomeCtrl",controllerAs:"home"})}HomeConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(HomeConfig)}(),function(){"use strict";function CategoryViewTreeController(toastr,$state,$stateParams,CatalogViewManagement,CategoryTreeService,CategoryModalFactory,Tree,CatalogID){var vm=this;vm.tree=Tree,vm.catalogid=CatalogID,vm.categorySelected=function(category){CatalogViewManagement.SetCategoryID(category,vm.catalogid),vm.selectedCategory=category},$stateParams.preSelectID?vm.categorySelected($stateParams.preSelectID):vm.tree[0]&&vm.tree[0].ID&&vm.categorySelected(vm.tree[0].ID),vm.treeOptions={dropped:function(event){CategoryTreeService.UpdateCategoryNode(event,vm.catalogid)}},vm.createCategory=function(parentid){CategoryModalFactory.Create(parentid,vm.catalogid).then(function(newCategory){toastr.success(newCategory.Name+" was created."),$state.go("catalogManagement",{buyerID:vm.catalogid,activeTab:2},{reload:!0})})}}CategoryViewTreeController.$inject=["toastr","$state","$stateParams","CatalogViewManagement","CategoryTreeService","CategoryModalFactory","Tree","CatalogID"],angular.module("orderCloud").controller("CategoryViewTreeCtrl",CategoryViewTreeController)}(),function(){"use strict";function CategoryTreeService($q,OrderCloud){function tree(catalogid){var tree=[],deferred=$q.defer();return OrderCloud.Categories.List(null,1,100,null,null,null,"all",catalogid).then(function(list){function getnode(node){var children=_.where(list.Items,{ParentID:node.ID});return children.length>0?(node.children=children,angular.forEach(children,function(child){return getnode(child)})):node.children=[],node}var query=_.where(list.Items,{ParentID:null});angular.forEach(query,function(node){tree.push(getnode(node))}),deferred.resolve(tree)}),deferred.promise}function update(event,catalogid){function updateNodeList(nodeList){function run(i){nodeQueue[i]().then(function(){queueIndex++,queueIndex<nodeQueue.length?run(queueIndex):deferred.resolve()})}var deferred=$q.defer(),nodeQueue=[];angular.forEach(nodeList,function(cat,index){nodeQueue.push(function(){return OrderCloud.Categories.Patch(cat.ID,{ListOrder:index},catalogid)})});var queueIndex=0;return run(queueIndex),deferred.promise}function updateParentID(){var parentID,deferred=$q.defer();return parentID=event.dest.nodesScope.node?event.dest.nodesScope.node.ID:null,event.source.nodeScope.node.ParentID=parentID,OrderCloud.Categories.Update(event.source.nodeScope.node.ID,event.source.nodeScope.node,catalogid).then(function(){deferred.resolve()}),deferred.promise}var sourceParentNodeList=event.source.nodesScope.$modelValue,destParentNodeList=event.dest.nodesScope.$modelValue,masterDeferred=$q.defer();return updateNodeList(destParentNodeList).then(function(){sourceParentNodeList!=destParentNodeList&&(sourceParentNodeList.length?updateNodeList(sourceParentNodeList).then(function(){updateParentID().then(function(){masterDeferred.resolve()})}):updateParentID().then(function(){masterDeferred.resolve()}))}),masterDeferred.promise}return{GetCategoryTree:tree,UpdateCategoryNode:update}}function CategoryTreeConfig(treeConfig){treeConfig.treeClass="angular-ui-tree",treeConfig.emptyTreeClass="angular-ui-tree-empty",treeConfig.hiddenClass="angular-ui-tree-hidden",treeConfig.nodesClass="angular-ui-tree-nodes",treeConfig.nodeClass="angular-ui-tree-node",treeConfig.handleClass="angular-ui-tree-handle",treeConfig.placeholderClass="angular-ui-tree-placeholder",treeConfig.dragClass="angular-ui-tree-drag",treeConfig.dragThreshold=3,treeConfig.defaultCollapsed=!1,treeConfig.appendChildOnHover=!0}function CategoryTree(){return{restrict:"E",replace:!0,scope:{tree:"="},template:"<ul><category-node ng-repeat='node in tree' node='node'></category-node></ul>"}}function CategoryNode($compile){return{restrict:"E",replace:!0,scope:{node:"="},template:'<li><a ui-sref="base.adminCategories.edit({id:node.ID})" ng-bind-html="node.Name"></a></li>',link:function(scope,element){angular.isArray(scope.node.children)&&(element.append("<category-tree tree='node.children' />"),$compile(element.contents())(scope))}}}CategoryTreeService.$inject=["$q","OrderCloud"],CategoryTreeConfig.$inject=["treeConfig"],CategoryNode.$inject=["$compile"],angular.module("orderCloud").factory("CategoryTreeService",CategoryTreeService).config(CategoryTreeConfig).directive("categoryNode",CategoryNode).directive("categoryTree",CategoryTree)}(),function(){"use strict";function CategoryModalFactory($state,$exceptionHandler,OrderCloud,ocConfirm,$uibModal){function _create(parentid,catalogid){return $uibModal.open({templateUrl:"catalogManagement/categoryModalFactory/templates/create.html",controller:"CreateCategoryModalCtrl",controllerAs:"createCategory",size:"md",resolve:{ParentID:function(){return parentid},CatalogID:function(){return catalogid}}}).result}function _edit(categoryid,catalogid){return $uibModal.open({templateUrl:"catalogManagement/categoryModalFactory/templates/edit.html",controller:"EditCategoryModalCtrl",controllerAs:"editCategory",size:"md",resolve:{SelectedCategory:["OrderCloud",function(OrderCloud){return OrderCloud.Categories.Get(categoryid,catalogid)}],CatalogID:function(){return catalogid}}}).result}function _delete(id,catalogid){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+id+"</b>?",confirmText:"Delete category",type:"delete"}).then(function(){return OrderCloud.Categories.Delete(id,catalogid)})}var service={Create:_create,Edit:_edit,Delete:_delete};return service}function CreateCategoryModalController($state,$exceptionHandler,$uibModalInstance,OrderCloud,ParentID,CatalogID){function patchImage(imageXP){return OrderCloud.Categories.Patch(vm.category.ID,{xp:imageXP})}var vm=this;vm.category={},vm.category.ParentID=ParentID,vm.category.Active=!0,vm.catalogid=CatalogID,vm.patchImage=patchImage,vm.cancel=function(){$uibModalInstance.dismiss()},vm.submit=function(){""===vm.category.ParentID&&(vm.category.ParentID=null),vm.loading=OrderCloud.Categories.Create(vm.category,vm.catalogid).then(function(category){$uibModalInstance.close(category)})["catch"](function(ex){$exceptionHandler(ex)})}}function EditCategoryModalController($state,$exceptionHandler,$uibModalInstance,OrderCloud,SelectedCategory,CatalogID){function patchImage(imageXP){return OrderCloud.Categories.Patch(vm.category.ID,{xp:imageXP})}var vm=this;vm.category=angular.copy(SelectedCategory),vm.categoryName=SelectedCategory.Name,vm.catalogid=CatalogID,vm.patchImage=patchImage,vm.cancel=function(){$uibModalInstance.dismiss()},vm.submit=function(){""===vm.category.ParentID&&(vm.category.ParentID=null),vm.loading=OrderCloud.Categories.Update(SelectedCategory.ID,vm.category,vm.catalogid).then(function(category){$uibModalInstance.close(category)})["catch"](function(ex){$exceptionHandler(ex)})}}CategoryModalFactory.$inject=["$state","$exceptionHandler","OrderCloud","ocConfirm","$uibModal"],CreateCategoryModalController.$inject=["$state","$exceptionHandler","$uibModalInstance","OrderCloud","ParentID","CatalogID"],EditCategoryModalController.$inject=["$state","$exceptionHandler","$uibModalInstance","OrderCloud","SelectedCategory","CatalogID"],angular.module("orderCloud").factory("CategoryModalFactory",CategoryModalFactory).controller("CreateCategoryModalCtrl",CreateCategoryModalController).controller("EditCategoryModalCtrl",EditCategoryModalController)}(),function(){"use strict";function CatalogAssignmentsController($q,$exceptionHandler,toastr,$state,$rootScope,OrderCloud,CategoryModalFactory,ocRolesService,Tree,CatalogID,SelectedBuyer){function getProducts(page){OrderCloud.Categories.ListProductAssignments(vm.category.ID,null,page||1,vm.pageSize,vm.catalogID).then(function(assignmentList){if(vm.productIds=_.pluck(assignmentList.Items,"ProductID"),vm.productIds.length){var filter={ID:vm.productIds.join("|")};OrderCloud.Products.List(null,null,vm.pageSize,null,null,filter).then(function(productList){productList.Meta=assignmentList.Meta,vm.products=productList})}else vm.products=null})}function getUserGroups(page){OrderCloud.Categories.ListAssignments(vm.category.ID,null,null,null,page||1,vm.pageSize,vm.buyerID,vm.catalogID).then(function(assignmentList){var userGroupIDs=_.compact(_.pluck(assignmentList.Items,"UserGroupID"));if(userGroupIDs.length){if(ocRolesService.UserIsAuthorized(["UserGroupReader","UserGroupAdmin"],!0)){var filter={ID:userGroupIDs.join("|")};OrderCloud.UserGroups.List(null,null,vm.pageSize,null,null,filter,vm.buyerID).then(function(userGroupList){userGroupList.Meta=assignmentList.Meta,vm.userGroups=userGroupList})}}else vm.userGroups=null})}function isAssignedAtBuyerLevel(){OrderCloud.Categories.ListAssignments(vm.category.ID,null,null,"Company",null,null,vm.buyerID,vm.catalogID).then(function(buyerAssignment){vm.assignmentType=buyerAssignment.Meta.TotalCount?"buyer":"userGroups"})}function productPageChanged(){getProducts(vm.products.Meta.Page)}function userGroupPageChanged(){getUserGroups(vm.userGroups.Meta.Page)}function listAllProducts(product){return OrderCloud.Products.List(product).then(function(data){vm.uiSelectProducts=data})}function listAllUserGroups(userGroup){return OrderCloud.UserGroups.List(userGroup,null,null,null,null,null,vm.buyerID).then(function(data){vm.uiSelectedGroups=data})}function saveAssignment(){var productQueue=[],df=$q.defer();return angular.forEach(vm.selectedProducts,function(product){productQueue.push(OrderCloud.Categories.SaveProductAssignment({ProductID:product.ID,CategoryID:vm.category.ID},vm.catalogID))}),$q.all(productQueue).then(function(){df.resolve(),toastr.success("Products assigned to "+vm.category.Name)})["catch"](function(error){$exceptionHandler(error)})["finally"](function(){getProducts(),vm.selectedProducts=null}),df.promise}function savePartyAssignment(){var queue=[],dfd=$q.defer();angular.forEach(vm.selectedUserGroups,function(userGroup){var assignment={CategoryID:vm.category.ID,BuyerID:vm.buyerID,UserID:null,UserGroupID:userGroup.ID};queue.push(OrderCloud.Categories.SaveAssignment(assignment,vm.catalogID))}),$q.all(queue).then(function(){dfd.resolve(),toastr.success("User Groups assigned to "+vm.category.Name)})["catch"](function(error){$exceptionHandler(error)})["finally"](function(){getUserGroups(),vm.selectedUserGroups=null})}function toggleBuyerAssignment(){var assignment={CategoryID:vm.category.ID,BuyerID:vm.buyerID,UserID:null,UserGroupID:null};"buyer"===vm.assignmentType?OrderCloud.Categories.SaveAssignment(assignment,vm.catalogID).then(function(){toastr.success("Buyer organization assigned to "+vm.category.Name)})["catch"](function(error){$exceptionHandler(error)}):vm.deletePartyAssignment()}function deleteAssignment(product){OrderCloud.Categories.DeleteProductAssignment(vm.category.ID,product.ID,vm.catalogID).then(function(){toastr.success(product.Name+" removed from "+vm.category.Name)})["catch"](function(error){$exceptionHandler(error)})["finally"](function(){getProducts()})}function deletePartyAssignment(userGroup){var userGroupID=userGroup?userGroup.ID:null;OrderCloud.Categories.DeleteAssignment(vm.category.ID,null,userGroupID,vm.buyerID,vm.catalogID).then(function(){var party=userGroup?userGroup.Name:"Buyer organization";toastr.success(party+" removed from "+vm.category.Name),getUserGroups()})}var vm=this;vm.assignmentType="buyer",vm.productIds=null,vm.pageSize=10,vm.catalogID=CatalogID,vm.buyerID=SelectedBuyer.ID,vm.tree=Tree,vm.category=null,vm.products=null,vm.uiSelectProducts,vm.userGroups=null,vm.uiSelectedGroups,vm.selectedProducts=[],vm.selectedUserGroups=[],vm.deleteAssignment=deleteAssignment,vm.deletePartyAssignment=deletePartyAssignment,vm.listAllProducts=listAllProducts,vm.listAllUserGroups=listAllUserGroups,vm.productPageChanged=productPageChanged,vm.userGroupPageChanged=userGroupPageChanged,vm.saveAssignment=saveAssignment,vm.savePartyAssignment=savePartyAssignment,vm.toggleBuyerAssignment=toggleBuyerAssignment,vm.editCategory=function(id){CategoryModalFactory.Edit(id,vm.catalogID).then(function(data){toastr.success(data.Name+" was updated."),$state.go("catalogManagement",{buyerID:vm.catalogid,activeTab:2,preSelectID:data.ID},{reload:!0})})},vm.deleteCategory=function(id){CategoryModalFactory.Delete(id,vm.catalogID).then(function(){toastr.success(id+" was deleted."),$state.go("catalogManagement",{buyerID:vm.catalogid,activeTab:2},{reload:!0})})},$rootScope.$on("CatalogViewManagement:CategoryIDChanged",function(e,category){vm.category=category,getProducts(),getUserGroups(),isAssignedAtBuyerLevel()})}CatalogAssignmentsController.$inject=["$q","$exceptionHandler","toastr","$state","$rootScope","OrderCloud","CategoryModalFactory","ocRolesService","Tree","CatalogID","SelectedBuyer"],angular.module("orderCloud").controller("CatalogAssignmentsCtrl",CatalogAssignmentsController)}(),function(){"use strict";function BaseController(CurrentUser){var vm=this;vm.currentUser=CurrentUser,$("#GlobalNav").offcanvas({canvas:"body",placement:"left",toggle:!1}),vm.toggleGlobalNav=function(){$("#GlobalNav").offcanvas("toggle")}}BaseController.$inject=["CurrentUser"],angular.module("orderCloud").controller("BaseCtrl",BaseController)}(),function(){"use strict";function BaseConfig($stateProvider){$stateProvider.state("base",{url:"","abstract":!0,templateUrl:"base/templates/base.tpl.html",controller:"BaseCtrl",controllerAs:"base",resolve:{CurrentUser:["$q","$state","OrderCloud","LoginService",function($q,$state,OrderCloud,LoginService){return OrderCloud.Me.Get()["catch"](function(){LoginService.Logout()})}]}})}BaseConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(BaseConfig)}(),function(){"use strict";function OrderCloudAdminUsers($q,$uibModal,ocConfirm,OrderCloud){function _create(){return $uibModal.open({templateUrl:"adminUsers/templates/adminUserCreate.modal.html",controller:"AdminUserCreateModalCtrl",controllerAs:"adminUserCreateModal"}).result}function _edit(user){return $uibModal.open({templateUrl:"adminUsers/templates/adminUserEdit.modal.html",controller:"AdminUserEditModalCtrl",controllerAs:"adminUserEditModal",resolve:{SelectedUser:function(){return user}}}).result}function _delete(user){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+user.Username+"</b>?",confirmText:"Delete admin user",type:"delete"}).then(function(){return OrderCloud.AdminUsers.Delete(user.ID)})}function _getAssignments(usergroupid){return OrderCloud.AdminUserGroups.ListUserAssignments(usergroupid,null,null,100).then(function(data1){for(var df=$q.defer(),queue=[],totalPages=angular.copy(data1.Meta.TotalPages),currentPage=angular.copy(data1.Meta.Page);totalPages>=currentPage;)currentPage++,queue.push(OrderCloud.AdminUserGroups.ListUserAssignments(usergroupid,null,currentPage,100));return $q.all(queue).then(function(results){angular.forEach(results,function(r){data1.Items=data1.Items.concat(r.Items)}),df.resolve(data1.Items)}),df.promise})}function _mapAssignments(allAssignments,userList){return userList.Items=_.map(userList.Items,function(user){return user.Assigned=!1,angular.forEach(allAssignments,function(assignment){user.ID==assignment.UserID&&(user.Assigned=!0)}),user}),userList}function _compareAssignments(allAssignments,userList,userGroupID){var changedAssignments=[];return angular.forEach(userList.Items,function(user){var existingAssignment=_.where(allAssignments,{UserID:user.ID})[0];existingAssignment&&!user.Assigned?changedAssignments.push({old:existingAssignment,"new":null}):!existingAssignment&&user.Assigned&&changedAssignments.push({old:null,"new":{UserGroupID:userGroupID,UserID:user.ID}})}),changedAssignments}function _updateAssignments(allAssignments,changedAssignments){var df=$q.defer(),assignmentQueue=[],errors=[];return angular.forEach(changedAssignments,function(diff){!diff.old&&diff["new"]?assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.AdminUserGroups.SaveUserAssignment(diff["new"]).then(function(){allAssignments.push(diff["new"]),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}()):diff.old&&!diff["new"]&&assignmentQueue.push(function(){var d=$q.defer();return OrderCloud.AdminUserGroups.DeleteUserAssignment(diff.old.UserGroupID,diff.old.UserID).then(function(){allAssignments.splice(allAssignments.indexOf(diff.old),1),d.resolve()})["catch"](function(ex){errors.push(ex),d.resolve()}),d.promise}())}),$q.all(assignmentQueue).then(function(){df.resolve({UpdatedAssignments:allAssignments,Errors:errors})}),df.promise}var service={Create:_create,Edit:_edit,Delete:_delete,Assignments:{Get:_getAssignments,Map:_mapAssignments,Compare:_compareAssignments,Update:_updateAssignments}};return service}OrderCloudAdminUsers.$inject=["$q","$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocAdminUsers",OrderCloudAdminUsers)}(),function(){"use strict";function AdminUsersController($state,toastr,OrderCloud,ocAdminUsers,ocParameters,AdminUsersList,Parameters){var vm=this;vm.list=AdminUsersList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.AdminUsers.List(vm.parameters.search,1,vm.parameters.pageSize).then(function(data){vm.list=data,vm.searchResults=vm.parameters.search.length>0})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.AdminUsers.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})},vm.createUser=function(){ocAdminUsers.Create().then(function(newAdminUser){vm.list.Items.push(newAdminUser),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(newAdminUser.Username+" was created.")})},vm.editUser=function(scope){ocAdminUsers.Edit(scope.user).then(function(updatedAdminUser){vm.list.Items[scope.$index]=updatedAdminUser,toastr.success(updatedAdminUser.Username+" was updated.")})},vm.deleteUser=function(scope){ocAdminUsers.Delete(scope.user).then(function(){vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,toastr.success(scope.user.Username+" was deleted.")})}}AdminUsersController.$inject=["$state","toastr","OrderCloud","ocAdminUsers","ocParameters","AdminUsersList","Parameters"],angular.module("orderCloud").controller("AdminUsersCtrl",AdminUsersController)}(),function(){"use strict";function AdminUsersConfig($stateProvider){$stateProvider.state("adminUsers",{parent:"base",templateUrl:"adminUsers/templates/adminUsers.html",controller:"AdminUsersCtrl",controllerAs:"adminUsers",url:"/admin-users?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Admin Users"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],AdminUsersList:["OrderCloud","Parameters",function(OrderCloud,Parameters){return OrderCloud.AdminUsers.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters)}]}}).state("adminUserGroup.users",{url:"/users?search&page&pageSize&searchOn&sortBy&filters",templateUrl:"adminUsers/templates/adminUserGroupUsers.html",controller:"AdminUserGroupUsersCtrl",controllerAs:"adminUserGroupUsers",data:{pageTitle:"Admin User Group Members"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],CurrentAssignments:["$stateParams","ocAdminUsers",function($stateParams,ocAdminUsers){return ocAdminUsers.Assignments.Get($stateParams.adminusergroupid)}],UserList:["Parameters","CurrentAssignments","ocAdminUsers","OrderCloud",function(Parameters,CurrentAssignments,ocAdminUsers,OrderCloud){return OrderCloud.AdminUsers.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters).then(function(data){return ocAdminUsers.Assignments.Map(CurrentAssignments,data)})}]}})}AdminUsersConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(AdminUsersConfig)}(),function(){"use strict";function AdminUserGroupUsersController($exceptionHandler,$filter,$state,$stateParams,toastr,ocAdminUsers,OrderCloud,ocParameters,ocRolesService,UserList,CurrentAssignments,Parameters){function selectedCheck(){vm.allItemsSelected=_.where(vm.list.Items,{Assigned:!0}).length==vm.list.Items.length}function changedCheck(){vm.changedAssignments=ocAdminUsers.Assignments.Compare(CurrentAssignments,vm.list,$stateParams.adminusergroupid)}var vm=this;vm.list=UserList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go("adminUserGroup.users",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.AdminUsers.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters).then(function(data){vm.changedAssignments=[],vm.list=ocAdminUsers.Assignments.Map(CurrentAssignments,data),vm.searchResults=vm.parameters.search.length>0,selectedCheck()})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.AdminUsers.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters).then(function(data){var mappedData=ocAdminUsers.Assignments.Map(CurrentAssignments,data);vm.list.Items=vm.list.Items.concat(mappedData.Items),vm.list.Meta=mappedData.Meta,selectedCheck()})},selectedCheck(),vm.selectAllItems=function(){vm.allItemsSelected=!vm.allItemsSelected,_.map(vm.list.Items,function(i){i.Assigned=vm.allItemsSelected}),changedCheck()},vm.selectItem=function(scope){scope.user.Assigned||(vm.allItemsSelected=!1),changedCheck(),selectedCheck()},vm.resetAssignments=function(){vm.list=ocAdminUsers.Assignments.Map(CurrentAssignments,vm.list),vm.changedAssignments=[],selectedCheck()},vm.updateAssignments=function(){vm.searchLoading=ocAdminUsers.Assignments.Update(CurrentAssignments,vm.changedAssignments).then(function(data){angular.forEach(data.Errors,function(ex){$exceptionHandler(ex)}),CurrentAssignments=data.UpdatedAssignments,changedCheck(),selectedCheck()})},vm.createUser=function(){function _updateList(n){vm.list.Items.push(n),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(n.Username+" was created.")}ocAdminUsers.Create().then(function(newAdminUser){if(ocRolesService.UserIsAuthorized(["AdminUserGroupAdmin"])){var newAssignment={UserID:newAdminUser.ID,UserGroupID:$stateParams.adminusergroupid};vm.searchLoading=OrderCloud.AdminUserGroups.SaveUserAssignment(newAssignment).then(function(){newAdminUser.Assigned=!0,CurrentAssignments.push(newAssignment),_updateList(newAdminUser)})["catch"](function(){newAdminUser.Assigned=!1,_updateList(newAdminUser)})}else newAdminUser.Assigned=!1,_updateList(newAdminUser)})},vm.editUser=function(scope){ocAdminUsers.Edit(scope.user).then(function(updatedAdminUser){updatedAdminUser.Assigned=vm.list.Items[scope.$index].Assigned,vm.list.Items[scope.$index]=updatedAdminUser,updatedAdminUser.ID!=scope.user.ID&&(_.map(CurrentAssignments,function(assignment){return assignment.UserID==scope.user.ID&&(assignment.UserID=updatedAdminUser.ID),assignment}),changedCheck()),toastr.success(updatedAdminUser.Username+" was updated.")})},vm.deleteUser=function(scope){ocAdminUsers.Delete(scope.user).then(function(){toastr.success(scope.user.Username+" was deleted."),vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,changedCheck()})}}AdminUserGroupUsersController.$inject=["$exceptionHandler","$filter","$state","$stateParams","toastr","ocAdminUsers","OrderCloud","ocParameters","ocRolesService","UserList","CurrentAssignments","Parameters"],angular.module("orderCloud").controller("AdminUserGroupUsersCtrl",AdminUserGroupUsersController)}(),function(){"use strict";function AdminUserEditModalController($exceptionHandler,$uibModalInstance,OrderCloud,SelectedUser){var vm=this;vm.user=angular.copy(SelectedUser),vm.username=SelectedUser.Username,vm.fullName=SelectedUser.FirstName?SelectedUser.FirstName+(SelectedUser.LastName?" "+SelectedUser.LastName:""):SelectedUser.LastName?SelectedUser.LastName:null,null!=vm.user.TermsAccepted&&(vm.TermsAccepted=!0),vm.submit=function(){var today=new Date;vm.user.TermsAccepted=today,vm.loading={backdrop:!1},vm.loading.promise=OrderCloud.AdminUsers.Update(vm.user.ID,vm.user).then(function(data){$uibModalInstance.close(data)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}AdminUserEditModalController.$inject=["$exceptionHandler","$uibModalInstance","OrderCloud","SelectedUser"],angular.module("orderCloud").controller("AdminUserEditModalCtrl",AdminUserEditModalController)}(),function(){"use strict";function AdminUserCreateModalController($exceptionHandler,$uibModalInstance,OrderCloud){var vm=this;vm.user={Active:!1},vm.submit=function(){vm.user.TermsAccepted=new Date,vm.loading={backdrop:!1},vm.loading.promise=OrderCloud.AdminUsers.Create(vm.user).then(function(data){$uibModalInstance.close(data)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}AdminUserCreateModalController.$inject=["$exceptionHandler","$uibModalInstance","OrderCloud"],angular.module("orderCloud").controller("AdminUserCreateModalCtrl",AdminUserCreateModalController)}(),function(){"use strict";function OrderCloudAdminUserGroups($uibModal,ocConfirm,OrderCloud){function _create(){return $uibModal.open({templateUrl:"adminUserGroups/templates/adminUserGroupCreate.modal.html",controller:"AdminUserGroupCreateModalCtrl",controllerAs:"adminUserGroupCreateModal"}).result}function _delete(userGroup){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+userGroup.Name+"</b>?",confirmText:"Delete admin user group",type:"delete"}).then(function(){return OrderCloud.AdminUserGroups.Delete(userGroup.ID)})}var service={Create:_create,Delete:_delete};return service}OrderCloudAdminUserGroups.$inject=["$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocAdminUserGroups",OrderCloudAdminUserGroups)}(),function(){"use strict";function AdminUserGroupsController($state,toastr,OrderCloud,ocAdminUserGroups,ocParameters,AdminUserGroupList,Parameters){var vm=this;vm.list=AdminUserGroupList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.AdminUserGroups.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters,vm.parameters.buyerid).then(function(data){vm.list=data,vm.searchResults=vm.parameters.search.length>0})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.AdminUserGroups.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})},vm.createGroup=function(){ocAdminUserGroups.Create().then(function(newUserGroup){toastr.success(newUserGroup.Name+" was created."),$state.go("adminUserGroup",{adminusergroupid:newUserGroup.ID})})},vm.deleteGroup=function(scope){ocAdminUserGroups.Delete(scope.adminUserGroup).then(function(){vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,toastr.success(scope.adminUserGroup.Name+" was deleted.")})}}AdminUserGroupsController.$inject=["$state","toastr","OrderCloud","ocAdminUserGroups","ocParameters","AdminUserGroupList","Parameters"],angular.module("orderCloud").controller("AdminUserGroupsCtrl",AdminUserGroupsController)}(),function(){"use strict";function AdminUserGroupsConfig($stateProvider){$stateProvider.state("adminUserGroups",{parent:"base",templateUrl:"adminUserGroups/templates/adminUserGroups.html",controller:"AdminUserGroupsCtrl",controllerAs:"adminUserGroups",url:"/admin-user-groups?search&page&pageSize&sortBy&searchOn&filters",data:{pageTitle:"Admin User Groups"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],AdminUserGroupList:["OrderCloud","Parameters",function(OrderCloud,Parameters){return OrderCloud.AdminUserGroups.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters)}]}}).state("adminUserGroup",{parent:"base",url:"/admin-user-groups/:adminusergroupid",templateUrl:"adminUserGroups/templates/adminUserGroup.html",controller:"AdminUserGroupCtrl",controllerAs:"adminUserGroup",data:{pageTitle:"Admin User Group"},resolve:{SelectedAdminUserGroup:["$stateParams","OrderCloud",function($stateParams,OrderCloud){return OrderCloud.AdminUserGroups.Get($stateParams.adminusergroupid)}]}})}AdminUserGroupsConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(AdminUserGroupsConfig)}(),function(){"use strict";function AdminUserGroupCreateModalController($uibModalInstance,$exceptionHandler,OrderCloud){var vm=this;vm.submit=function(){vm.loading=OrderCloud.AdminUserGroups.Create(vm.userGroup).then(function(data){$uibModalInstance.close(data)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}AdminUserGroupCreateModalController.$inject=["$uibModalInstance","$exceptionHandler","OrderCloud"],angular.module("orderCloud").controller("AdminUserGroupCreateModalCtrl",AdminUserGroupCreateModalController)}(),function(){"use strict";function AdminUserGroupController($state,toastr,OrderCloud,ocAdminUserGroups,SelectedAdminUserGroup){var vm=this;vm.group=SelectedAdminUserGroup,vm.model=angular.copy(SelectedAdminUserGroup),vm.update=function(){OrderCloud.AdminUserGroups.Update(vm.group.ID,vm.model).then(function(updatedUserGroup){updatedUserGroup.ID!=vm.group.ID&&$state.go(".",{adminusergroupid:updatedUserGroup.ID},{notify:!1}),vm.group=updatedUserGroup,vm.model=angular.copy(updatedUserGroup),SelectedAdminUserGroup=angular.copy(updatedUserGroup),toastr.success(vm.group.Name+" was updated.");
})},vm["delete"]=function(){ocAdminUserGroups.Delete(vm.group).then(function(){toastr.success(vm.group.Name+" was deleted."),$state.go("adminUserGroups")})}}AdminUserGroupController.$inject=["$state","toastr","OrderCloud","ocAdminUserGroups","SelectedAdminUserGroup"],angular.module("orderCloud").controller("AdminUserGroupCtrl",AdminUserGroupController)}(),function(){"use strict";function OrderCloudAdminAddresses($uibModal,ocConfirm,OrderCloud){function _create(){return $uibModal.open({templateUrl:"adminAddresses/templates/adminAddressCreate.modal.html",controller:"AdminAddressCreateModalCtrl",controllerAs:"adminAddressCreateModal"}).result}function _edit(address){return $uibModal.open({templateUrl:"adminAddresses/templates/adminAddressEdit.modal.html",controller:"AdminAddressEditModalCtrl",controllerAs:"adminAddressEditModal",resolve:{SelectedAddress:function(){return address}}}).result}function _delete(address){return ocConfirm.Confirm({message:"Are you sure you want to delete <br> <b>"+(address.AddressName?address.AddressName:address.ID)+"</b>?",confirmText:"Delete admin address",type:"delete"}).then(function(){return OrderCloud.AdminAddresses.Delete(address.ID)})}var service={Create:_create,Edit:_edit,Delete:_delete};return service}OrderCloudAdminAddresses.$inject=["$uibModal","ocConfirm","OrderCloud"],angular.module("orderCloud").factory("ocAdminAddresses",OrderCloudAdminAddresses)}(),function(){"use strict";function AdminAddressesController($state,toastr,OrderCloud,ocAdminAddresses,ocParameters,AddressList,Parameters){var vm=this;vm.list=AddressList,vm.parameters=Parameters,vm.sortSelection=Parameters.sortBy?0==Parameters.sortBy.indexOf("!")?Parameters.sortBy.split("!")[1]:Parameters.sortBy:null,vm.searchResults=Parameters.search&&Parameters.search.length>0,vm.filter=function(resetPage){$state.go(".",ocParameters.Create(vm.parameters,resetPage))},vm.search=function(){$state.go(".",ocParameters.Create(vm.parameters,!0),{notify:!1}),vm.searchLoading=OrderCloud.AdminAddresses.List(vm.parameters.search,1,vm.parameters.pageSize,vm.parameters.searchOn,vm.parameters.sortBy,vm.parameters.filters).then(function(data){vm.list=data,vm.searchResults=vm.parameters.search.length>0})},vm.clearSearch=function(){vm.parameters.search=null,vm.filter(!0)},vm.updateSort=function(value){switch(value?angular.noop():value=vm.sortSelection,vm.parameters.sortBy){case value:vm.parameters.sortBy="!"+value;break;case"!"+value:vm.parameters.sortBy=null;break;default:vm.parameters.sortBy=value}vm.filter(!1)},vm.pageChanged=function(){$state.go(".",{page:vm.list.Meta.Page})},vm.loadMore=function(){return OrderCloud.AdminAddresses.List(Parameters.search,vm.list.Meta.Page+1,Parameters.pageSize||vm.list.Meta.PageSize,Parameters.searchOn,Parameters.filters).then(function(data){vm.list.Items=vm.list.Items.concat(data.Items),vm.list.Meta=data.Meta})},vm.createAddress=function(){ocAdminAddresses.Create().then(function(newAddress){vm.list.Items.push(newAddress),vm.list.Meta.TotalCount++,vm.list.Meta.ItemRange[1]++,toastr.success(newAddress.AddressName+" was created.")})},vm.editAddress=function(scope){ocAdminAddresses.Edit(scope.adminAddress).then(function(updatedAddress){vm.list.Items[scope.$index]=updatedAddress,toastr.success(updatedAddress.AddressName+" was updated.")})},vm.deleteAddress=function(scope){ocAdminAddresses.Delete(scope.adminAddress).then(function(){vm.list.Items.splice(scope.$index,1),vm.list.Meta.TotalCount--,vm.list.Meta.ItemRange[1]--,toastr.success(scope.adminAddress.AddressName+" was deleted.")})}}AdminAddressesController.$inject=["$state","toastr","OrderCloud","ocAdminAddresses","ocParameters","AddressList","Parameters"],angular.module("orderCloud").controller("AdminAddressesCtrl",AdminAddressesController)}(),function(){"use strict";function AdminAddressesConfig($stateProvider){$stateProvider.state("adminAddresses",{parent:"base",templateUrl:"adminAddresses/templates/adminAddresses.html",controller:"AdminAddressesCtrl",controllerAs:"adminAddresses",url:"/admin-addresses?search&page&pageSize&searchOn&sortBy&filters",data:{pageTitle:"Admin Addresses"},resolve:{Parameters:["$stateParams","ocParameters",function($stateParams,ocParameters){return ocParameters.Get($stateParams)}],AddressList:["OrderCloud","Parameters",function(OrderCloud,Parameters){return OrderCloud.AdminAddresses.List(Parameters.search,Parameters.page,Parameters.pageSize,Parameters.searchOn,Parameters.sortBy,Parameters.filters)}]}})}AdminAddressesConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(AdminAddressesConfig)}(),function(){"use strict";function AdminAddressEditModalController($timeout,$uibModalInstance,$exceptionHandler,$scope,OrderCloud,ocGeography,SelectedAddress){var vm=this;vm.adminAddress=angular.copy(SelectedAddress),vm.adminAddressName=SelectedAddress.AddressName,vm.countries=ocGeography.Countries,vm.states=ocGeography.States,$scope.$watch(function(){return vm.adminAddress.Country},function(n,o){n&&n!=o&&(vm.adminAddress.State=null,$timeout(function(){vm.form.State.$$element.focus()},100))}),vm.submit=function(){OrderCloud.AdminAddresses.Update(SelectedAddress.ID,vm.adminAddress).then(function(updatedAddress){$uibModalInstance.close(updatedAddress)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}AdminAddressEditModalController.$inject=["$timeout","$uibModalInstance","$exceptionHandler","$scope","OrderCloud","ocGeography","SelectedAddress"],angular.module("orderCloud").controller("AdminAddressEditModalCtrl",AdminAddressEditModalController)}(),function(){"use strict";function AdminAddressCreateModalController($timeout,$uibModalInstance,$exceptionHandler,$scope,OrderCloud,ocGeography){var vm=this;vm.adminAddress={Country:"US"},vm.countries=ocGeography.Countries,vm.states=ocGeography.States,$scope.$watch(function(){return vm.adminAddress.Country},function(n,o){n&&n!=o&&(vm.adminAddress.State=null,$timeout(function(){vm.form.State.$$element.focus()},100))}),vm.submit=function(){vm.loading=OrderCloud.AdminAddresses.Create(vm.adminAddress).then(function(newAddress){$uibModalInstance.close(newAddress)})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}AdminAddressCreateModalController.$inject=["$timeout","$uibModalInstance","$exceptionHandler","$scope","OrderCloud","ocGeography"],angular.module("orderCloud").controller("AdminAddressCreateModalCtrl",AdminAddressCreateModalController)}(),function(){"use strict";function ConfirmPasswordModalController($exceptionHandler,$uibModalInstance,CurrentUser,$cookies,OrderCloud,appname){var vm=this;vm.submit=function(){var checkPasswordCredentials={Username:CurrentUser.Username,Password:vm.password};OrderCloud.Auth.GetToken(checkPasswordCredentials).then(function(){var expiresIn=new Date;expiresIn.setMinutes(expiresIn.getMinutes()+20),$cookies.put("oc_has_confirmed."+appname,!0,{expires:expiresIn}),$uibModalInstance.close()})["catch"](function(ex){$exceptionHandler(ex),vm.password=null,vm.form.ConfirmPassword.$$element.focus()})},vm.cancel=function(){$uibModalInstance.dismiss()}}ConfirmPasswordModalController.$inject=["$exceptionHandler","$uibModalInstance","CurrentUser","$cookies","OrderCloud","appname"],angular.module("orderCloud").controller("ConfirmPasswordModalCtrl",ConfirmPasswordModalController)}(),function(){"use strict";function ChangePasswordModalController($exceptionHandler,OrderCloud,$uibModalInstance,CurrentUser){var vm=this;vm.currentUser=CurrentUser,vm.submit=function(){var checkPasswordCredentials={Username:vm.currentUser.Username,Password:vm.currentUser.CurrentPassword};return vm.loading=OrderCloud.Auth.GetToken(checkPasswordCredentials).then(function(){return OrderCloud.Me.Patch({Password:vm.currentUser.NewPassword}).then(function(updatedUser){$uibModalInstance.close(updatedUser)})})["catch"](function(ex){$exceptionHandler(ex)})},vm.cancel=function(){$uibModalInstance.dismiss()}}ChangePasswordModalController.$inject=["$exceptionHandler","OrderCloud","$uibModalInstance","CurrentUser"],angular.module("orderCloud").controller("ChangePasswordModalCtrl",ChangePasswordModalController)}(),function(){"use strict";function OrderCloudAccountService($q,$uibModal,$cookies,appname){function _confirmPassword(currentUser){var hasConfirmed=$cookies.get("oc_has_confirmed."+appname);if(hasConfirmed){var df=$q.defer();return df.resolve(),df.promise}return $uibModal.open({animation:!0,templateUrl:"account/templates/confirmPassword.modal.html",controller:"ConfirmPasswordModalCtrl",controllerAs:"confirmPasswordModal",size:"confirm",resolve:{CurrentUser:function(){return currentUser}}}).result}function _changePassword(currentUser){return $uibModal.open({animation:!0,templateUrl:"account/templates/changePassword.modal.html",controller:"ChangePasswordModalCtrl",controllerAs:"changePasswordModal",backdrop:"static",size:"confirm",resolve:{CurrentUser:function(){return currentUser}}}).result}var service={ConfirmPassword:_confirmPassword,ChangePassword:_changePassword};return service}OrderCloudAccountService.$inject=["$q","$uibModal","$cookies","appname"],angular.module("orderCloud").factory("ocAccount",OrderCloudAccountService)}(),function(){"use strict";function AccountController($exceptionHandler,CurrentUser,ocAccount,OrderCloud,toastr){var vm=this;vm.profile=angular.copy(CurrentUser),vm.currentUser=CurrentUser,vm.usernameChange=function(){vm.settingsForm.Username.$setValidity("User.UsernameMustBeUnique",!0)},vm.updateProfile=function(){ocAccount.ConfirmPassword(vm.currentUser).then(function(){vm.profileUpdateLoading=OrderCloud.Me.Patch(_.pick(vm.profile,["FirstName","LastName","Email","Phone"])).then(function(updatedUser){vm.profile=angular.copy(updatedUser),vm.currentUser=updatedUser,vm.profileForm.$setPristine(),toastr.success("Your profile information was updated.")})})},vm.updateUsername=function(){ocAccount.ConfirmPassword(vm.currentUser).then(function(){vm.profileUpdateLoading=OrderCloud.Me.Patch(_.pick(vm.profile,"Username")).then(function(updatedUser){vm.profile=angular.copy(updatedUser),vm.currentUser=updatedUser,vm.settingsForm.$setPristine(),toastr.success("Your username was updated.")})["catch"](function(ex){console.log(ex),409==ex.status&&vm.settingsForm.Username.$setValidity(ex.data.Errors[0].ErrorCode,!1),$exceptionHandler(ex)})})},vm.changePassword=function(){ocAccount.ChangePassword(vm.currentUser).then(function(updatedUser){vm.profile=angular.copy(updatedUser),vm.currentUser=updatedUser,toastr.success("Your password was successfully changed. Next time you log in you will have to use your new password.")})}}AccountController.$inject=["$exceptionHandler","CurrentUser","ocAccount","OrderCloud","toastr"],angular.module("orderCloud").controller("AccountCtrl",AccountController)}(),function(){"use strict";function AccountConfig($stateProvider){$stateProvider.state("account",{parent:"base",url:"/account",templateUrl:"account/templates/account.html",controller:"AccountCtrl",controllerAs:"account",data:{pageTitle:"My Account"}})}AccountConfig.$inject=["$stateProvider"],angular.module("orderCloud").config(AccountConfig)}(),function(){"use strict";function CatalogManagementConfig($stateProvider){$stateProvider.state("catalogManagement",{parent:"buyer",params:{preSelectID:void 0},url:"/catalog",resolve:{CatalogID:["SelectedBuyer",function(SelectedBuyer){return SelectedBuyer.DefaultCatalogID}],Tree:["CategoryTreeService","CatalogID",function(CategoryTreeService,CatalogID){return CategoryTreeService.GetCategoryTree(CatalogID)}]},views:{"":{templateUrl:"catalogManagement/templates/catalogManagement.html",controller:"CatalogManagementCtrl",controllerAs:"catalogManagement"},"category-tree@catalogManagement":{templateUrl:"catalogManagement/categoryTreeView/templates/categoryTreeView.html",controller:"CategoryViewTreeCtrl",controllerAs:"categoryTree"},"assignments@catalogManagement":{templateUrl:"catalogManagement/assignmentsView/templates/assignmentsView.html",controller:"CatalogAssignmentsCtrl",controllerAs:"catalogAssignments"}},data:{pageTitle:"Buyer Catalog"}})}function CatalogManagementController($rootScope,Tree,CatalogID){var vm=this;vm.tree=Tree,vm.catalogid=CatalogID,vm.selectedCategory=null,$rootScope.$on("CatalogViewManagement:CategoryIDChanged",function(e,category){vm.selectedCategory=category})}function CatalogViewManagement($rootScope,OrderCloud){function GetCategoryID(){return categoryid}function SetCategoryID(category,catalogid){categoryid=category,OrderCloud.Categories.Get(category,catalogid).then(function(data){$rootScope.$broadcast("CatalogViewManagement:CategoryIDChanged",data)})}var service={GetCategoryID:GetCategoryID,SetCategoryID:SetCategoryID},categoryid=null;return service}CatalogManagementConfig.$inject=["$stateProvider"],CatalogManagementController.$inject=["$rootScope","Tree","CatalogID"],CatalogViewManagement.$inject=["$rootScope","OrderCloud"],angular.module("orderCloud").config(CatalogManagementConfig).controller("CatalogManagementCtrl",CatalogManagementController).factory("CatalogViewManagement",CatalogViewManagement)}(),function(){"use strict";function AppRun(ocStateLoading,defaultErrorMessageResolver,ocErrorMessages){ocStateLoading.Init(),defaultErrorMessageResolver.getErrorMessages().then(function(errorMessages){angular.extend(errorMessages,ocErrorMessages)})}AppRun.$inject=["ocStateLoading","defaultErrorMessageResolver","ocErrorMessages"],angular.module("orderCloud").run(AppRun)}(),function(){"use strict";function AppController($state,$ocMedia,LoginService,appname,ocStateLoading,ocIsTouchDevice,ocRolesService){var vm=this;vm.name=appname,vm.$state=$state,vm.$ocMedia=$ocMedia,vm.isTouchDevice=ocIsTouchDevice,vm.stateLoading=ocStateLoading.Watch,vm.logout=LoginService.Logout,vm.userIsAuthorized=ocRolesService.UserIsAuthorized}AppController.$inject=["$state","$ocMedia","LoginService","appname","ocStateLoading","ocIsTouchDevice","ocRolesService"],angular.module("orderCloud").controller("AppCtrl",AppController)}();